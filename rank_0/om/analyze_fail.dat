# [No.1] construct_wrapper.35
# In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(295)/    def construct(self, *inputs):/
funcgraph fg_35(
        %para1 : Tensor(F32)[8, 4, 32, 112, 112]    # inputs0
        , %para2 : Tensor(I64)[8]    # inputs1
        , %para3 : Ref[Tensor(F32)][]    # optimizer_rgb.momentum
        , %para4 : Ref[Tensor(F32)][]    # optimizer_depth.momentum
        , %para5 : Ref[Tensor(F32)][250]    # optimizer_rgb.learning_rate.learning_rate
        , %para6 : Ref[Tensor(F32)][250]    # optimizer_depth.learning_rate.learning_rate
        , %para7 : Ref[Tensor(I32)][1]    # optimizer_rgb.global_step
        , %para8 : Ref[Tensor(I32)][1]    # optimizer_depth.global_step
        , %para9 : Ref[Tensor(F32)][10]    # network.rgb.fc.bias
        , %para10 : Ref[Tensor(F32)][10, 2048]    # network.rgb.fc.weight
        , %para11 : Ref[Tensor(F32)][10]    # network.depth.fc.bias
        , %para12 : Ref[Tensor(F32)][10, 2048]    # network.depth.fc.weight
        , %para13 : Ref[Tensor(F32)][64, 3, 3, 7, 7]    # network.rgb.conv1.weight
        , %para14 : Ref[Tensor(F32)][64, 1, 7, 7, 7]    # network.depth.conv1.weight
        , %para15 : Ref[Tensor(F32)][2048]    # network.mmtm4.fc_rgb.bias
        , %para16 : Ref[Tensor(F32)][2048, 2048]    # network.mmtm4.fc_rgb.weight
        , %para17 : Ref[Tensor(F32)][2048]    # network.mmtm4.fc_depth.bias
        , %para18 : Ref[Tensor(F32)][2048, 2048]    # network.mmtm4.fc_depth.weight
        , %para19 : Ref[Tensor(F32)][64]    # network.rgb.bn1.bn2d.gamma
        , %para20 : Ref[Tensor(F32)][64]    # network.rgb.bn1.bn2d.beta
        , %para21 : Ref[Tensor(F32)][64]    # network.rgb.bn1.bn2d.moving_mean
        , %para22 : Ref[Tensor(F32)][64]    # network.rgb.bn1.bn2d.moving_variance
        , %para23 : Ref[Tensor(F32)][64]    # network.depth.bn1.bn2d.gamma
        , %para24 : Ref[Tensor(F32)][64]    # network.depth.bn1.bn2d.beta
        , %para25 : Ref[Tensor(F32)][64]    # network.depth.bn1.bn2d.moving_mean
        , %para26 : Ref[Tensor(F32)][64]    # network.depth.bn1.bn2d.moving_variance
        , %para27 : Ref[Tensor(F32)][1024]    # network.mmtm3.fc_rgb.bias
        , %para28 : Ref[Tensor(F32)][1024, 1024]    # network.mmtm3.fc_rgb.weight
        , %para29 : Ref[Tensor(F32)][1024]    # network.mmtm3.fc_depth.bias
        , %para30 : Ref[Tensor(F32)][1024, 1024]    # network.mmtm3.fc_depth.weight
        , %para31 : Ref[Tensor(F32)][2048]    # network.mmtm4.fc_squeeze.bias
        , %para32 : Ref[Tensor(F32)][2048, 4096]    # network.mmtm4.fc_squeeze.weight
        , %para33 : Ref[Tensor(F32)][512]    # network.mmtm2.fc_rgb.bias
        , %para34 : Ref[Tensor(F32)][512, 512]    # network.mmtm2.fc_rgb.weight
        , %para35 : Ref[Tensor(F32)][512]    # network.mmtm2.fc_depth.bias
        , %para36 : Ref[Tensor(F32)][512, 512]    # network.mmtm2.fc_depth.weight
        , %para37 : Ref[Tensor(F32)][1024]    # network.mmtm3.fc_squeeze.bias
        , %para38 : Ref[Tensor(F32)][1024, 2048]    # network.mmtm3.fc_squeeze.weight
        , %para39 : Ref[Tensor(F32)][2048, 1024, 1, 1, 1]    # network.rgb.layer4.0.conv3.weight
        , %para40 : Ref[Tensor(F32)][2048, 1024, 1, 1, 1]    # network.rgb.layer4.1.conv3.weight
        , %para41 : Ref[Tensor(F32)][2048, 1024, 1, 1, 1]    # network.rgb.layer4.2.conv3.weight
        , %para42 : Ref[Tensor(F32)][2048, 1024, 1, 1, 1]    # network.depth.layer4.0.conv3.weight
        , %para43 : Ref[Tensor(F32)][2048, 1024, 1, 1, 1]    # network.depth.layer4.1.conv3.weight
        , %para44 : Ref[Tensor(F32)][2048, 1024, 1, 1, 1]    # network.depth.layer4.2.conv3.weight
        , %para45 : Ref[Tensor(F32)][256]    # network.mmtm1.fc_rgb.bias
        , %para46 : Ref[Tensor(F32)][256, 256]    # network.mmtm1.fc_rgb.weight
        , %para47 : Ref[Tensor(F32)][256]    # network.mmtm1.fc_depth.bias
        , %para48 : Ref[Tensor(F32)][256, 256]    # network.mmtm1.fc_depth.weight
        , %para49 : Ref[Tensor(F32)][512]    # network.mmtm2.fc_squeeze.bias
        , %para50 : Ref[Tensor(F32)][512, 1024]    # network.mmtm2.fc_squeeze.weight
        , %para51 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.rgb.layer3.0.conv3.weight
        , %para52 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.rgb.layer3.1.conv3.weight
        , %para53 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.rgb.layer3.2.conv3.weight
        , %para54 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.rgb.layer3.3.conv3.weight
        , %para55 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.rgb.layer3.4.conv3.weight
        , %para56 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.rgb.layer3.5.conv3.weight
        , %para57 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.rgb.layer3.6.conv3.weight
        , %para58 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.rgb.layer3.7.conv3.weight
        , %para59 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.rgb.layer3.8.conv3.weight
        , %para60 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.rgb.layer3.9.conv3.weight
        , %para61 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.rgb.layer3.10.conv3.weight
        , %para62 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.rgb.layer3.11.conv3.weight
        , %para63 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.rgb.layer3.12.conv3.weight
        , %para64 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.rgb.layer3.13.conv3.weight
        , %para65 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.rgb.layer3.14.conv3.weight
        , %para66 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.rgb.layer3.15.conv3.weight
        , %para67 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.rgb.layer3.16.conv3.weight
        , %para68 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.rgb.layer3.17.conv3.weight
        , %para69 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.rgb.layer3.18.conv3.weight
        , %para70 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.rgb.layer3.19.conv3.weight
        , %para71 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.rgb.layer3.20.conv3.weight
        , %para72 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.rgb.layer3.21.conv3.weight
        , %para73 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.rgb.layer3.22.conv3.weight
        , %para74 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.depth.layer3.0.conv3.weight
        , %para75 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.depth.layer3.1.conv3.weight
        , %para76 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.depth.layer3.2.conv3.weight
        , %para77 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.depth.layer3.3.conv3.weight
        , %para78 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.depth.layer3.4.conv3.weight
        , %para79 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.depth.layer3.5.conv3.weight
        , %para80 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.depth.layer3.6.conv3.weight
        , %para81 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.depth.layer3.7.conv3.weight
        , %para82 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.depth.layer3.8.conv3.weight
        , %para83 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.depth.layer3.9.conv3.weight
        , %para84 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.depth.layer3.10.conv3.weight
        , %para85 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.depth.layer3.11.conv3.weight
        , %para86 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.depth.layer3.12.conv3.weight
        , %para87 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.depth.layer3.13.conv3.weight
        , %para88 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.depth.layer3.14.conv3.weight
        , %para89 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.depth.layer3.15.conv3.weight
        , %para90 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.depth.layer3.16.conv3.weight
        , %para91 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.depth.layer3.17.conv3.weight
        , %para92 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.depth.layer3.18.conv3.weight
        , %para93 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.depth.layer3.19.conv3.weight
        , %para94 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.depth.layer3.20.conv3.weight
        , %para95 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.depth.layer3.21.conv3.weight
        , %para96 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.depth.layer3.22.conv3.weight
        , %para97 : Ref[Tensor(F32)][2048, 1024, 1, 1, 1]    # network.rgb.layer4.0.downsample.0.weight
        , %para98 : Ref[Tensor(F32)][2048, 1024, 1, 1, 1]    # network.depth.layer4.0.downsample.0.weight
        , %para99 : Ref[Tensor(F32)][256]    # network.mmtm1.fc_squeeze.bias
        , %para100 : Ref[Tensor(F32)][256, 512]    # network.mmtm1.fc_squeeze.weight
        , %para101 : Ref[Tensor(F32)][512, 256, 1, 1, 1]    # network.rgb.layer2.0.conv3.weight
        , %para102 : Ref[Tensor(F32)][512, 256, 1, 1, 1]    # network.rgb.layer2.1.conv3.weight
        , %para103 : Ref[Tensor(F32)][512, 256, 1, 1, 1]    # network.rgb.layer2.2.conv3.weight
        , %para104 : Ref[Tensor(F32)][512, 256, 1, 1, 1]    # network.rgb.layer2.3.conv3.weight
        , %para105 : Ref[Tensor(F32)][512, 256, 1, 1, 1]    # network.depth.layer2.0.conv3.weight
        , %para106 : Ref[Tensor(F32)][512, 256, 1, 1, 1]    # network.depth.layer2.1.conv3.weight
        , %para107 : Ref[Tensor(F32)][512, 256, 1, 1, 1]    # network.depth.layer2.2.conv3.weight
        , %para108 : Ref[Tensor(F32)][512, 256, 1, 1, 1]    # network.depth.layer2.3.conv3.weight
        , %para109 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.rgb.layer3.0.downsample.0.weight
        , %para110 : Ref[Tensor(F32)][1024, 512, 1, 1, 1]    # network.depth.layer3.0.downsample.0.weight
        , %para111 : Ref[Tensor(F32)][256, 128, 1, 1, 1]    # network.rgb.layer1.0.conv3.weight
        , %para112 : Ref[Tensor(F32)][256, 128, 1, 1, 1]    # network.rgb.layer1.1.conv3.weight
        , %para113 : Ref[Tensor(F32)][256, 128, 1, 1, 1]    # network.rgb.layer1.2.conv3.weight
        , %para114 : Ref[Tensor(F32)][256, 128, 1, 1, 1]    # network.depth.layer1.0.conv3.weight
        , %para115 : Ref[Tensor(F32)][256, 128, 1, 1, 1]    # network.depth.layer1.1.conv3.weight
        , %para116 : Ref[Tensor(F32)][256, 128, 1, 1, 1]    # network.depth.layer1.2.conv3.weight
        , %para117 : Ref[Tensor(F32)][2048]    # network.rgb.layer4.0.bn3.bn2d.gamma
        , %para118 : Ref[Tensor(F32)][2048]    # network.rgb.layer4.0.bn3.bn2d.beta
        , %para119 : Ref[Tensor(F32)][2048]    # network.rgb.layer4.0.bn3.bn2d.moving_mean
        , %para120 : Ref[Tensor(F32)][2048]    # network.rgb.layer4.0.bn3.bn2d.moving_variance
        , %para121 : Ref[Tensor(F32)][1024, 1024, 1, 1, 1]    # network.rgb.layer4.0.conv1.weight
        , %para122 : Ref[Tensor(F32)][2048]    # network.rgb.layer4.1.bn3.bn2d.gamma
        , %para123 : Ref[Tensor(F32)][2048]    # network.rgb.layer4.1.bn3.bn2d.beta
        , %para124 : Ref[Tensor(F32)][2048]    # network.rgb.layer4.1.bn3.bn2d.moving_mean
        , %para125 : Ref[Tensor(F32)][2048]    # network.rgb.layer4.1.bn3.bn2d.moving_variance
        , %para126 : Ref[Tensor(F32)][1024, 2048, 1, 1, 1]    # network.rgb.layer4.1.conv1.weight
        , %para127 : Ref[Tensor(F32)][2048]    # network.rgb.layer4.2.bn3.bn2d.gamma
        , %para128 : Ref[Tensor(F32)][2048]    # network.rgb.layer4.2.bn3.bn2d.beta
        , %para129 : Ref[Tensor(F32)][2048]    # network.rgb.layer4.2.bn3.bn2d.moving_mean
        , %para130 : Ref[Tensor(F32)][2048]    # network.rgb.layer4.2.bn3.bn2d.moving_variance
        , %para131 : Ref[Tensor(F32)][1024, 2048, 1, 1, 1]    # network.rgb.layer4.2.conv1.weight
        , %para132 : Ref[Tensor(F32)][2048]    # network.depth.layer4.0.bn3.bn2d.gamma
        , %para133 : Ref[Tensor(F32)][2048]    # network.depth.layer4.0.bn3.bn2d.beta
        , %para134 : Ref[Tensor(F32)][2048]    # network.depth.layer4.0.bn3.bn2d.moving_mean
        , %para135 : Ref[Tensor(F32)][2048]    # network.depth.layer4.0.bn3.bn2d.moving_variance
        , %para136 : Ref[Tensor(F32)][1024, 1024, 1, 1, 1]    # network.depth.layer4.0.conv1.weight
        , %para137 : Ref[Tensor(F32)][2048]    # network.depth.layer4.1.bn3.bn2d.gamma
        , %para138 : Ref[Tensor(F32)][2048]    # network.depth.layer4.1.bn3.bn2d.beta
        , %para139 : Ref[Tensor(F32)][2048]    # network.depth.layer4.1.bn3.bn2d.moving_mean
        , %para140 : Ref[Tensor(F32)][2048]    # network.depth.layer4.1.bn3.bn2d.moving_variance
        , %para141 : Ref[Tensor(F32)][1024, 2048, 1, 1, 1]    # network.depth.layer4.1.conv1.weight
        , %para142 : Ref[Tensor(F32)][2048]    # network.depth.layer4.2.bn3.bn2d.gamma
        , %para143 : Ref[Tensor(F32)][2048]    # network.depth.layer4.2.bn3.bn2d.beta
        , %para144 : Ref[Tensor(F32)][2048]    # network.depth.layer4.2.bn3.bn2d.moving_mean
        , %para145 : Ref[Tensor(F32)][2048]    # network.depth.layer4.2.bn3.bn2d.moving_variance
        , %para146 : Ref[Tensor(F32)][1024, 2048, 1, 1, 1]    # network.depth.layer4.2.conv1.weight
        , %para147 : Ref[Tensor(F32)][512, 256, 1, 1, 1]    # network.rgb.layer2.0.downsample.0.weight
        , %para148 : Ref[Tensor(F32)][512, 256, 1, 1, 1]    # network.depth.layer2.0.downsample.0.weight
        , %para149 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.0.bn3.bn2d.gamma
        , %para150 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.0.bn3.bn2d.beta
        , %para151 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.0.bn3.bn2d.moving_mean
        , %para152 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.0.bn3.bn2d.moving_variance
        , %para153 : Ref[Tensor(F32)][512, 512, 1, 1, 1]    # network.rgb.layer3.0.conv1.weight
        , %para154 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.1.bn3.bn2d.gamma
        , %para155 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.1.bn3.bn2d.beta
        , %para156 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.1.bn3.bn2d.moving_mean
        , %para157 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.1.bn3.bn2d.moving_variance
        , %para158 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.rgb.layer3.1.conv1.weight
        , %para159 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.2.bn3.bn2d.gamma
        , %para160 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.2.bn3.bn2d.beta
        , %para161 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.2.bn3.bn2d.moving_mean
        , %para162 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.2.bn3.bn2d.moving_variance
        , %para163 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.rgb.layer3.2.conv1.weight
        , %para164 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.3.bn3.bn2d.gamma
        , %para165 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.3.bn3.bn2d.beta
        , %para166 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.3.bn3.bn2d.moving_mean
        , %para167 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.3.bn3.bn2d.moving_variance
        , %para168 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.rgb.layer3.3.conv1.weight
        , %para169 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.4.bn3.bn2d.gamma
        , %para170 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.4.bn3.bn2d.beta
        , %para171 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.4.bn3.bn2d.moving_mean
        , %para172 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.4.bn3.bn2d.moving_variance
        , %para173 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.rgb.layer3.4.conv1.weight
        , %para174 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.5.bn3.bn2d.gamma
        , %para175 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.5.bn3.bn2d.beta
        , %para176 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.5.bn3.bn2d.moving_mean
        , %para177 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.5.bn3.bn2d.moving_variance
        , %para178 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.rgb.layer3.5.conv1.weight
        , %para179 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.6.bn3.bn2d.gamma
        , %para180 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.6.bn3.bn2d.beta
        , %para181 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.6.bn3.bn2d.moving_mean
        , %para182 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.6.bn3.bn2d.moving_variance
        , %para183 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.rgb.layer3.6.conv1.weight
        , %para184 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.7.bn3.bn2d.gamma
        , %para185 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.7.bn3.bn2d.beta
        , %para186 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.7.bn3.bn2d.moving_mean
        , %para187 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.7.bn3.bn2d.moving_variance
        , %para188 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.rgb.layer3.7.conv1.weight
        , %para189 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.8.bn3.bn2d.gamma
        , %para190 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.8.bn3.bn2d.beta
        , %para191 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.8.bn3.bn2d.moving_mean
        , %para192 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.8.bn3.bn2d.moving_variance
        , %para193 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.rgb.layer3.8.conv1.weight
        , %para194 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.9.bn3.bn2d.gamma
        , %para195 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.9.bn3.bn2d.beta
        , %para196 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.9.bn3.bn2d.moving_mean
        , %para197 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.9.bn3.bn2d.moving_variance
        , %para198 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.rgb.layer3.9.conv1.weight
        , %para199 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.10.bn3.bn2d.gamma
        , %para200 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.10.bn3.bn2d.beta
        , %para201 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.10.bn3.bn2d.moving_mean
        , %para202 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.10.bn3.bn2d.moving_variance
        , %para203 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.rgb.layer3.10.conv1.weight
        , %para204 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.11.bn3.bn2d.gamma
        , %para205 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.11.bn3.bn2d.beta
        , %para206 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.11.bn3.bn2d.moving_mean
        , %para207 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.11.bn3.bn2d.moving_variance
        , %para208 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.rgb.layer3.11.conv1.weight
        , %para209 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.12.bn3.bn2d.gamma
        , %para210 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.12.bn3.bn2d.beta
        , %para211 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.12.bn3.bn2d.moving_mean
        , %para212 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.12.bn3.bn2d.moving_variance
        , %para213 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.rgb.layer3.12.conv1.weight
        , %para214 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.13.bn3.bn2d.gamma
        , %para215 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.13.bn3.bn2d.beta
        , %para216 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.13.bn3.bn2d.moving_mean
        , %para217 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.13.bn3.bn2d.moving_variance
        , %para218 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.rgb.layer3.13.conv1.weight
        , %para219 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.14.bn3.bn2d.gamma
        , %para220 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.14.bn3.bn2d.beta
        , %para221 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.14.bn3.bn2d.moving_mean
        , %para222 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.14.bn3.bn2d.moving_variance
        , %para223 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.rgb.layer3.14.conv1.weight
        , %para224 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.15.bn3.bn2d.gamma
        , %para225 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.15.bn3.bn2d.beta
        , %para226 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.15.bn3.bn2d.moving_mean
        , %para227 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.15.bn3.bn2d.moving_variance
        , %para228 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.rgb.layer3.15.conv1.weight
        , %para229 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.16.bn3.bn2d.gamma
        , %para230 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.16.bn3.bn2d.beta
        , %para231 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.16.bn3.bn2d.moving_mean
        , %para232 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.16.bn3.bn2d.moving_variance
        , %para233 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.rgb.layer3.16.conv1.weight
        , %para234 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.17.bn3.bn2d.gamma
        , %para235 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.17.bn3.bn2d.beta
        , %para236 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.17.bn3.bn2d.moving_mean
        , %para237 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.17.bn3.bn2d.moving_variance
        , %para238 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.rgb.layer3.17.conv1.weight
        , %para239 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.18.bn3.bn2d.gamma
        , %para240 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.18.bn3.bn2d.beta
        , %para241 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.18.bn3.bn2d.moving_mean
        , %para242 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.18.bn3.bn2d.moving_variance
        , %para243 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.rgb.layer3.18.conv1.weight
        , %para244 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.19.bn3.bn2d.gamma
        , %para245 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.19.bn3.bn2d.beta
        , %para246 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.19.bn3.bn2d.moving_mean
        , %para247 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.19.bn3.bn2d.moving_variance
        , %para248 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.rgb.layer3.19.conv1.weight
        , %para249 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.20.bn3.bn2d.gamma
        , %para250 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.20.bn3.bn2d.beta
        , %para251 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.20.bn3.bn2d.moving_mean
        , %para252 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.20.bn3.bn2d.moving_variance
        , %para253 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.rgb.layer3.20.conv1.weight
        , %para254 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.21.bn3.bn2d.gamma
        , %para255 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.21.bn3.bn2d.beta
        , %para256 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.21.bn3.bn2d.moving_mean
        , %para257 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.21.bn3.bn2d.moving_variance
        , %para258 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.rgb.layer3.21.conv1.weight
        , %para259 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.22.bn3.bn2d.gamma
        , %para260 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.22.bn3.bn2d.beta
        , %para261 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.22.bn3.bn2d.moving_mean
        , %para262 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.22.bn3.bn2d.moving_variance
        , %para263 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.rgb.layer3.22.conv1.weight
        , %para264 : Ref[Tensor(F32)][1024]    # network.depth.layer3.0.bn3.bn2d.gamma
        , %para265 : Ref[Tensor(F32)][1024]    # network.depth.layer3.0.bn3.bn2d.beta
        , %para266 : Ref[Tensor(F32)][1024]    # network.depth.layer3.0.bn3.bn2d.moving_mean
        , %para267 : Ref[Tensor(F32)][1024]    # network.depth.layer3.0.bn3.bn2d.moving_variance
        , %para268 : Ref[Tensor(F32)][512, 512, 1, 1, 1]    # network.depth.layer3.0.conv1.weight
        , %para269 : Ref[Tensor(F32)][1024]    # network.depth.layer3.1.bn3.bn2d.gamma
        , %para270 : Ref[Tensor(F32)][1024]    # network.depth.layer3.1.bn3.bn2d.beta
        , %para271 : Ref[Tensor(F32)][1024]    # network.depth.layer3.1.bn3.bn2d.moving_mean
        , %para272 : Ref[Tensor(F32)][1024]    # network.depth.layer3.1.bn3.bn2d.moving_variance
        , %para273 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.depth.layer3.1.conv1.weight
        , %para274 : Ref[Tensor(F32)][1024]    # network.depth.layer3.2.bn3.bn2d.gamma
        , %para275 : Ref[Tensor(F32)][1024]    # network.depth.layer3.2.bn3.bn2d.beta
        , %para276 : Ref[Tensor(F32)][1024]    # network.depth.layer3.2.bn3.bn2d.moving_mean
        , %para277 : Ref[Tensor(F32)][1024]    # network.depth.layer3.2.bn3.bn2d.moving_variance
        , %para278 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.depth.layer3.2.conv1.weight
        , %para279 : Ref[Tensor(F32)][1024]    # network.depth.layer3.3.bn3.bn2d.gamma
        , %para280 : Ref[Tensor(F32)][1024]    # network.depth.layer3.3.bn3.bn2d.beta
        , %para281 : Ref[Tensor(F32)][1024]    # network.depth.layer3.3.bn3.bn2d.moving_mean
        , %para282 : Ref[Tensor(F32)][1024]    # network.depth.layer3.3.bn3.bn2d.moving_variance
        , %para283 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.depth.layer3.3.conv1.weight
        , %para284 : Ref[Tensor(F32)][1024]    # network.depth.layer3.4.bn3.bn2d.gamma
        , %para285 : Ref[Tensor(F32)][1024]    # network.depth.layer3.4.bn3.bn2d.beta
        , %para286 : Ref[Tensor(F32)][1024]    # network.depth.layer3.4.bn3.bn2d.moving_mean
        , %para287 : Ref[Tensor(F32)][1024]    # network.depth.layer3.4.bn3.bn2d.moving_variance
        , %para288 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.depth.layer3.4.conv1.weight
        , %para289 : Ref[Tensor(F32)][1024]    # network.depth.layer3.5.bn3.bn2d.gamma
        , %para290 : Ref[Tensor(F32)][1024]    # network.depth.layer3.5.bn3.bn2d.beta
        , %para291 : Ref[Tensor(F32)][1024]    # network.depth.layer3.5.bn3.bn2d.moving_mean
        , %para292 : Ref[Tensor(F32)][1024]    # network.depth.layer3.5.bn3.bn2d.moving_variance
        , %para293 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.depth.layer3.5.conv1.weight
        , %para294 : Ref[Tensor(F32)][1024]    # network.depth.layer3.6.bn3.bn2d.gamma
        , %para295 : Ref[Tensor(F32)][1024]    # network.depth.layer3.6.bn3.bn2d.beta
        , %para296 : Ref[Tensor(F32)][1024]    # network.depth.layer3.6.bn3.bn2d.moving_mean
        , %para297 : Ref[Tensor(F32)][1024]    # network.depth.layer3.6.bn3.bn2d.moving_variance
        , %para298 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.depth.layer3.6.conv1.weight
        , %para299 : Ref[Tensor(F32)][1024]    # network.depth.layer3.7.bn3.bn2d.gamma
        , %para300 : Ref[Tensor(F32)][1024]    # network.depth.layer3.7.bn3.bn2d.beta
        , %para301 : Ref[Tensor(F32)][1024]    # network.depth.layer3.7.bn3.bn2d.moving_mean
        , %para302 : Ref[Tensor(F32)][1024]    # network.depth.layer3.7.bn3.bn2d.moving_variance
        , %para303 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.depth.layer3.7.conv1.weight
        , %para304 : Ref[Tensor(F32)][1024]    # network.depth.layer3.8.bn3.bn2d.gamma
        , %para305 : Ref[Tensor(F32)][1024]    # network.depth.layer3.8.bn3.bn2d.beta
        , %para306 : Ref[Tensor(F32)][1024]    # network.depth.layer3.8.bn3.bn2d.moving_mean
        , %para307 : Ref[Tensor(F32)][1024]    # network.depth.layer3.8.bn3.bn2d.moving_variance
        , %para308 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.depth.layer3.8.conv1.weight
        , %para309 : Ref[Tensor(F32)][1024]    # network.depth.layer3.9.bn3.bn2d.gamma
        , %para310 : Ref[Tensor(F32)][1024]    # network.depth.layer3.9.bn3.bn2d.beta
        , %para311 : Ref[Tensor(F32)][1024]    # network.depth.layer3.9.bn3.bn2d.moving_mean
        , %para312 : Ref[Tensor(F32)][1024]    # network.depth.layer3.9.bn3.bn2d.moving_variance
        , %para313 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.depth.layer3.9.conv1.weight
        , %para314 : Ref[Tensor(F32)][1024]    # network.depth.layer3.10.bn3.bn2d.gamma
        , %para315 : Ref[Tensor(F32)][1024]    # network.depth.layer3.10.bn3.bn2d.beta
        , %para316 : Ref[Tensor(F32)][1024]    # network.depth.layer3.10.bn3.bn2d.moving_mean
        , %para317 : Ref[Tensor(F32)][1024]    # network.depth.layer3.10.bn3.bn2d.moving_variance
        , %para318 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.depth.layer3.10.conv1.weight
        , %para319 : Ref[Tensor(F32)][1024]    # network.depth.layer3.11.bn3.bn2d.gamma
        , %para320 : Ref[Tensor(F32)][1024]    # network.depth.layer3.11.bn3.bn2d.beta
        , %para321 : Ref[Tensor(F32)][1024]    # network.depth.layer3.11.bn3.bn2d.moving_mean
        , %para322 : Ref[Tensor(F32)][1024]    # network.depth.layer3.11.bn3.bn2d.moving_variance
        , %para323 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.depth.layer3.11.conv1.weight
        , %para324 : Ref[Tensor(F32)][1024]    # network.depth.layer3.12.bn3.bn2d.gamma
        , %para325 : Ref[Tensor(F32)][1024]    # network.depth.layer3.12.bn3.bn2d.beta
        , %para326 : Ref[Tensor(F32)][1024]    # network.depth.layer3.12.bn3.bn2d.moving_mean
        , %para327 : Ref[Tensor(F32)][1024]    # network.depth.layer3.12.bn3.bn2d.moving_variance
        , %para328 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.depth.layer3.12.conv1.weight
        , %para329 : Ref[Tensor(F32)][1024]    # network.depth.layer3.13.bn3.bn2d.gamma
        , %para330 : Ref[Tensor(F32)][1024]    # network.depth.layer3.13.bn3.bn2d.beta
        , %para331 : Ref[Tensor(F32)][1024]    # network.depth.layer3.13.bn3.bn2d.moving_mean
        , %para332 : Ref[Tensor(F32)][1024]    # network.depth.layer3.13.bn3.bn2d.moving_variance
        , %para333 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.depth.layer3.13.conv1.weight
        , %para334 : Ref[Tensor(F32)][1024]    # network.depth.layer3.14.bn3.bn2d.gamma
        , %para335 : Ref[Tensor(F32)][1024]    # network.depth.layer3.14.bn3.bn2d.beta
        , %para336 : Ref[Tensor(F32)][1024]    # network.depth.layer3.14.bn3.bn2d.moving_mean
        , %para337 : Ref[Tensor(F32)][1024]    # network.depth.layer3.14.bn3.bn2d.moving_variance
        , %para338 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.depth.layer3.14.conv1.weight
        , %para339 : Ref[Tensor(F32)][1024]    # network.depth.layer3.15.bn3.bn2d.gamma
        , %para340 : Ref[Tensor(F32)][1024]    # network.depth.layer3.15.bn3.bn2d.beta
        , %para341 : Ref[Tensor(F32)][1024]    # network.depth.layer3.15.bn3.bn2d.moving_mean
        , %para342 : Ref[Tensor(F32)][1024]    # network.depth.layer3.15.bn3.bn2d.moving_variance
        , %para343 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.depth.layer3.15.conv1.weight
        , %para344 : Ref[Tensor(F32)][1024]    # network.depth.layer3.16.bn3.bn2d.gamma
        , %para345 : Ref[Tensor(F32)][1024]    # network.depth.layer3.16.bn3.bn2d.beta
        , %para346 : Ref[Tensor(F32)][1024]    # network.depth.layer3.16.bn3.bn2d.moving_mean
        , %para347 : Ref[Tensor(F32)][1024]    # network.depth.layer3.16.bn3.bn2d.moving_variance
        , %para348 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.depth.layer3.16.conv1.weight
        , %para349 : Ref[Tensor(F32)][1024]    # network.depth.layer3.17.bn3.bn2d.gamma
        , %para350 : Ref[Tensor(F32)][1024]    # network.depth.layer3.17.bn3.bn2d.beta
        , %para351 : Ref[Tensor(F32)][1024]    # network.depth.layer3.17.bn3.bn2d.moving_mean
        , %para352 : Ref[Tensor(F32)][1024]    # network.depth.layer3.17.bn3.bn2d.moving_variance
        , %para353 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.depth.layer3.17.conv1.weight
        , %para354 : Ref[Tensor(F32)][1024]    # network.depth.layer3.18.bn3.bn2d.gamma
        , %para355 : Ref[Tensor(F32)][1024]    # network.depth.layer3.18.bn3.bn2d.beta
        , %para356 : Ref[Tensor(F32)][1024]    # network.depth.layer3.18.bn3.bn2d.moving_mean
        , %para357 : Ref[Tensor(F32)][1024]    # network.depth.layer3.18.bn3.bn2d.moving_variance
        , %para358 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.depth.layer3.18.conv1.weight
        , %para359 : Ref[Tensor(F32)][1024]    # network.depth.layer3.19.bn3.bn2d.gamma
        , %para360 : Ref[Tensor(F32)][1024]    # network.depth.layer3.19.bn3.bn2d.beta
        , %para361 : Ref[Tensor(F32)][1024]    # network.depth.layer3.19.bn3.bn2d.moving_mean
        , %para362 : Ref[Tensor(F32)][1024]    # network.depth.layer3.19.bn3.bn2d.moving_variance
        , %para363 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.depth.layer3.19.conv1.weight
        , %para364 : Ref[Tensor(F32)][1024]    # network.depth.layer3.20.bn3.bn2d.gamma
        , %para365 : Ref[Tensor(F32)][1024]    # network.depth.layer3.20.bn3.bn2d.beta
        , %para366 : Ref[Tensor(F32)][1024]    # network.depth.layer3.20.bn3.bn2d.moving_mean
        , %para367 : Ref[Tensor(F32)][1024]    # network.depth.layer3.20.bn3.bn2d.moving_variance
        , %para368 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.depth.layer3.20.conv1.weight
        , %para369 : Ref[Tensor(F32)][1024]    # network.depth.layer3.21.bn3.bn2d.gamma
        , %para370 : Ref[Tensor(F32)][1024]    # network.depth.layer3.21.bn3.bn2d.beta
        , %para371 : Ref[Tensor(F32)][1024]    # network.depth.layer3.21.bn3.bn2d.moving_mean
        , %para372 : Ref[Tensor(F32)][1024]    # network.depth.layer3.21.bn3.bn2d.moving_variance
        , %para373 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.depth.layer3.21.conv1.weight
        , %para374 : Ref[Tensor(F32)][1024]    # network.depth.layer3.22.bn3.bn2d.gamma
        , %para375 : Ref[Tensor(F32)][1024]    # network.depth.layer3.22.bn3.bn2d.beta
        , %para376 : Ref[Tensor(F32)][1024]    # network.depth.layer3.22.bn3.bn2d.moving_mean
        , %para377 : Ref[Tensor(F32)][1024]    # network.depth.layer3.22.bn3.bn2d.moving_variance
        , %para378 : Ref[Tensor(F32)][512, 1024, 1, 1, 1]    # network.depth.layer3.22.conv1.weight
        , %para379 : Ref[Tensor(F32)][256, 64, 1, 1, 1]    # network.rgb.layer1.0.downsample.0.weight
        , %para380 : Ref[Tensor(F32)][256, 64, 1, 1, 1]    # network.depth.layer1.0.downsample.0.weight
        , %para381 : Ref[Tensor(F32)][1024]    # network.rgb.layer4.0.bn2.bn2d.gamma
        , %para382 : Ref[Tensor(F32)][1024]    # network.rgb.layer4.0.bn2.bn2d.beta
        , %para383 : Ref[Tensor(F32)][1024]    # network.rgb.layer4.0.bn2.bn2d.moving_mean
        , %para384 : Ref[Tensor(F32)][1024]    # network.rgb.layer4.0.bn2.bn2d.moving_variance
        , %para385 : Ref[Tensor(F32)][1024]    # network.rgb.layer4.1.bn2.bn2d.gamma
        , %para386 : Ref[Tensor(F32)][1024]    # network.rgb.layer4.1.bn2.bn2d.beta
        , %para387 : Ref[Tensor(F32)][1024]    # network.rgb.layer4.1.bn2.bn2d.moving_mean
        , %para388 : Ref[Tensor(F32)][1024]    # network.rgb.layer4.1.bn2.bn2d.moving_variance
        , %para389 : Ref[Tensor(F32)][1024]    # network.rgb.layer4.2.bn2.bn2d.gamma
        , %para390 : Ref[Tensor(F32)][1024]    # network.rgb.layer4.2.bn2.bn2d.beta
        , %para391 : Ref[Tensor(F32)][1024]    # network.rgb.layer4.2.bn2.bn2d.moving_mean
        , %para392 : Ref[Tensor(F32)][1024]    # network.rgb.layer4.2.bn2.bn2d.moving_variance
        , %para393 : Ref[Tensor(F32)][1024]    # network.depth.layer4.0.bn2.bn2d.gamma
        , %para394 : Ref[Tensor(F32)][1024]    # network.depth.layer4.0.bn2.bn2d.beta
        , %para395 : Ref[Tensor(F32)][1024]    # network.depth.layer4.0.bn2.bn2d.moving_mean
        , %para396 : Ref[Tensor(F32)][1024]    # network.depth.layer4.0.bn2.bn2d.moving_variance
        , %para397 : Ref[Tensor(F32)][1024]    # network.depth.layer4.1.bn2.bn2d.gamma
        , %para398 : Ref[Tensor(F32)][1024]    # network.depth.layer4.1.bn2.bn2d.beta
        , %para399 : Ref[Tensor(F32)][1024]    # network.depth.layer4.1.bn2.bn2d.moving_mean
        , %para400 : Ref[Tensor(F32)][1024]    # network.depth.layer4.1.bn2.bn2d.moving_variance
        , %para401 : Ref[Tensor(F32)][1024]    # network.depth.layer4.2.bn2.bn2d.gamma
        , %para402 : Ref[Tensor(F32)][1024]    # network.depth.layer4.2.bn2.bn2d.beta
        , %para403 : Ref[Tensor(F32)][1024]    # network.depth.layer4.2.bn2.bn2d.moving_mean
        , %para404 : Ref[Tensor(F32)][1024]    # network.depth.layer4.2.bn2.bn2d.moving_variance
        , %para405 : Ref[Tensor(F32)][512]    # network.rgb.layer2.0.bn3.bn2d.gamma
        , %para406 : Ref[Tensor(F32)][512]    # network.rgb.layer2.0.bn3.bn2d.beta
        , %para407 : Ref[Tensor(F32)][512]    # network.rgb.layer2.0.bn3.bn2d.moving_mean
        , %para408 : Ref[Tensor(F32)][512]    # network.rgb.layer2.0.bn3.bn2d.moving_variance
        , %para409 : Ref[Tensor(F32)][256, 256, 1, 1, 1]    # network.rgb.layer2.0.conv1.weight
        , %para410 : Ref[Tensor(F32)][512]    # network.rgb.layer2.1.bn3.bn2d.gamma
        , %para411 : Ref[Tensor(F32)][512]    # network.rgb.layer2.1.bn3.bn2d.beta
        , %para412 : Ref[Tensor(F32)][512]    # network.rgb.layer2.1.bn3.bn2d.moving_mean
        , %para413 : Ref[Tensor(F32)][512]    # network.rgb.layer2.1.bn3.bn2d.moving_variance
        , %para414 : Ref[Tensor(F32)][256, 512, 1, 1, 1]    # network.rgb.layer2.1.conv1.weight
        , %para415 : Ref[Tensor(F32)][512]    # network.rgb.layer2.2.bn3.bn2d.gamma
        , %para416 : Ref[Tensor(F32)][512]    # network.rgb.layer2.2.bn3.bn2d.beta
        , %para417 : Ref[Tensor(F32)][512]    # network.rgb.layer2.2.bn3.bn2d.moving_mean
        , %para418 : Ref[Tensor(F32)][512]    # network.rgb.layer2.2.bn3.bn2d.moving_variance
        , %para419 : Ref[Tensor(F32)][256, 512, 1, 1, 1]    # network.rgb.layer2.2.conv1.weight
        , %para420 : Ref[Tensor(F32)][512]    # network.rgb.layer2.3.bn3.bn2d.gamma
        , %para421 : Ref[Tensor(F32)][512]    # network.rgb.layer2.3.bn3.bn2d.beta
        , %para422 : Ref[Tensor(F32)][512]    # network.rgb.layer2.3.bn3.bn2d.moving_mean
        , %para423 : Ref[Tensor(F32)][512]    # network.rgb.layer2.3.bn3.bn2d.moving_variance
        , %para424 : Ref[Tensor(F32)][256, 512, 1, 1, 1]    # network.rgb.layer2.3.conv1.weight
        , %para425 : Ref[Tensor(F32)][512]    # network.depth.layer2.0.bn3.bn2d.gamma
        , %para426 : Ref[Tensor(F32)][512]    # network.depth.layer2.0.bn3.bn2d.beta
        , %para427 : Ref[Tensor(F32)][512]    # network.depth.layer2.0.bn3.bn2d.moving_mean
        , %para428 : Ref[Tensor(F32)][512]    # network.depth.layer2.0.bn3.bn2d.moving_variance
        , %para429 : Ref[Tensor(F32)][256, 256, 1, 1, 1]    # network.depth.layer2.0.conv1.weight
        , %para430 : Ref[Tensor(F32)][512]    # network.depth.layer2.1.bn3.bn2d.gamma
        , %para431 : Ref[Tensor(F32)][512]    # network.depth.layer2.1.bn3.bn2d.beta
        , %para432 : Ref[Tensor(F32)][512]    # network.depth.layer2.1.bn3.bn2d.moving_mean
        , %para433 : Ref[Tensor(F32)][512]    # network.depth.layer2.1.bn3.bn2d.moving_variance
        , %para434 : Ref[Tensor(F32)][256, 512, 1, 1, 1]    # network.depth.layer2.1.conv1.weight
        , %para435 : Ref[Tensor(F32)][512]    # network.depth.layer2.2.bn3.bn2d.gamma
        , %para436 : Ref[Tensor(F32)][512]    # network.depth.layer2.2.bn3.bn2d.beta
        , %para437 : Ref[Tensor(F32)][512]    # network.depth.layer2.2.bn3.bn2d.moving_mean
        , %para438 : Ref[Tensor(F32)][512]    # network.depth.layer2.2.bn3.bn2d.moving_variance
        , %para439 : Ref[Tensor(F32)][256, 512, 1, 1, 1]    # network.depth.layer2.2.conv1.weight
        , %para440 : Ref[Tensor(F32)][512]    # network.depth.layer2.3.bn3.bn2d.gamma
        , %para441 : Ref[Tensor(F32)][512]    # network.depth.layer2.3.bn3.bn2d.beta
        , %para442 : Ref[Tensor(F32)][512]    # network.depth.layer2.3.bn3.bn2d.moving_mean
        , %para443 : Ref[Tensor(F32)][512]    # network.depth.layer2.3.bn3.bn2d.moving_variance
        , %para444 : Ref[Tensor(F32)][256, 512, 1, 1, 1]    # network.depth.layer2.3.conv1.weight
        , %para445 : Ref[Tensor(F32)][2048]    # network.rgb.layer4.0.downsample.1.bn2d.gamma
        , %para446 : Ref[Tensor(F32)][2048]    # network.rgb.layer4.0.downsample.1.bn2d.beta
        , %para447 : Ref[Tensor(F32)][2048]    # network.rgb.layer4.0.downsample.1.bn2d.moving_mean
        , %para448 : Ref[Tensor(F32)][2048]    # network.rgb.layer4.0.downsample.1.bn2d.moving_variance
        , %para449 : Ref[Tensor(F32)][2048]    # network.depth.layer4.0.downsample.1.bn2d.gamma
        , %para450 : Ref[Tensor(F32)][2048]    # network.depth.layer4.0.downsample.1.bn2d.beta
        , %para451 : Ref[Tensor(F32)][2048]    # network.depth.layer4.0.downsample.1.bn2d.moving_mean
        , %para452 : Ref[Tensor(F32)][2048]    # network.depth.layer4.0.downsample.1.bn2d.moving_variance
        , %para453 : Ref[Tensor(F32)][512]    # network.rgb.layer3.0.bn2.bn2d.gamma
        , %para454 : Ref[Tensor(F32)][512]    # network.rgb.layer3.0.bn2.bn2d.beta
        , %para455 : Ref[Tensor(F32)][512]    # network.rgb.layer3.0.bn2.bn2d.moving_mean
        , %para456 : Ref[Tensor(F32)][512]    # network.rgb.layer3.0.bn2.bn2d.moving_variance
        , %para457 : Ref[Tensor(F32)][512]    # network.rgb.layer3.1.bn2.bn2d.gamma
        , %para458 : Ref[Tensor(F32)][512]    # network.rgb.layer3.1.bn2.bn2d.beta
        , %para459 : Ref[Tensor(F32)][512]    # network.rgb.layer3.1.bn2.bn2d.moving_mean
        , %para460 : Ref[Tensor(F32)][512]    # network.rgb.layer3.1.bn2.bn2d.moving_variance
        , %para461 : Ref[Tensor(F32)][512]    # network.rgb.layer3.2.bn2.bn2d.gamma
        , %para462 : Ref[Tensor(F32)][512]    # network.rgb.layer3.2.bn2.bn2d.beta
        , %para463 : Ref[Tensor(F32)][512]    # network.rgb.layer3.2.bn2.bn2d.moving_mean
        , %para464 : Ref[Tensor(F32)][512]    # network.rgb.layer3.2.bn2.bn2d.moving_variance
        , %para465 : Ref[Tensor(F32)][512]    # network.rgb.layer3.3.bn2.bn2d.gamma
        , %para466 : Ref[Tensor(F32)][512]    # network.rgb.layer3.3.bn2.bn2d.beta
        , %para467 : Ref[Tensor(F32)][512]    # network.rgb.layer3.3.bn2.bn2d.moving_mean
        , %para468 : Ref[Tensor(F32)][512]    # network.rgb.layer3.3.bn2.bn2d.moving_variance
        , %para469 : Ref[Tensor(F32)][512]    # network.rgb.layer3.4.bn2.bn2d.gamma
        , %para470 : Ref[Tensor(F32)][512]    # network.rgb.layer3.4.bn2.bn2d.beta
        , %para471 : Ref[Tensor(F32)][512]    # network.rgb.layer3.4.bn2.bn2d.moving_mean
        , %para472 : Ref[Tensor(F32)][512]    # network.rgb.layer3.4.bn2.bn2d.moving_variance
        , %para473 : Ref[Tensor(F32)][512]    # network.rgb.layer3.5.bn2.bn2d.gamma
        , %para474 : Ref[Tensor(F32)][512]    # network.rgb.layer3.5.bn2.bn2d.beta
        , %para475 : Ref[Tensor(F32)][512]    # network.rgb.layer3.5.bn2.bn2d.moving_mean
        , %para476 : Ref[Tensor(F32)][512]    # network.rgb.layer3.5.bn2.bn2d.moving_variance
        , %para477 : Ref[Tensor(F32)][512]    # network.rgb.layer3.6.bn2.bn2d.gamma
        , %para478 : Ref[Tensor(F32)][512]    # network.rgb.layer3.6.bn2.bn2d.beta
        , %para479 : Ref[Tensor(F32)][512]    # network.rgb.layer3.6.bn2.bn2d.moving_mean
        , %para480 : Ref[Tensor(F32)][512]    # network.rgb.layer3.6.bn2.bn2d.moving_variance
        , %para481 : Ref[Tensor(F32)][512]    # network.rgb.layer3.7.bn2.bn2d.gamma
        , %para482 : Ref[Tensor(F32)][512]    # network.rgb.layer3.7.bn2.bn2d.beta
        , %para483 : Ref[Tensor(F32)][512]    # network.rgb.layer3.7.bn2.bn2d.moving_mean
        , %para484 : Ref[Tensor(F32)][512]    # network.rgb.layer3.7.bn2.bn2d.moving_variance
        , %para485 : Ref[Tensor(F32)][512]    # network.rgb.layer3.8.bn2.bn2d.gamma
        , %para486 : Ref[Tensor(F32)][512]    # network.rgb.layer3.8.bn2.bn2d.beta
        , %para487 : Ref[Tensor(F32)][512]    # network.rgb.layer3.8.bn2.bn2d.moving_mean
        , %para488 : Ref[Tensor(F32)][512]    # network.rgb.layer3.8.bn2.bn2d.moving_variance
        , %para489 : Ref[Tensor(F32)][512]    # network.rgb.layer3.9.bn2.bn2d.gamma
        , %para490 : Ref[Tensor(F32)][512]    # network.rgb.layer3.9.bn2.bn2d.beta
        , %para491 : Ref[Tensor(F32)][512]    # network.rgb.layer3.9.bn2.bn2d.moving_mean
        , %para492 : Ref[Tensor(F32)][512]    # network.rgb.layer3.9.bn2.bn2d.moving_variance
        , %para493 : Ref[Tensor(F32)][512]    # network.rgb.layer3.10.bn2.bn2d.gamma
        , %para494 : Ref[Tensor(F32)][512]    # network.rgb.layer3.10.bn2.bn2d.beta
        , %para495 : Ref[Tensor(F32)][512]    # network.rgb.layer3.10.bn2.bn2d.moving_mean
        , %para496 : Ref[Tensor(F32)][512]    # network.rgb.layer3.10.bn2.bn2d.moving_variance
        , %para497 : Ref[Tensor(F32)][512]    # network.rgb.layer3.11.bn2.bn2d.gamma
        , %para498 : Ref[Tensor(F32)][512]    # network.rgb.layer3.11.bn2.bn2d.beta
        , %para499 : Ref[Tensor(F32)][512]    # network.rgb.layer3.11.bn2.bn2d.moving_mean
        , %para500 : Ref[Tensor(F32)][512]    # network.rgb.layer3.11.bn2.bn2d.moving_variance
        , %para501 : Ref[Tensor(F32)][512]    # network.rgb.layer3.12.bn2.bn2d.gamma
        , %para502 : Ref[Tensor(F32)][512]    # network.rgb.layer3.12.bn2.bn2d.beta
        , %para503 : Ref[Tensor(F32)][512]    # network.rgb.layer3.12.bn2.bn2d.moving_mean
        , %para504 : Ref[Tensor(F32)][512]    # network.rgb.layer3.12.bn2.bn2d.moving_variance
        , %para505 : Ref[Tensor(F32)][512]    # network.rgb.layer3.13.bn2.bn2d.gamma
        , %para506 : Ref[Tensor(F32)][512]    # network.rgb.layer3.13.bn2.bn2d.beta
        , %para507 : Ref[Tensor(F32)][512]    # network.rgb.layer3.13.bn2.bn2d.moving_mean
        , %para508 : Ref[Tensor(F32)][512]    # network.rgb.layer3.13.bn2.bn2d.moving_variance
        , %para509 : Ref[Tensor(F32)][512]    # network.rgb.layer3.14.bn2.bn2d.gamma
        , %para510 : Ref[Tensor(F32)][512]    # network.rgb.layer3.14.bn2.bn2d.beta
        , %para511 : Ref[Tensor(F32)][512]    # network.rgb.layer3.14.bn2.bn2d.moving_mean
        , %para512 : Ref[Tensor(F32)][512]    # network.rgb.layer3.14.bn2.bn2d.moving_variance
        , %para513 : Ref[Tensor(F32)][512]    # network.rgb.layer3.15.bn2.bn2d.gamma
        , %para514 : Ref[Tensor(F32)][512]    # network.rgb.layer3.15.bn2.bn2d.beta
        , %para515 : Ref[Tensor(F32)][512]    # network.rgb.layer3.15.bn2.bn2d.moving_mean
        , %para516 : Ref[Tensor(F32)][512]    # network.rgb.layer3.15.bn2.bn2d.moving_variance
        , %para517 : Ref[Tensor(F32)][512]    # network.rgb.layer3.16.bn2.bn2d.gamma
        , %para518 : Ref[Tensor(F32)][512]    # network.rgb.layer3.16.bn2.bn2d.beta
        , %para519 : Ref[Tensor(F32)][512]    # network.rgb.layer3.16.bn2.bn2d.moving_mean
        , %para520 : Ref[Tensor(F32)][512]    # network.rgb.layer3.16.bn2.bn2d.moving_variance
        , %para521 : Ref[Tensor(F32)][512]    # network.rgb.layer3.17.bn2.bn2d.gamma
        , %para522 : Ref[Tensor(F32)][512]    # network.rgb.layer3.17.bn2.bn2d.beta
        , %para523 : Ref[Tensor(F32)][512]    # network.rgb.layer3.17.bn2.bn2d.moving_mean
        , %para524 : Ref[Tensor(F32)][512]    # network.rgb.layer3.17.bn2.bn2d.moving_variance
        , %para525 : Ref[Tensor(F32)][512]    # network.rgb.layer3.18.bn2.bn2d.gamma
        , %para526 : Ref[Tensor(F32)][512]    # network.rgb.layer3.18.bn2.bn2d.beta
        , %para527 : Ref[Tensor(F32)][512]    # network.rgb.layer3.18.bn2.bn2d.moving_mean
        , %para528 : Ref[Tensor(F32)][512]    # network.rgb.layer3.18.bn2.bn2d.moving_variance
        , %para529 : Ref[Tensor(F32)][512]    # network.rgb.layer3.19.bn2.bn2d.gamma
        , %para530 : Ref[Tensor(F32)][512]    # network.rgb.layer3.19.bn2.bn2d.beta
        , %para531 : Ref[Tensor(F32)][512]    # network.rgb.layer3.19.bn2.bn2d.moving_mean
        , %para532 : Ref[Tensor(F32)][512]    # network.rgb.layer3.19.bn2.bn2d.moving_variance
        , %para533 : Ref[Tensor(F32)][512]    # network.rgb.layer3.20.bn2.bn2d.gamma
        , %para534 : Ref[Tensor(F32)][512]    # network.rgb.layer3.20.bn2.bn2d.beta
        , %para535 : Ref[Tensor(F32)][512]    # network.rgb.layer3.20.bn2.bn2d.moving_mean
        , %para536 : Ref[Tensor(F32)][512]    # network.rgb.layer3.20.bn2.bn2d.moving_variance
        , %para537 : Ref[Tensor(F32)][512]    # network.rgb.layer3.21.bn2.bn2d.gamma
        , %para538 : Ref[Tensor(F32)][512]    # network.rgb.layer3.21.bn2.bn2d.beta
        , %para539 : Ref[Tensor(F32)][512]    # network.rgb.layer3.21.bn2.bn2d.moving_mean
        , %para540 : Ref[Tensor(F32)][512]    # network.rgb.layer3.21.bn2.bn2d.moving_variance
        , %para541 : Ref[Tensor(F32)][512]    # network.rgb.layer3.22.bn2.bn2d.gamma
        , %para542 : Ref[Tensor(F32)][512]    # network.rgb.layer3.22.bn2.bn2d.beta
        , %para543 : Ref[Tensor(F32)][512]    # network.rgb.layer3.22.bn2.bn2d.moving_mean
        , %para544 : Ref[Tensor(F32)][512]    # network.rgb.layer3.22.bn2.bn2d.moving_variance
        , %para545 : Ref[Tensor(F32)][512]    # network.depth.layer3.0.bn2.bn2d.gamma
        , %para546 : Ref[Tensor(F32)][512]    # network.depth.layer3.0.bn2.bn2d.beta
        , %para547 : Ref[Tensor(F32)][512]    # network.depth.layer3.0.bn2.bn2d.moving_mean
        , %para548 : Ref[Tensor(F32)][512]    # network.depth.layer3.0.bn2.bn2d.moving_variance
        , %para549 : Ref[Tensor(F32)][512]    # network.depth.layer3.1.bn2.bn2d.gamma
        , %para550 : Ref[Tensor(F32)][512]    # network.depth.layer3.1.bn2.bn2d.beta
        , %para551 : Ref[Tensor(F32)][512]    # network.depth.layer3.1.bn2.bn2d.moving_mean
        , %para552 : Ref[Tensor(F32)][512]    # network.depth.layer3.1.bn2.bn2d.moving_variance
        , %para553 : Ref[Tensor(F32)][512]    # network.depth.layer3.2.bn2.bn2d.gamma
        , %para554 : Ref[Tensor(F32)][512]    # network.depth.layer3.2.bn2.bn2d.beta
        , %para555 : Ref[Tensor(F32)][512]    # network.depth.layer3.2.bn2.bn2d.moving_mean
        , %para556 : Ref[Tensor(F32)][512]    # network.depth.layer3.2.bn2.bn2d.moving_variance
        , %para557 : Ref[Tensor(F32)][512]    # network.depth.layer3.3.bn2.bn2d.gamma
        , %para558 : Ref[Tensor(F32)][512]    # network.depth.layer3.3.bn2.bn2d.beta
        , %para559 : Ref[Tensor(F32)][512]    # network.depth.layer3.3.bn2.bn2d.moving_mean
        , %para560 : Ref[Tensor(F32)][512]    # network.depth.layer3.3.bn2.bn2d.moving_variance
        , %para561 : Ref[Tensor(F32)][512]    # network.depth.layer3.4.bn2.bn2d.gamma
        , %para562 : Ref[Tensor(F32)][512]    # network.depth.layer3.4.bn2.bn2d.beta
        , %para563 : Ref[Tensor(F32)][512]    # network.depth.layer3.4.bn2.bn2d.moving_mean
        , %para564 : Ref[Tensor(F32)][512]    # network.depth.layer3.4.bn2.bn2d.moving_variance
        , %para565 : Ref[Tensor(F32)][512]    # network.depth.layer3.5.bn2.bn2d.gamma
        , %para566 : Ref[Tensor(F32)][512]    # network.depth.layer3.5.bn2.bn2d.beta
        , %para567 : Ref[Tensor(F32)][512]    # network.depth.layer3.5.bn2.bn2d.moving_mean
        , %para568 : Ref[Tensor(F32)][512]    # network.depth.layer3.5.bn2.bn2d.moving_variance
        , %para569 : Ref[Tensor(F32)][512]    # network.depth.layer3.6.bn2.bn2d.gamma
        , %para570 : Ref[Tensor(F32)][512]    # network.depth.layer3.6.bn2.bn2d.beta
        , %para571 : Ref[Tensor(F32)][512]    # network.depth.layer3.6.bn2.bn2d.moving_mean
        , %para572 : Ref[Tensor(F32)][512]    # network.depth.layer3.6.bn2.bn2d.moving_variance
        , %para573 : Ref[Tensor(F32)][512]    # network.depth.layer3.7.bn2.bn2d.gamma
        , %para574 : Ref[Tensor(F32)][512]    # network.depth.layer3.7.bn2.bn2d.beta
        , %para575 : Ref[Tensor(F32)][512]    # network.depth.layer3.7.bn2.bn2d.moving_mean
        , %para576 : Ref[Tensor(F32)][512]    # network.depth.layer3.7.bn2.bn2d.moving_variance
        , %para577 : Ref[Tensor(F32)][512]    # network.depth.layer3.8.bn2.bn2d.gamma
        , %para578 : Ref[Tensor(F32)][512]    # network.depth.layer3.8.bn2.bn2d.beta
        , %para579 : Ref[Tensor(F32)][512]    # network.depth.layer3.8.bn2.bn2d.moving_mean
        , %para580 : Ref[Tensor(F32)][512]    # network.depth.layer3.8.bn2.bn2d.moving_variance
        , %para581 : Ref[Tensor(F32)][512]    # network.depth.layer3.9.bn2.bn2d.gamma
        , %para582 : Ref[Tensor(F32)][512]    # network.depth.layer3.9.bn2.bn2d.beta
        , %para583 : Ref[Tensor(F32)][512]    # network.depth.layer3.9.bn2.bn2d.moving_mean
        , %para584 : Ref[Tensor(F32)][512]    # network.depth.layer3.9.bn2.bn2d.moving_variance
        , %para585 : Ref[Tensor(F32)][512]    # network.depth.layer3.10.bn2.bn2d.gamma
        , %para586 : Ref[Tensor(F32)][512]    # network.depth.layer3.10.bn2.bn2d.beta
        , %para587 : Ref[Tensor(F32)][512]    # network.depth.layer3.10.bn2.bn2d.moving_mean
        , %para588 : Ref[Tensor(F32)][512]    # network.depth.layer3.10.bn2.bn2d.moving_variance
        , %para589 : Ref[Tensor(F32)][512]    # network.depth.layer3.11.bn2.bn2d.gamma
        , %para590 : Ref[Tensor(F32)][512]    # network.depth.layer3.11.bn2.bn2d.beta
        , %para591 : Ref[Tensor(F32)][512]    # network.depth.layer3.11.bn2.bn2d.moving_mean
        , %para592 : Ref[Tensor(F32)][512]    # network.depth.layer3.11.bn2.bn2d.moving_variance
        , %para593 : Ref[Tensor(F32)][512]    # network.depth.layer3.12.bn2.bn2d.gamma
        , %para594 : Ref[Tensor(F32)][512]    # network.depth.layer3.12.bn2.bn2d.beta
        , %para595 : Ref[Tensor(F32)][512]    # network.depth.layer3.12.bn2.bn2d.moving_mean
        , %para596 : Ref[Tensor(F32)][512]    # network.depth.layer3.12.bn2.bn2d.moving_variance
        , %para597 : Ref[Tensor(F32)][512]    # network.depth.layer3.13.bn2.bn2d.gamma
        , %para598 : Ref[Tensor(F32)][512]    # network.depth.layer3.13.bn2.bn2d.beta
        , %para599 : Ref[Tensor(F32)][512]    # network.depth.layer3.13.bn2.bn2d.moving_mean
        , %para600 : Ref[Tensor(F32)][512]    # network.depth.layer3.13.bn2.bn2d.moving_variance
        , %para601 : Ref[Tensor(F32)][512]    # network.depth.layer3.14.bn2.bn2d.gamma
        , %para602 : Ref[Tensor(F32)][512]    # network.depth.layer3.14.bn2.bn2d.beta
        , %para603 : Ref[Tensor(F32)][512]    # network.depth.layer3.14.bn2.bn2d.moving_mean
        , %para604 : Ref[Tensor(F32)][512]    # network.depth.layer3.14.bn2.bn2d.moving_variance
        , %para605 : Ref[Tensor(F32)][512]    # network.depth.layer3.15.bn2.bn2d.gamma
        , %para606 : Ref[Tensor(F32)][512]    # network.depth.layer3.15.bn2.bn2d.beta
        , %para607 : Ref[Tensor(F32)][512]    # network.depth.layer3.15.bn2.bn2d.moving_mean
        , %para608 : Ref[Tensor(F32)][512]    # network.depth.layer3.15.bn2.bn2d.moving_variance
        , %para609 : Ref[Tensor(F32)][512]    # network.depth.layer3.16.bn2.bn2d.gamma
        , %para610 : Ref[Tensor(F32)][512]    # network.depth.layer3.16.bn2.bn2d.beta
        , %para611 : Ref[Tensor(F32)][512]    # network.depth.layer3.16.bn2.bn2d.moving_mean
        , %para612 : Ref[Tensor(F32)][512]    # network.depth.layer3.16.bn2.bn2d.moving_variance
        , %para613 : Ref[Tensor(F32)][512]    # network.depth.layer3.17.bn2.bn2d.gamma
        , %para614 : Ref[Tensor(F32)][512]    # network.depth.layer3.17.bn2.bn2d.beta
        , %para615 : Ref[Tensor(F32)][512]    # network.depth.layer3.17.bn2.bn2d.moving_mean
        , %para616 : Ref[Tensor(F32)][512]    # network.depth.layer3.17.bn2.bn2d.moving_variance
        , %para617 : Ref[Tensor(F32)][512]    # network.depth.layer3.18.bn2.bn2d.gamma
        , %para618 : Ref[Tensor(F32)][512]    # network.depth.layer3.18.bn2.bn2d.beta
        , %para619 : Ref[Tensor(F32)][512]    # network.depth.layer3.18.bn2.bn2d.moving_mean
        , %para620 : Ref[Tensor(F32)][512]    # network.depth.layer3.18.bn2.bn2d.moving_variance
        , %para621 : Ref[Tensor(F32)][512]    # network.depth.layer3.19.bn2.bn2d.gamma
        , %para622 : Ref[Tensor(F32)][512]    # network.depth.layer3.19.bn2.bn2d.beta
        , %para623 : Ref[Tensor(F32)][512]    # network.depth.layer3.19.bn2.bn2d.moving_mean
        , %para624 : Ref[Tensor(F32)][512]    # network.depth.layer3.19.bn2.bn2d.moving_variance
        , %para625 : Ref[Tensor(F32)][512]    # network.depth.layer3.20.bn2.bn2d.gamma
        , %para626 : Ref[Tensor(F32)][512]    # network.depth.layer3.20.bn2.bn2d.beta
        , %para627 : Ref[Tensor(F32)][512]    # network.depth.layer3.20.bn2.bn2d.moving_mean
        , %para628 : Ref[Tensor(F32)][512]    # network.depth.layer3.20.bn2.bn2d.moving_variance
        , %para629 : Ref[Tensor(F32)][512]    # network.depth.layer3.21.bn2.bn2d.gamma
        , %para630 : Ref[Tensor(F32)][512]    # network.depth.layer3.21.bn2.bn2d.beta
        , %para631 : Ref[Tensor(F32)][512]    # network.depth.layer3.21.bn2.bn2d.moving_mean
        , %para632 : Ref[Tensor(F32)][512]    # network.depth.layer3.21.bn2.bn2d.moving_variance
        , %para633 : Ref[Tensor(F32)][512]    # network.depth.layer3.22.bn2.bn2d.gamma
        , %para634 : Ref[Tensor(F32)][512]    # network.depth.layer3.22.bn2.bn2d.beta
        , %para635 : Ref[Tensor(F32)][512]    # network.depth.layer3.22.bn2.bn2d.moving_mean
        , %para636 : Ref[Tensor(F32)][512]    # network.depth.layer3.22.bn2.bn2d.moving_variance
        , %para637 : Ref[Tensor(F32)][256]    # network.rgb.layer1.0.bn3.bn2d.gamma
        , %para638 : Ref[Tensor(F32)][256]    # network.rgb.layer1.0.bn3.bn2d.beta
        , %para639 : Ref[Tensor(F32)][256]    # network.rgb.layer1.0.bn3.bn2d.moving_mean
        , %para640 : Ref[Tensor(F32)][256]    # network.rgb.layer1.0.bn3.bn2d.moving_variance
        , %para641 : Ref[Tensor(F32)][128, 64, 1, 1, 1]    # network.rgb.layer1.0.conv1.weight
        , %para642 : Ref[Tensor(F32)][256]    # network.rgb.layer1.1.bn3.bn2d.gamma
        , %para643 : Ref[Tensor(F32)][256]    # network.rgb.layer1.1.bn3.bn2d.beta
        , %para644 : Ref[Tensor(F32)][256]    # network.rgb.layer1.1.bn3.bn2d.moving_mean
        , %para645 : Ref[Tensor(F32)][256]    # network.rgb.layer1.1.bn3.bn2d.moving_variance
        , %para646 : Ref[Tensor(F32)][128, 256, 1, 1, 1]    # network.rgb.layer1.1.conv1.weight
        , %para647 : Ref[Tensor(F32)][256]    # network.rgb.layer1.2.bn3.bn2d.gamma
        , %para648 : Ref[Tensor(F32)][256]    # network.rgb.layer1.2.bn3.bn2d.beta
        , %para649 : Ref[Tensor(F32)][256]    # network.rgb.layer1.2.bn3.bn2d.moving_mean
        , %para650 : Ref[Tensor(F32)][256]    # network.rgb.layer1.2.bn3.bn2d.moving_variance
        , %para651 : Ref[Tensor(F32)][128, 256, 1, 1, 1]    # network.rgb.layer1.2.conv1.weight
        , %para652 : Ref[Tensor(F32)][256]    # network.depth.layer1.0.bn3.bn2d.gamma
        , %para653 : Ref[Tensor(F32)][256]    # network.depth.layer1.0.bn3.bn2d.beta
        , %para654 : Ref[Tensor(F32)][256]    # network.depth.layer1.0.bn3.bn2d.moving_mean
        , %para655 : Ref[Tensor(F32)][256]    # network.depth.layer1.0.bn3.bn2d.moving_variance
        , %para656 : Ref[Tensor(F32)][128, 64, 1, 1, 1]    # network.depth.layer1.0.conv1.weight
        , %para657 : Ref[Tensor(F32)][256]    # network.depth.layer1.1.bn3.bn2d.gamma
        , %para658 : Ref[Tensor(F32)][256]    # network.depth.layer1.1.bn3.bn2d.beta
        , %para659 : Ref[Tensor(F32)][256]    # network.depth.layer1.1.bn3.bn2d.moving_mean
        , %para660 : Ref[Tensor(F32)][256]    # network.depth.layer1.1.bn3.bn2d.moving_variance
        , %para661 : Ref[Tensor(F32)][128, 256, 1, 1, 1]    # network.depth.layer1.1.conv1.weight
        , %para662 : Ref[Tensor(F32)][256]    # network.depth.layer1.2.bn3.bn2d.gamma
        , %para663 : Ref[Tensor(F32)][256]    # network.depth.layer1.2.bn3.bn2d.beta
        , %para664 : Ref[Tensor(F32)][256]    # network.depth.layer1.2.bn3.bn2d.moving_mean
        , %para665 : Ref[Tensor(F32)][256]    # network.depth.layer1.2.bn3.bn2d.moving_variance
        , %para666 : Ref[Tensor(F32)][128, 256, 1, 1, 1]    # network.depth.layer1.2.conv1.weight
        , %para667 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.0.downsample.1.bn2d.gamma
        , %para668 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.0.downsample.1.bn2d.beta
        , %para669 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.0.downsample.1.bn2d.moving_mean
        , %para670 : Ref[Tensor(F32)][1024]    # network.rgb.layer3.0.downsample.1.bn2d.moving_variance
        , %para671 : Ref[Tensor(F32)][1024]    # network.depth.layer3.0.downsample.1.bn2d.gamma
        , %para672 : Ref[Tensor(F32)][1024]    # network.depth.layer3.0.downsample.1.bn2d.beta
        , %para673 : Ref[Tensor(F32)][1024]    # network.depth.layer3.0.downsample.1.bn2d.moving_mean
        , %para674 : Ref[Tensor(F32)][1024]    # network.depth.layer3.0.downsample.1.bn2d.moving_variance
        , %para675 : Ref[Tensor(F32)][1024]    # network.rgb.layer4.0.bn1.bn2d.gamma
        , %para676 : Ref[Tensor(F32)][1024]    # network.rgb.layer4.0.bn1.bn2d.beta
        , %para677 : Ref[Tensor(F32)][1024]    # network.rgb.layer4.0.bn1.bn2d.moving_mean
        , %para678 : Ref[Tensor(F32)][1024]    # network.rgb.layer4.0.bn1.bn2d.moving_variance
        , %para679 : Ref[Tensor(F32)][1024]    # network.rgb.layer4.1.bn1.bn2d.gamma
        , %para680 : Ref[Tensor(F32)][1024]    # network.rgb.layer4.1.bn1.bn2d.beta
        , %para681 : Ref[Tensor(F32)][1024]    # network.rgb.layer4.1.bn1.bn2d.moving_mean
        , %para682 : Ref[Tensor(F32)][1024]    # network.rgb.layer4.1.bn1.bn2d.moving_variance
        , %para683 : Ref[Tensor(F32)][1024]    # network.rgb.layer4.2.bn1.bn2d.gamma
        , %para684 : Ref[Tensor(F32)][1024]    # network.rgb.layer4.2.bn1.bn2d.beta
        , %para685 : Ref[Tensor(F32)][1024]    # network.rgb.layer4.2.bn1.bn2d.moving_mean
        , %para686 : Ref[Tensor(F32)][1024]    # network.rgb.layer4.2.bn1.bn2d.moving_variance
        , %para687 : Ref[Tensor(F32)][1024]    # network.depth.layer4.0.bn1.bn2d.gamma
        , %para688 : Ref[Tensor(F32)][1024]    # network.depth.layer4.0.bn1.bn2d.beta
        , %para689 : Ref[Tensor(F32)][1024]    # network.depth.layer4.0.bn1.bn2d.moving_mean
        , %para690 : Ref[Tensor(F32)][1024]    # network.depth.layer4.0.bn1.bn2d.moving_variance
        , %para691 : Ref[Tensor(F32)][1024]    # network.depth.layer4.1.bn1.bn2d.gamma
        , %para692 : Ref[Tensor(F32)][1024]    # network.depth.layer4.1.bn1.bn2d.beta
        , %para693 : Ref[Tensor(F32)][1024]    # network.depth.layer4.1.bn1.bn2d.moving_mean
        , %para694 : Ref[Tensor(F32)][1024]    # network.depth.layer4.1.bn1.bn2d.moving_variance
        , %para695 : Ref[Tensor(F32)][1024]    # network.depth.layer4.2.bn1.bn2d.gamma
        , %para696 : Ref[Tensor(F32)][1024]    # network.depth.layer4.2.bn1.bn2d.beta
        , %para697 : Ref[Tensor(F32)][1024]    # network.depth.layer4.2.bn1.bn2d.moving_mean
        , %para698 : Ref[Tensor(F32)][1024]    # network.depth.layer4.2.bn1.bn2d.moving_variance
        , %para699 : Ref[Tensor(F32)][256]    # network.rgb.layer2.0.bn2.bn2d.gamma
        , %para700 : Ref[Tensor(F32)][256]    # network.rgb.layer2.0.bn2.bn2d.beta
        , %para701 : Ref[Tensor(F32)][256]    # network.rgb.layer2.0.bn2.bn2d.moving_mean
        , %para702 : Ref[Tensor(F32)][256]    # network.rgb.layer2.0.bn2.bn2d.moving_variance
        , %para703 : Ref[Tensor(F32)][256]    # network.rgb.layer2.1.bn2.bn2d.gamma
        , %para704 : Ref[Tensor(F32)][256]    # network.rgb.layer2.1.bn2.bn2d.beta
        , %para705 : Ref[Tensor(F32)][256]    # network.rgb.layer2.1.bn2.bn2d.moving_mean
        , %para706 : Ref[Tensor(F32)][256]    # network.rgb.layer2.1.bn2.bn2d.moving_variance
        , %para707 : Ref[Tensor(F32)][256]    # network.rgb.layer2.2.bn2.bn2d.gamma
        , %para708 : Ref[Tensor(F32)][256]    # network.rgb.layer2.2.bn2.bn2d.beta
        , %para709 : Ref[Tensor(F32)][256]    # network.rgb.layer2.2.bn2.bn2d.moving_mean
        , %para710 : Ref[Tensor(F32)][256]    # network.rgb.layer2.2.bn2.bn2d.moving_variance
        , %para711 : Ref[Tensor(F32)][256]    # network.rgb.layer2.3.bn2.bn2d.gamma
        , %para712 : Ref[Tensor(F32)][256]    # network.rgb.layer2.3.bn2.bn2d.beta
        , %para713 : Ref[Tensor(F32)][256]    # network.rgb.layer2.3.bn2.bn2d.moving_mean
        , %para714 : Ref[Tensor(F32)][256]    # network.rgb.layer2.3.bn2.bn2d.moving_variance
        , %para715 : Ref[Tensor(F32)][256]    # network.depth.layer2.0.bn2.bn2d.gamma
        , %para716 : Ref[Tensor(F32)][256]    # network.depth.layer2.0.bn2.bn2d.beta
        , %para717 : Ref[Tensor(F32)][256]    # network.depth.layer2.0.bn2.bn2d.moving_mean
        , %para718 : Ref[Tensor(F32)][256]    # network.depth.layer2.0.bn2.bn2d.moving_variance
        , %para719 : Ref[Tensor(F32)][256]    # network.depth.layer2.1.bn2.bn2d.gamma
        , %para720 : Ref[Tensor(F32)][256]    # network.depth.layer2.1.bn2.bn2d.beta
        , %para721 : Ref[Tensor(F32)][256]    # network.depth.layer2.1.bn2.bn2d.moving_mean
        , %para722 : Ref[Tensor(F32)][256]    # network.depth.layer2.1.bn2.bn2d.moving_variance
        , %para723 : Ref[Tensor(F32)][256]    # network.depth.layer2.2.bn2.bn2d.gamma
        , %para724 : Ref[Tensor(F32)][256]    # network.depth.layer2.2.bn2.bn2d.beta
        , %para725 : Ref[Tensor(F32)][256]    # network.depth.layer2.2.bn2.bn2d.moving_mean
        , %para726 : Ref[Tensor(F32)][256]    # network.depth.layer2.2.bn2.bn2d.moving_variance
        , %para727 : Ref[Tensor(F32)][256]    # network.depth.layer2.3.bn2.bn2d.gamma
        , %para728 : Ref[Tensor(F32)][256]    # network.depth.layer2.3.bn2.bn2d.beta
        , %para729 : Ref[Tensor(F32)][256]    # network.depth.layer2.3.bn2.bn2d.moving_mean
        , %para730 : Ref[Tensor(F32)][256]    # network.depth.layer2.3.bn2.bn2d.moving_variance
        , %para731 : Ref[Tensor(F32)][512]    # network.rgb.layer2.0.downsample.1.bn2d.gamma
        , %para732 : Ref[Tensor(F32)][512]    # network.rgb.layer2.0.downsample.1.bn2d.beta
        , %para733 : Ref[Tensor(F32)][512]    # network.rgb.layer2.0.downsample.1.bn2d.moving_mean
        , %para734 : Ref[Tensor(F32)][512]    # network.rgb.layer2.0.downsample.1.bn2d.moving_variance
        , %para735 : Ref[Tensor(F32)][512]    # network.depth.layer2.0.downsample.1.bn2d.gamma
        , %para736 : Ref[Tensor(F32)][512]    # network.depth.layer2.0.downsample.1.bn2d.beta
        , %para737 : Ref[Tensor(F32)][512]    # network.depth.layer2.0.downsample.1.bn2d.moving_mean
        , %para738 : Ref[Tensor(F32)][512]    # network.depth.layer2.0.downsample.1.bn2d.moving_variance
        , %para739 : Ref[Tensor(F32)][512]    # network.rgb.layer3.0.bn1.bn2d.gamma
        , %para740 : Ref[Tensor(F32)][512]    # network.rgb.layer3.0.bn1.bn2d.beta
        , %para741 : Ref[Tensor(F32)][512]    # network.rgb.layer3.0.bn1.bn2d.moving_mean
        , %para742 : Ref[Tensor(F32)][512]    # network.rgb.layer3.0.bn1.bn2d.moving_variance
        , %para743 : Ref[Tensor(F32)][512]    # network.rgb.layer3.1.bn1.bn2d.gamma
        , %para744 : Ref[Tensor(F32)][512]    # network.rgb.layer3.1.bn1.bn2d.beta
        , %para745 : Ref[Tensor(F32)][512]    # network.rgb.layer3.1.bn1.bn2d.moving_mean
        , %para746 : Ref[Tensor(F32)][512]    # network.rgb.layer3.1.bn1.bn2d.moving_variance
        , %para747 : Ref[Tensor(F32)][512]    # network.rgb.layer3.2.bn1.bn2d.gamma
        , %para748 : Ref[Tensor(F32)][512]    # network.rgb.layer3.2.bn1.bn2d.beta
        , %para749 : Ref[Tensor(F32)][512]    # network.rgb.layer3.2.bn1.bn2d.moving_mean
        , %para750 : Ref[Tensor(F32)][512]    # network.rgb.layer3.2.bn1.bn2d.moving_variance
        , %para751 : Ref[Tensor(F32)][512]    # network.rgb.layer3.3.bn1.bn2d.gamma
        , %para752 : Ref[Tensor(F32)][512]    # network.rgb.layer3.3.bn1.bn2d.beta
        , %para753 : Ref[Tensor(F32)][512]    # network.rgb.layer3.3.bn1.bn2d.moving_mean
        , %para754 : Ref[Tensor(F32)][512]    # network.rgb.layer3.3.bn1.bn2d.moving_variance
        , %para755 : Ref[Tensor(F32)][512]    # network.rgb.layer3.4.bn1.bn2d.gamma
        , %para756 : Ref[Tensor(F32)][512]    # network.rgb.layer3.4.bn1.bn2d.beta
        , %para757 : Ref[Tensor(F32)][512]    # network.rgb.layer3.4.bn1.bn2d.moving_mean
        , %para758 : Ref[Tensor(F32)][512]    # network.rgb.layer3.4.bn1.bn2d.moving_variance
        , %para759 : Ref[Tensor(F32)][512]    # network.rgb.layer3.5.bn1.bn2d.gamma
        , %para760 : Ref[Tensor(F32)][512]    # network.rgb.layer3.5.bn1.bn2d.beta
        , %para761 : Ref[Tensor(F32)][512]    # network.rgb.layer3.5.bn1.bn2d.moving_mean
        , %para762 : Ref[Tensor(F32)][512]    # network.rgb.layer3.5.bn1.bn2d.moving_variance
        , %para763 : Ref[Tensor(F32)][512]    # network.rgb.layer3.6.bn1.bn2d.gamma
        , %para764 : Ref[Tensor(F32)][512]    # network.rgb.layer3.6.bn1.bn2d.beta
        , %para765 : Ref[Tensor(F32)][512]    # network.rgb.layer3.6.bn1.bn2d.moving_mean
        , %para766 : Ref[Tensor(F32)][512]    # network.rgb.layer3.6.bn1.bn2d.moving_variance
        , %para767 : Ref[Tensor(F32)][512]    # network.rgb.layer3.7.bn1.bn2d.gamma
        , %para768 : Ref[Tensor(F32)][512]    # network.rgb.layer3.7.bn1.bn2d.beta
        , %para769 : Ref[Tensor(F32)][512]    # network.rgb.layer3.7.bn1.bn2d.moving_mean
        , %para770 : Ref[Tensor(F32)][512]    # network.rgb.layer3.7.bn1.bn2d.moving_variance
        , %para771 : Ref[Tensor(F32)][512]    # network.rgb.layer3.8.bn1.bn2d.gamma
        , %para772 : Ref[Tensor(F32)][512]    # network.rgb.layer3.8.bn1.bn2d.beta
        , %para773 : Ref[Tensor(F32)][512]    # network.rgb.layer3.8.bn1.bn2d.moving_mean
        , %para774 : Ref[Tensor(F32)][512]    # network.rgb.layer3.8.bn1.bn2d.moving_variance
        , %para775 : Ref[Tensor(F32)][512]    # network.rgb.layer3.9.bn1.bn2d.gamma
        , %para776 : Ref[Tensor(F32)][512]    # network.rgb.layer3.9.bn1.bn2d.beta
        , %para777 : Ref[Tensor(F32)][512]    # network.rgb.layer3.9.bn1.bn2d.moving_mean
        , %para778 : Ref[Tensor(F32)][512]    # network.rgb.layer3.9.bn1.bn2d.moving_variance
        , %para779 : Ref[Tensor(F32)][512]    # network.rgb.layer3.10.bn1.bn2d.gamma
        , %para780 : Ref[Tensor(F32)][512]    # network.rgb.layer3.10.bn1.bn2d.beta
        , %para781 : Ref[Tensor(F32)][512]    # network.rgb.layer3.10.bn1.bn2d.moving_mean
        , %para782 : Ref[Tensor(F32)][512]    # network.rgb.layer3.10.bn1.bn2d.moving_variance
        , %para783 : Ref[Tensor(F32)][512]    # network.rgb.layer3.11.bn1.bn2d.gamma
        , %para784 : Ref[Tensor(F32)][512]    # network.rgb.layer3.11.bn1.bn2d.beta
        , %para785 : Ref[Tensor(F32)][512]    # network.rgb.layer3.11.bn1.bn2d.moving_mean
        , %para786 : Ref[Tensor(F32)][512]    # network.rgb.layer3.11.bn1.bn2d.moving_variance
        , %para787 : Ref[Tensor(F32)][512]    # network.rgb.layer3.12.bn1.bn2d.gamma
        , %para788 : Ref[Tensor(F32)][512]    # network.rgb.layer3.12.bn1.bn2d.beta
        , %para789 : Ref[Tensor(F32)][512]    # network.rgb.layer3.12.bn1.bn2d.moving_mean
        , %para790 : Ref[Tensor(F32)][512]    # network.rgb.layer3.12.bn1.bn2d.moving_variance
        , %para791 : Ref[Tensor(F32)][512]    # network.rgb.layer3.13.bn1.bn2d.gamma
        , %para792 : Ref[Tensor(F32)][512]    # network.rgb.layer3.13.bn1.bn2d.beta
        , %para793 : Ref[Tensor(F32)][512]    # network.rgb.layer3.13.bn1.bn2d.moving_mean
        , %para794 : Ref[Tensor(F32)][512]    # network.rgb.layer3.13.bn1.bn2d.moving_variance
        , %para795 : Ref[Tensor(F32)][512]    # network.rgb.layer3.14.bn1.bn2d.gamma
        , %para796 : Ref[Tensor(F32)][512]    # network.rgb.layer3.14.bn1.bn2d.beta
        , %para797 : Ref[Tensor(F32)][512]    # network.rgb.layer3.14.bn1.bn2d.moving_mean
        , %para798 : Ref[Tensor(F32)][512]    # network.rgb.layer3.14.bn1.bn2d.moving_variance
        , %para799 : Ref[Tensor(F32)][512]    # network.rgb.layer3.15.bn1.bn2d.gamma
        , %para800 : Ref[Tensor(F32)][512]    # network.rgb.layer3.15.bn1.bn2d.beta
        , %para801 : Ref[Tensor(F32)][512]    # network.rgb.layer3.15.bn1.bn2d.moving_mean
        , %para802 : Ref[Tensor(F32)][512]    # network.rgb.layer3.15.bn1.bn2d.moving_variance
        , %para803 : Ref[Tensor(F32)][512]    # network.rgb.layer3.16.bn1.bn2d.gamma
        , %para804 : Ref[Tensor(F32)][512]    # network.rgb.layer3.16.bn1.bn2d.beta
        , %para805 : Ref[Tensor(F32)][512]    # network.rgb.layer3.16.bn1.bn2d.moving_mean
        , %para806 : Ref[Tensor(F32)][512]    # network.rgb.layer3.16.bn1.bn2d.moving_variance
        , %para807 : Ref[Tensor(F32)][512]    # network.rgb.layer3.17.bn1.bn2d.gamma
        , %para808 : Ref[Tensor(F32)][512]    # network.rgb.layer3.17.bn1.bn2d.beta
        , %para809 : Ref[Tensor(F32)][512]    # network.rgb.layer3.17.bn1.bn2d.moving_mean
        , %para810 : Ref[Tensor(F32)][512]    # network.rgb.layer3.17.bn1.bn2d.moving_variance
        , %para811 : Ref[Tensor(F32)][512]    # network.rgb.layer3.18.bn1.bn2d.gamma
        , %para812 : Ref[Tensor(F32)][512]    # network.rgb.layer3.18.bn1.bn2d.beta
        , %para813 : Ref[Tensor(F32)][512]    # network.rgb.layer3.18.bn1.bn2d.moving_mean
        , %para814 : Ref[Tensor(F32)][512]    # network.rgb.layer3.18.bn1.bn2d.moving_variance
        , %para815 : Ref[Tensor(F32)][512]    # network.rgb.layer3.19.bn1.bn2d.gamma
        , %para816 : Ref[Tensor(F32)][512]    # network.rgb.layer3.19.bn1.bn2d.beta
        , %para817 : Ref[Tensor(F32)][512]    # network.rgb.layer3.19.bn1.bn2d.moving_mean
        , %para818 : Ref[Tensor(F32)][512]    # network.rgb.layer3.19.bn1.bn2d.moving_variance
        , %para819 : Ref[Tensor(F32)][512]    # network.rgb.layer3.20.bn1.bn2d.gamma
        , %para820 : Ref[Tensor(F32)][512]    # network.rgb.layer3.20.bn1.bn2d.beta
        , %para821 : Ref[Tensor(F32)][512]    # network.rgb.layer3.20.bn1.bn2d.moving_mean
        , %para822 : Ref[Tensor(F32)][512]    # network.rgb.layer3.20.bn1.bn2d.moving_variance
        , %para823 : Ref[Tensor(F32)][512]    # network.rgb.layer3.21.bn1.bn2d.gamma
        , %para824 : Ref[Tensor(F32)][512]    # network.rgb.layer3.21.bn1.bn2d.beta
        , %para825 : Ref[Tensor(F32)][512]    # network.rgb.layer3.21.bn1.bn2d.moving_mean
        , %para826 : Ref[Tensor(F32)][512]    # network.rgb.layer3.21.bn1.bn2d.moving_variance
        , %para827 : Ref[Tensor(F32)][512]    # network.rgb.layer3.22.bn1.bn2d.gamma
        , %para828 : Ref[Tensor(F32)][512]    # network.rgb.layer3.22.bn1.bn2d.beta
        , %para829 : Ref[Tensor(F32)][512]    # network.rgb.layer3.22.bn1.bn2d.moving_mean
        , %para830 : Ref[Tensor(F32)][512]    # network.rgb.layer3.22.bn1.bn2d.moving_variance
        , %para831 : Ref[Tensor(F32)][512]    # network.depth.layer3.0.bn1.bn2d.gamma
        , %para832 : Ref[Tensor(F32)][512]    # network.depth.layer3.0.bn1.bn2d.beta
        , %para833 : Ref[Tensor(F32)][512]    # network.depth.layer3.0.bn1.bn2d.moving_mean
        , %para834 : Ref[Tensor(F32)][512]    # network.depth.layer3.0.bn1.bn2d.moving_variance
        , %para835 : Ref[Tensor(F32)][512]    # network.depth.layer3.1.bn1.bn2d.gamma
        , %para836 : Ref[Tensor(F32)][512]    # network.depth.layer3.1.bn1.bn2d.beta
        , %para837 : Ref[Tensor(F32)][512]    # network.depth.layer3.1.bn1.bn2d.moving_mean
        , %para838 : Ref[Tensor(F32)][512]    # network.depth.layer3.1.bn1.bn2d.moving_variance
        , %para839 : Ref[Tensor(F32)][512]    # network.depth.layer3.2.bn1.bn2d.gamma
        , %para840 : Ref[Tensor(F32)][512]    # network.depth.layer3.2.bn1.bn2d.beta
        , %para841 : Ref[Tensor(F32)][512]    # network.depth.layer3.2.bn1.bn2d.moving_mean
        , %para842 : Ref[Tensor(F32)][512]    # network.depth.layer3.2.bn1.bn2d.moving_variance
        , %para843 : Ref[Tensor(F32)][512]    # network.depth.layer3.3.bn1.bn2d.gamma
        , %para844 : Ref[Tensor(F32)][512]    # network.depth.layer3.3.bn1.bn2d.beta
        , %para845 : Ref[Tensor(F32)][512]    # network.depth.layer3.3.bn1.bn2d.moving_mean
        , %para846 : Ref[Tensor(F32)][512]    # network.depth.layer3.3.bn1.bn2d.moving_variance
        , %para847 : Ref[Tensor(F32)][512]    # network.depth.layer3.4.bn1.bn2d.gamma
        , %para848 : Ref[Tensor(F32)][512]    # network.depth.layer3.4.bn1.bn2d.beta
        , %para849 : Ref[Tensor(F32)][512]    # network.depth.layer3.4.bn1.bn2d.moving_mean
        , %para850 : Ref[Tensor(F32)][512]    # network.depth.layer3.4.bn1.bn2d.moving_variance
        , %para851 : Ref[Tensor(F32)][512]    # network.depth.layer3.5.bn1.bn2d.gamma
        , %para852 : Ref[Tensor(F32)][512]    # network.depth.layer3.5.bn1.bn2d.beta
        , %para853 : Ref[Tensor(F32)][512]    # network.depth.layer3.5.bn1.bn2d.moving_mean
        , %para854 : Ref[Tensor(F32)][512]    # network.depth.layer3.5.bn1.bn2d.moving_variance
        , %para855 : Ref[Tensor(F32)][512]    # network.depth.layer3.6.bn1.bn2d.gamma
        , %para856 : Ref[Tensor(F32)][512]    # network.depth.layer3.6.bn1.bn2d.beta
        , %para857 : Ref[Tensor(F32)][512]    # network.depth.layer3.6.bn1.bn2d.moving_mean
        , %para858 : Ref[Tensor(F32)][512]    # network.depth.layer3.6.bn1.bn2d.moving_variance
        , %para859 : Ref[Tensor(F32)][512]    # network.depth.layer3.7.bn1.bn2d.gamma
        , %para860 : Ref[Tensor(F32)][512]    # network.depth.layer3.7.bn1.bn2d.beta
        , %para861 : Ref[Tensor(F32)][512]    # network.depth.layer3.7.bn1.bn2d.moving_mean
        , %para862 : Ref[Tensor(F32)][512]    # network.depth.layer3.7.bn1.bn2d.moving_variance
        , %para863 : Ref[Tensor(F32)][512]    # network.depth.layer3.8.bn1.bn2d.gamma
        , %para864 : Ref[Tensor(F32)][512]    # network.depth.layer3.8.bn1.bn2d.beta
        , %para865 : Ref[Tensor(F32)][512]    # network.depth.layer3.8.bn1.bn2d.moving_mean
        , %para866 : Ref[Tensor(F32)][512]    # network.depth.layer3.8.bn1.bn2d.moving_variance
        , %para867 : Ref[Tensor(F32)][512]    # network.depth.layer3.9.bn1.bn2d.gamma
        , %para868 : Ref[Tensor(F32)][512]    # network.depth.layer3.9.bn1.bn2d.beta
        , %para869 : Ref[Tensor(F32)][512]    # network.depth.layer3.9.bn1.bn2d.moving_mean
        , %para870 : Ref[Tensor(F32)][512]    # network.depth.layer3.9.bn1.bn2d.moving_variance
        , %para871 : Ref[Tensor(F32)][512]    # network.depth.layer3.10.bn1.bn2d.gamma
        , %para872 : Ref[Tensor(F32)][512]    # network.depth.layer3.10.bn1.bn2d.beta
        , %para873 : Ref[Tensor(F32)][512]    # network.depth.layer3.10.bn1.bn2d.moving_mean
        , %para874 : Ref[Tensor(F32)][512]    # network.depth.layer3.10.bn1.bn2d.moving_variance
        , %para875 : Ref[Tensor(F32)][512]    # network.depth.layer3.11.bn1.bn2d.gamma
        , %para876 : Ref[Tensor(F32)][512]    # network.depth.layer3.11.bn1.bn2d.beta
        , %para877 : Ref[Tensor(F32)][512]    # network.depth.layer3.11.bn1.bn2d.moving_mean
        , %para878 : Ref[Tensor(F32)][512]    # network.depth.layer3.11.bn1.bn2d.moving_variance
        , %para879 : Ref[Tensor(F32)][512]    # network.depth.layer3.12.bn1.bn2d.gamma
        , %para880 : Ref[Tensor(F32)][512]    # network.depth.layer3.12.bn1.bn2d.beta
        , %para881 : Ref[Tensor(F32)][512]    # network.depth.layer3.12.bn1.bn2d.moving_mean
        , %para882 : Ref[Tensor(F32)][512]    # network.depth.layer3.12.bn1.bn2d.moving_variance
        , %para883 : Ref[Tensor(F32)][512]    # network.depth.layer3.13.bn1.bn2d.gamma
        , %para884 : Ref[Tensor(F32)][512]    # network.depth.layer3.13.bn1.bn2d.beta
        , %para885 : Ref[Tensor(F32)][512]    # network.depth.layer3.13.bn1.bn2d.moving_mean
        , %para886 : Ref[Tensor(F32)][512]    # network.depth.layer3.13.bn1.bn2d.moving_variance
        , %para887 : Ref[Tensor(F32)][512]    # network.depth.layer3.14.bn1.bn2d.gamma
        , %para888 : Ref[Tensor(F32)][512]    # network.depth.layer3.14.bn1.bn2d.beta
        , %para889 : Ref[Tensor(F32)][512]    # network.depth.layer3.14.bn1.bn2d.moving_mean
        , %para890 : Ref[Tensor(F32)][512]    # network.depth.layer3.14.bn1.bn2d.moving_variance
        , %para891 : Ref[Tensor(F32)][512]    # network.depth.layer3.15.bn1.bn2d.gamma
        , %para892 : Ref[Tensor(F32)][512]    # network.depth.layer3.15.bn1.bn2d.beta
        , %para893 : Ref[Tensor(F32)][512]    # network.depth.layer3.15.bn1.bn2d.moving_mean
        , %para894 : Ref[Tensor(F32)][512]    # network.depth.layer3.15.bn1.bn2d.moving_variance
        , %para895 : Ref[Tensor(F32)][512]    # network.depth.layer3.16.bn1.bn2d.gamma
        , %para896 : Ref[Tensor(F32)][512]    # network.depth.layer3.16.bn1.bn2d.beta
        , %para897 : Ref[Tensor(F32)][512]    # network.depth.layer3.16.bn1.bn2d.moving_mean
        , %para898 : Ref[Tensor(F32)][512]    # network.depth.layer3.16.bn1.bn2d.moving_variance
        , %para899 : Ref[Tensor(F32)][512]    # network.depth.layer3.17.bn1.bn2d.gamma
        , %para900 : Ref[Tensor(F32)][512]    # network.depth.layer3.17.bn1.bn2d.beta
        , %para901 : Ref[Tensor(F32)][512]    # network.depth.layer3.17.bn1.bn2d.moving_mean
        , %para902 : Ref[Tensor(F32)][512]    # network.depth.layer3.17.bn1.bn2d.moving_variance
        , %para903 : Ref[Tensor(F32)][512]    # network.depth.layer3.18.bn1.bn2d.gamma
        , %para904 : Ref[Tensor(F32)][512]    # network.depth.layer3.18.bn1.bn2d.beta
        , %para905 : Ref[Tensor(F32)][512]    # network.depth.layer3.18.bn1.bn2d.moving_mean
        , %para906 : Ref[Tensor(F32)][512]    # network.depth.layer3.18.bn1.bn2d.moving_variance
        , %para907 : Ref[Tensor(F32)][512]    # network.depth.layer3.19.bn1.bn2d.gamma
        , %para908 : Ref[Tensor(F32)][512]    # network.depth.layer3.19.bn1.bn2d.beta
        , %para909 : Ref[Tensor(F32)][512]    # network.depth.layer3.19.bn1.bn2d.moving_mean
        , %para910 : Ref[Tensor(F32)][512]    # network.depth.layer3.19.bn1.bn2d.moving_variance
        , %para911 : Ref[Tensor(F32)][512]    # network.depth.layer3.20.bn1.bn2d.gamma
        , %para912 : Ref[Tensor(F32)][512]    # network.depth.layer3.20.bn1.bn2d.beta
        , %para913 : Ref[Tensor(F32)][512]    # network.depth.layer3.20.bn1.bn2d.moving_mean
        , %para914 : Ref[Tensor(F32)][512]    # network.depth.layer3.20.bn1.bn2d.moving_variance
        , %para915 : Ref[Tensor(F32)][512]    # network.depth.layer3.21.bn1.bn2d.gamma
        , %para916 : Ref[Tensor(F32)][512]    # network.depth.layer3.21.bn1.bn2d.beta
        , %para917 : Ref[Tensor(F32)][512]    # network.depth.layer3.21.bn1.bn2d.moving_mean
        , %para918 : Ref[Tensor(F32)][512]    # network.depth.layer3.21.bn1.bn2d.moving_variance
        , %para919 : Ref[Tensor(F32)][512]    # network.depth.layer3.22.bn1.bn2d.gamma
        , %para920 : Ref[Tensor(F32)][512]    # network.depth.layer3.22.bn1.bn2d.beta
        , %para921 : Ref[Tensor(F32)][512]    # network.depth.layer3.22.bn1.bn2d.moving_mean
        , %para922 : Ref[Tensor(F32)][512]    # network.depth.layer3.22.bn1.bn2d.moving_variance
        , %para923 : Ref[Tensor(F32)][128]    # network.rgb.layer1.0.bn2.bn2d.gamma
        , %para924 : Ref[Tensor(F32)][128]    # network.rgb.layer1.0.bn2.bn2d.beta
        , %para925 : Ref[Tensor(F32)][128]    # network.rgb.layer1.0.bn2.bn2d.moving_mean
        , %para926 : Ref[Tensor(F32)][128]    # network.rgb.layer1.0.bn2.bn2d.moving_variance
        , %para927 : Ref[Tensor(F32)][128]    # network.rgb.layer1.1.bn2.bn2d.gamma
        , %para928 : Ref[Tensor(F32)][128]    # network.rgb.layer1.1.bn2.bn2d.beta
        , %para929 : Ref[Tensor(F32)][128]    # network.rgb.layer1.1.bn2.bn2d.moving_mean
        , %para930 : Ref[Tensor(F32)][128]    # network.rgb.layer1.1.bn2.bn2d.moving_variance
        , %para931 : Ref[Tensor(F32)][128]    # network.rgb.layer1.2.bn2.bn2d.gamma
        , %para932 : Ref[Tensor(F32)][128]    # network.rgb.layer1.2.bn2.bn2d.beta
        , %para933 : Ref[Tensor(F32)][128]    # network.rgb.layer1.2.bn2.bn2d.moving_mean
        , %para934 : Ref[Tensor(F32)][128]    # network.rgb.layer1.2.bn2.bn2d.moving_variance
        , %para935 : Ref[Tensor(F32)][128]    # network.depth.layer1.0.bn2.bn2d.gamma
        , %para936 : Ref[Tensor(F32)][128]    # network.depth.layer1.0.bn2.bn2d.beta
        , %para937 : Ref[Tensor(F32)][128]    # network.depth.layer1.0.bn2.bn2d.moving_mean
        , %para938 : Ref[Tensor(F32)][128]    # network.depth.layer1.0.bn2.bn2d.moving_variance
        , %para939 : Ref[Tensor(F32)][128]    # network.depth.layer1.1.bn2.bn2d.gamma
        , %para940 : Ref[Tensor(F32)][128]    # network.depth.layer1.1.bn2.bn2d.beta
        , %para941 : Ref[Tensor(F32)][128]    # network.depth.layer1.1.bn2.bn2d.moving_mean
        , %para942 : Ref[Tensor(F32)][128]    # network.depth.layer1.1.bn2.bn2d.moving_variance
        , %para943 : Ref[Tensor(F32)][128]    # network.depth.layer1.2.bn2.bn2d.gamma
        , %para944 : Ref[Tensor(F32)][128]    # network.depth.layer1.2.bn2.bn2d.beta
        , %para945 : Ref[Tensor(F32)][128]    # network.depth.layer1.2.bn2.bn2d.moving_mean
        , %para946 : Ref[Tensor(F32)][128]    # network.depth.layer1.2.bn2.bn2d.moving_variance
        , %para947 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.0.weight
        , %para948 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.1.weight
        , %para949 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.2.weight
        , %para950 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.3.weight
        , %para951 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.4.weight
        , %para952 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.5.weight
        , %para953 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.6.weight
        , %para954 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.7.weight
        , %para955 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.8.weight
        , %para956 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.9.weight
        , %para957 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.10.weight
        , %para958 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.11.weight
        , %para959 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.12.weight
        , %para960 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.13.weight
        , %para961 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.14.weight
        , %para962 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.15.weight
        , %para963 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.16.weight
        , %para964 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.17.weight
        , %para965 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.18.weight
        , %para966 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.19.weight
        , %para967 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.20.weight
        , %para968 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.21.weight
        , %para969 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.22.weight
        , %para970 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.23.weight
        , %para971 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.24.weight
        , %para972 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.25.weight
        , %para973 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.26.weight
        , %para974 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.27.weight
        , %para975 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.28.weight
        , %para976 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.29.weight
        , %para977 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.30.weight
        , %para978 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.0.conv2.convs.31.weight
        , %para979 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.0.weight
        , %para980 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.1.weight
        , %para981 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.2.weight
        , %para982 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.3.weight
        , %para983 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.4.weight
        , %para984 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.5.weight
        , %para985 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.6.weight
        , %para986 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.7.weight
        , %para987 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.8.weight
        , %para988 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.9.weight
        , %para989 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.10.weight
        , %para990 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.11.weight
        , %para991 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.12.weight
        , %para992 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.13.weight
        , %para993 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.14.weight
        , %para994 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.15.weight
        , %para995 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.16.weight
        , %para996 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.17.weight
        , %para997 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.18.weight
        , %para998 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.19.weight
        , %para999 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.20.weight
        , %para1000 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.21.weight
        , %para1001 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.22.weight
        , %para1002 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.23.weight
        , %para1003 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.24.weight
        , %para1004 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.25.weight
        , %para1005 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.26.weight
        , %para1006 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.27.weight
        , %para1007 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.28.weight
        , %para1008 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.29.weight
        , %para1009 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.30.weight
        , %para1010 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.1.conv2.convs.31.weight
        , %para1011 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.0.weight
        , %para1012 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.1.weight
        , %para1013 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.2.weight
        , %para1014 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.3.weight
        , %para1015 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.4.weight
        , %para1016 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.5.weight
        , %para1017 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.6.weight
        , %para1018 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.7.weight
        , %para1019 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.8.weight
        , %para1020 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.9.weight
        , %para1021 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.10.weight
        , %para1022 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.11.weight
        , %para1023 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.12.weight
        , %para1024 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.13.weight
        , %para1025 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.14.weight
        , %para1026 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.15.weight
        , %para1027 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.16.weight
        , %para1028 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.17.weight
        , %para1029 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.18.weight
        , %para1030 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.19.weight
        , %para1031 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.20.weight
        , %para1032 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.21.weight
        , %para1033 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.22.weight
        , %para1034 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.23.weight
        , %para1035 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.24.weight
        , %para1036 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.25.weight
        , %para1037 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.26.weight
        , %para1038 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.27.weight
        , %para1039 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.28.weight
        , %para1040 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.29.weight
        , %para1041 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.30.weight
        , %para1042 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.rgb.layer4.2.conv2.convs.31.weight
        , %para1043 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.0.weight
        , %para1044 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.1.weight
        , %para1045 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.2.weight
        , %para1046 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.3.weight
        , %para1047 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.4.weight
        , %para1048 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.5.weight
        , %para1049 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.6.weight
        , %para1050 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.7.weight
        , %para1051 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.8.weight
        , %para1052 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.9.weight
        , %para1053 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.10.weight
        , %para1054 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.11.weight
        , %para1055 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.12.weight
        , %para1056 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.13.weight
        , %para1057 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.14.weight
        , %para1058 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.15.weight
        , %para1059 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.16.weight
        , %para1060 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.17.weight
        , %para1061 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.18.weight
        , %para1062 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.19.weight
        , %para1063 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.20.weight
        , %para1064 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.21.weight
        , %para1065 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.22.weight
        , %para1066 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.23.weight
        , %para1067 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.24.weight
        , %para1068 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.25.weight
        , %para1069 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.26.weight
        , %para1070 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.27.weight
        , %para1071 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.28.weight
        , %para1072 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.29.weight
        , %para1073 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.30.weight
        , %para1074 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.0.conv2.convs.31.weight
        , %para1075 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.0.weight
        , %para1076 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.1.weight
        , %para1077 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.2.weight
        , %para1078 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.3.weight
        , %para1079 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.4.weight
        , %para1080 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.5.weight
        , %para1081 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.6.weight
        , %para1082 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.7.weight
        , %para1083 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.8.weight
        , %para1084 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.9.weight
        , %para1085 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.10.weight
        , %para1086 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.11.weight
        , %para1087 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.12.weight
        , %para1088 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.13.weight
        , %para1089 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.14.weight
        , %para1090 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.15.weight
        , %para1091 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.16.weight
        , %para1092 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.17.weight
        , %para1093 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.18.weight
        , %para1094 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.19.weight
        , %para1095 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.20.weight
        , %para1096 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.21.weight
        , %para1097 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.22.weight
        , %para1098 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.23.weight
        , %para1099 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.24.weight
        , %para1100 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.25.weight
        , %para1101 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.26.weight
        , %para1102 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.27.weight
        , %para1103 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.28.weight
        , %para1104 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.29.weight
        , %para1105 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.30.weight
        , %para1106 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.1.conv2.convs.31.weight
        , %para1107 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.0.weight
        , %para1108 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.1.weight
        , %para1109 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.2.weight
        , %para1110 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.3.weight
        , %para1111 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.4.weight
        , %para1112 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.5.weight
        , %para1113 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.6.weight
        , %para1114 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.7.weight
        , %para1115 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.8.weight
        , %para1116 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.9.weight
        , %para1117 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.10.weight
        , %para1118 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.11.weight
        , %para1119 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.12.weight
        , %para1120 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.13.weight
        , %para1121 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.14.weight
        , %para1122 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.15.weight
        , %para1123 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.16.weight
        , %para1124 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.17.weight
        , %para1125 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.18.weight
        , %para1126 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.19.weight
        , %para1127 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.20.weight
        , %para1128 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.21.weight
        , %para1129 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.22.weight
        , %para1130 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.23.weight
        , %para1131 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.24.weight
        , %para1132 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.25.weight
        , %para1133 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.26.weight
        , %para1134 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.27.weight
        , %para1135 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.28.weight
        , %para1136 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.29.weight
        , %para1137 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.30.weight
        , %para1138 : Ref[Tensor(F32)][32, 32, 3, 3, 3]    # network.depth.layer4.2.conv2.convs.31.weight
        , %para1139 : Ref[Tensor(F32)][256]    # network.rgb.layer1.0.downsample.1.bn2d.gamma
        , %para1140 : Ref[Tensor(F32)][256]    # network.rgb.layer1.0.downsample.1.bn2d.beta
        , %para1141 : Ref[Tensor(F32)][256]    # network.rgb.layer1.0.downsample.1.bn2d.moving_mean
        , %para1142 : Ref[Tensor(F32)][256]    # network.rgb.layer1.0.downsample.1.bn2d.moving_variance
        , %para1143 : Ref[Tensor(F32)][256]    # network.depth.layer1.0.downsample.1.bn2d.gamma
        , %para1144 : Ref[Tensor(F32)][256]    # network.depth.layer1.0.downsample.1.bn2d.beta
        , %para1145 : Ref[Tensor(F32)][256]    # network.depth.layer1.0.downsample.1.bn2d.moving_mean
        , %para1146 : Ref[Tensor(F32)][256]    # network.depth.layer1.0.downsample.1.bn2d.moving_variance
        , %para1147 : Ref[Tensor(F32)][256]    # network.rgb.layer2.0.bn1.bn2d.gamma
        , %para1148 : Ref[Tensor(F32)][256]    # network.rgb.layer2.0.bn1.bn2d.beta
        , %para1149 : Ref[Tensor(F32)][256]    # network.rgb.layer2.0.bn1.bn2d.moving_mean
        , %para1150 : Ref[Tensor(F32)][256]    # network.rgb.layer2.0.bn1.bn2d.moving_variance
        , %para1151 : Ref[Tensor(F32)][256]    # network.rgb.layer2.1.bn1.bn2d.gamma
        , %para1152 : Ref[Tensor(F32)][256]    # network.rgb.layer2.1.bn1.bn2d.beta
        , %para1153 : Ref[Tensor(F32)][256]    # network.rgb.layer2.1.bn1.bn2d.moving_mean
        , %para1154 : Ref[Tensor(F32)][256]    # network.rgb.layer2.1.bn1.bn2d.moving_variance
        , %para1155 : Ref[Tensor(F32)][256]    # network.rgb.layer2.2.bn1.bn2d.gamma
        , %para1156 : Ref[Tensor(F32)][256]    # network.rgb.layer2.2.bn1.bn2d.beta
        , %para1157 : Ref[Tensor(F32)][256]    # network.rgb.layer2.2.bn1.bn2d.moving_mean
        , %para1158 : Ref[Tensor(F32)][256]    # network.rgb.layer2.2.bn1.bn2d.moving_variance
        , %para1159 : Ref[Tensor(F32)][256]    # network.rgb.layer2.3.bn1.bn2d.gamma
        , %para1160 : Ref[Tensor(F32)][256]    # network.rgb.layer2.3.bn1.bn2d.beta
        , %para1161 : Ref[Tensor(F32)][256]    # network.rgb.layer2.3.bn1.bn2d.moving_mean
        , %para1162 : Ref[Tensor(F32)][256]    # network.rgb.layer2.3.bn1.bn2d.moving_variance
        , %para1163 : Ref[Tensor(F32)][256]    # network.depth.layer2.0.bn1.bn2d.gamma
        , %para1164 : Ref[Tensor(F32)][256]    # network.depth.layer2.0.bn1.bn2d.beta
        , %para1165 : Ref[Tensor(F32)][256]    # network.depth.layer2.0.bn1.bn2d.moving_mean
        , %para1166 : Ref[Tensor(F32)][256]    # network.depth.layer2.0.bn1.bn2d.moving_variance
        , %para1167 : Ref[Tensor(F32)][256]    # network.depth.layer2.1.bn1.bn2d.gamma
        , %para1168 : Ref[Tensor(F32)][256]    # network.depth.layer2.1.bn1.bn2d.beta
        , %para1169 : Ref[Tensor(F32)][256]    # network.depth.layer2.1.bn1.bn2d.moving_mean
        , %para1170 : Ref[Tensor(F32)][256]    # network.depth.layer2.1.bn1.bn2d.moving_variance
        , %para1171 : Ref[Tensor(F32)][256]    # network.depth.layer2.2.bn1.bn2d.gamma
        , %para1172 : Ref[Tensor(F32)][256]    # network.depth.layer2.2.bn1.bn2d.beta
        , %para1173 : Ref[Tensor(F32)][256]    # network.depth.layer2.2.bn1.bn2d.moving_mean
        , %para1174 : Ref[Tensor(F32)][256]    # network.depth.layer2.2.bn1.bn2d.moving_variance
        , %para1175 : Ref[Tensor(F32)][256]    # network.depth.layer2.3.bn1.bn2d.gamma
        , %para1176 : Ref[Tensor(F32)][256]    # network.depth.layer2.3.bn1.bn2d.beta
        , %para1177 : Ref[Tensor(F32)][256]    # network.depth.layer2.3.bn1.bn2d.moving_mean
        , %para1178 : Ref[Tensor(F32)][256]    # network.depth.layer2.3.bn1.bn2d.moving_variance
        , %para1179 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.0.weight
        , %para1180 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.1.weight
        , %para1181 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.2.weight
        , %para1182 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.3.weight
        , %para1183 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.4.weight
        , %para1184 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.5.weight
        , %para1185 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.6.weight
        , %para1186 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.7.weight
        , %para1187 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.8.weight
        , %para1188 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.9.weight
        , %para1189 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.10.weight
        , %para1190 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.11.weight
        , %para1191 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.12.weight
        , %para1192 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.13.weight
        , %para1193 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.14.weight
        , %para1194 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.15.weight
        , %para1195 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.16.weight
        , %para1196 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.17.weight
        , %para1197 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.18.weight
        , %para1198 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.19.weight
        , %para1199 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.20.weight
        , %para1200 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.21.weight
        , %para1201 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.22.weight
        , %para1202 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.23.weight
        , %para1203 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.24.weight
        , %para1204 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.25.weight
        , %para1205 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.26.weight
        , %para1206 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.27.weight
        , %para1207 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.28.weight
        , %para1208 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.29.weight
        , %para1209 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.30.weight
        , %para1210 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.0.conv2.convs.31.weight
        , %para1211 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.0.weight
        , %para1212 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.1.weight
        , %para1213 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.2.weight
        , %para1214 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.3.weight
        , %para1215 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.4.weight
        , %para1216 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.5.weight
        , %para1217 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.6.weight
        , %para1218 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.7.weight
        , %para1219 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.8.weight
        , %para1220 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.9.weight
        , %para1221 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.10.weight
        , %para1222 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.11.weight
        , %para1223 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.12.weight
        , %para1224 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.13.weight
        , %para1225 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.14.weight
        , %para1226 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.15.weight
        , %para1227 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.16.weight
        , %para1228 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.17.weight
        , %para1229 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.18.weight
        , %para1230 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.19.weight
        , %para1231 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.20.weight
        , %para1232 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.21.weight
        , %para1233 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.22.weight
        , %para1234 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.23.weight
        , %para1235 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.24.weight
        , %para1236 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.25.weight
        , %para1237 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.26.weight
        , %para1238 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.27.weight
        , %para1239 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.28.weight
        , %para1240 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.29.weight
        , %para1241 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.30.weight
        , %para1242 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.1.conv2.convs.31.weight
        , %para1243 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.0.weight
        , %para1244 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.1.weight
        , %para1245 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.2.weight
        , %para1246 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.3.weight
        , %para1247 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.4.weight
        , %para1248 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.5.weight
        , %para1249 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.6.weight
        , %para1250 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.7.weight
        , %para1251 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.8.weight
        , %para1252 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.9.weight
        , %para1253 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.10.weight
        , %para1254 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.11.weight
        , %para1255 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.12.weight
        , %para1256 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.13.weight
        , %para1257 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.14.weight
        , %para1258 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.15.weight
        , %para1259 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.16.weight
        , %para1260 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.17.weight
        , %para1261 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.18.weight
        , %para1262 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.19.weight
        , %para1263 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.20.weight
        , %para1264 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.21.weight
        , %para1265 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.22.weight
        , %para1266 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.23.weight
        , %para1267 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.24.weight
        , %para1268 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.25.weight
        , %para1269 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.26.weight
        , %para1270 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.27.weight
        , %para1271 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.28.weight
        , %para1272 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.29.weight
        , %para1273 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.30.weight
        , %para1274 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.2.conv2.convs.31.weight
        , %para1275 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.0.weight
        , %para1276 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.1.weight
        , %para1277 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.2.weight
        , %para1278 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.3.weight
        , %para1279 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.4.weight
        , %para1280 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.5.weight
        , %para1281 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.6.weight
        , %para1282 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.7.weight
        , %para1283 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.8.weight
        , %para1284 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.9.weight
        , %para1285 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.10.weight
        , %para1286 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.11.weight
        , %para1287 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.12.weight
        , %para1288 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.13.weight
        , %para1289 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.14.weight
        , %para1290 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.15.weight
        , %para1291 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.16.weight
        , %para1292 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.17.weight
        , %para1293 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.18.weight
        , %para1294 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.19.weight
        , %para1295 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.20.weight
        , %para1296 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.21.weight
        , %para1297 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.22.weight
        , %para1298 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.23.weight
        , %para1299 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.24.weight
        , %para1300 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.25.weight
        , %para1301 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.26.weight
        , %para1302 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.27.weight
        , %para1303 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.28.weight
        , %para1304 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.29.weight
        , %para1305 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.30.weight
        , %para1306 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.3.conv2.convs.31.weight
        , %para1307 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.0.weight
        , %para1308 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.1.weight
        , %para1309 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.2.weight
        , %para1310 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.3.weight
        , %para1311 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.4.weight
        , %para1312 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.5.weight
        , %para1313 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.6.weight
        , %para1314 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.7.weight
        , %para1315 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.8.weight
        , %para1316 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.9.weight
        , %para1317 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.10.weight
        , %para1318 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.11.weight
        , %para1319 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.12.weight
        , %para1320 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.13.weight
        , %para1321 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.14.weight
        , %para1322 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.15.weight
        , %para1323 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.16.weight
        , %para1324 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.17.weight
        , %para1325 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.18.weight
        , %para1326 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.19.weight
        , %para1327 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.20.weight
        , %para1328 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.21.weight
        , %para1329 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.22.weight
        , %para1330 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.23.weight
        , %para1331 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.24.weight
        , %para1332 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.25.weight
        , %para1333 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.26.weight
        , %para1334 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.27.weight
        , %para1335 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.28.weight
        , %para1336 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.29.weight
        , %para1337 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.30.weight
        , %para1338 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.4.conv2.convs.31.weight
        , %para1339 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.0.weight
        , %para1340 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.1.weight
        , %para1341 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.2.weight
        , %para1342 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.3.weight
        , %para1343 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.4.weight
        , %para1344 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.5.weight
        , %para1345 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.6.weight
        , %para1346 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.7.weight
        , %para1347 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.8.weight
        , %para1348 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.9.weight
        , %para1349 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.10.weight
        , %para1350 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.11.weight
        , %para1351 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.12.weight
        , %para1352 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.13.weight
        , %para1353 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.14.weight
        , %para1354 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.15.weight
        , %para1355 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.16.weight
        , %para1356 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.17.weight
        , %para1357 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.18.weight
        , %para1358 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.19.weight
        , %para1359 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.20.weight
        , %para1360 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.21.weight
        , %para1361 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.22.weight
        , %para1362 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.23.weight
        , %para1363 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.24.weight
        , %para1364 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.25.weight
        , %para1365 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.26.weight
        , %para1366 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.27.weight
        , %para1367 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.28.weight
        , %para1368 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.29.weight
        , %para1369 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.30.weight
        , %para1370 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.5.conv2.convs.31.weight
        , %para1371 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.0.weight
        , %para1372 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.1.weight
        , %para1373 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.2.weight
        , %para1374 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.3.weight
        , %para1375 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.4.weight
        , %para1376 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.5.weight
        , %para1377 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.6.weight
        , %para1378 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.7.weight
        , %para1379 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.8.weight
        , %para1380 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.9.weight
        , %para1381 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.10.weight
        , %para1382 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.11.weight
        , %para1383 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.12.weight
        , %para1384 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.13.weight
        , %para1385 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.14.weight
        , %para1386 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.15.weight
        , %para1387 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.16.weight
        , %para1388 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.17.weight
        , %para1389 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.18.weight
        , %para1390 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.19.weight
        , %para1391 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.20.weight
        , %para1392 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.21.weight
        , %para1393 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.22.weight
        , %para1394 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.23.weight
        , %para1395 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.24.weight
        , %para1396 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.25.weight
        , %para1397 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.26.weight
        , %para1398 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.27.weight
        , %para1399 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.28.weight
        , %para1400 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.29.weight
        , %para1401 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.30.weight
        , %para1402 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.6.conv2.convs.31.weight
        , %para1403 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.0.weight
        , %para1404 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.1.weight
        , %para1405 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.2.weight
        , %para1406 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.3.weight
        , %para1407 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.4.weight
        , %para1408 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.5.weight
        , %para1409 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.6.weight
        , %para1410 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.7.weight
        , %para1411 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.8.weight
        , %para1412 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.9.weight
        , %para1413 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.10.weight
        , %para1414 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.11.weight
        , %para1415 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.12.weight
        , %para1416 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.13.weight
        , %para1417 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.14.weight
        , %para1418 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.15.weight
        , %para1419 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.16.weight
        , %para1420 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.17.weight
        , %para1421 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.18.weight
        , %para1422 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.19.weight
        , %para1423 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.20.weight
        , %para1424 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.21.weight
        , %para1425 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.22.weight
        , %para1426 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.23.weight
        , %para1427 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.24.weight
        , %para1428 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.25.weight
        , %para1429 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.26.weight
        , %para1430 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.27.weight
        , %para1431 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.28.weight
        , %para1432 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.29.weight
        , %para1433 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.30.weight
        , %para1434 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.7.conv2.convs.31.weight
        , %para1435 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.0.weight
        , %para1436 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.1.weight
        , %para1437 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.2.weight
        , %para1438 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.3.weight
        , %para1439 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.4.weight
        , %para1440 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.5.weight
        , %para1441 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.6.weight
        , %para1442 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.7.weight
        , %para1443 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.8.weight
        , %para1444 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.9.weight
        , %para1445 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.10.weight
        , %para1446 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.11.weight
        , %para1447 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.12.weight
        , %para1448 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.13.weight
        , %para1449 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.14.weight
        , %para1450 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.15.weight
        , %para1451 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.16.weight
        , %para1452 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.17.weight
        , %para1453 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.18.weight
        , %para1454 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.19.weight
        , %para1455 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.20.weight
        , %para1456 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.21.weight
        , %para1457 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.22.weight
        , %para1458 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.23.weight
        , %para1459 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.24.weight
        , %para1460 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.25.weight
        , %para1461 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.26.weight
        , %para1462 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.27.weight
        , %para1463 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.28.weight
        , %para1464 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.29.weight
        , %para1465 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.30.weight
        , %para1466 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.8.conv2.convs.31.weight
        , %para1467 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.0.weight
        , %para1468 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.1.weight
        , %para1469 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.2.weight
        , %para1470 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.3.weight
        , %para1471 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.4.weight
        , %para1472 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.5.weight
        , %para1473 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.6.weight
        , %para1474 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.7.weight
        , %para1475 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.8.weight
        , %para1476 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.9.weight
        , %para1477 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.10.weight
        , %para1478 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.11.weight
        , %para1479 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.12.weight
        , %para1480 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.13.weight
        , %para1481 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.14.weight
        , %para1482 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.15.weight
        , %para1483 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.16.weight
        , %para1484 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.17.weight
        , %para1485 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.18.weight
        , %para1486 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.19.weight
        , %para1487 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.20.weight
        , %para1488 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.21.weight
        , %para1489 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.22.weight
        , %para1490 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.23.weight
        , %para1491 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.24.weight
        , %para1492 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.25.weight
        , %para1493 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.26.weight
        , %para1494 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.27.weight
        , %para1495 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.28.weight
        , %para1496 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.29.weight
        , %para1497 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.30.weight
        , %para1498 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.9.conv2.convs.31.weight
        , %para1499 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.0.weight
        , %para1500 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.1.weight
        , %para1501 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.2.weight
        , %para1502 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.3.weight
        , %para1503 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.4.weight
        , %para1504 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.5.weight
        , %para1505 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.6.weight
        , %para1506 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.7.weight
        , %para1507 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.8.weight
        , %para1508 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.9.weight
        , %para1509 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.10.weight
        , %para1510 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.11.weight
        , %para1511 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.12.weight
        , %para1512 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.13.weight
        , %para1513 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.14.weight
        , %para1514 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.15.weight
        , %para1515 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.16.weight
        , %para1516 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.17.weight
        , %para1517 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.18.weight
        , %para1518 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.19.weight
        , %para1519 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.20.weight
        , %para1520 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.21.weight
        , %para1521 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.22.weight
        , %para1522 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.23.weight
        , %para1523 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.24.weight
        , %para1524 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.25.weight
        , %para1525 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.26.weight
        , %para1526 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.27.weight
        , %para1527 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.28.weight
        , %para1528 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.29.weight
        , %para1529 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.30.weight
        , %para1530 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.10.conv2.convs.31.weight
        , %para1531 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.0.weight
        , %para1532 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.1.weight
        , %para1533 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.2.weight
        , %para1534 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.3.weight
        , %para1535 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.4.weight
        , %para1536 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.5.weight
        , %para1537 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.6.weight
        , %para1538 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.7.weight
        , %para1539 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.8.weight
        , %para1540 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.9.weight
        , %para1541 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.10.weight
        , %para1542 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.11.weight
        , %para1543 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.12.weight
        , %para1544 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.13.weight
        , %para1545 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.14.weight
        , %para1546 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.15.weight
        , %para1547 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.16.weight
        , %para1548 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.17.weight
        , %para1549 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.18.weight
        , %para1550 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.19.weight
        , %para1551 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.20.weight
        , %para1552 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.21.weight
        , %para1553 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.22.weight
        , %para1554 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.23.weight
        , %para1555 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.24.weight
        , %para1556 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.25.weight
        , %para1557 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.26.weight
        , %para1558 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.27.weight
        , %para1559 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.28.weight
        , %para1560 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.29.weight
        , %para1561 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.30.weight
        , %para1562 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.11.conv2.convs.31.weight
        , %para1563 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.0.weight
        , %para1564 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.1.weight
        , %para1565 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.2.weight
        , %para1566 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.3.weight
        , %para1567 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.4.weight
        , %para1568 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.5.weight
        , %para1569 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.6.weight
        , %para1570 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.7.weight
        , %para1571 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.8.weight
        , %para1572 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.9.weight
        , %para1573 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.10.weight
        , %para1574 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.11.weight
        , %para1575 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.12.weight
        , %para1576 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.13.weight
        , %para1577 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.14.weight
        , %para1578 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.15.weight
        , %para1579 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.16.weight
        , %para1580 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.17.weight
        , %para1581 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.18.weight
        , %para1582 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.19.weight
        , %para1583 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.20.weight
        , %para1584 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.21.weight
        , %para1585 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.22.weight
        , %para1586 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.23.weight
        , %para1587 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.24.weight
        , %para1588 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.25.weight
        , %para1589 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.26.weight
        , %para1590 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.27.weight
        , %para1591 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.28.weight
        , %para1592 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.29.weight
        , %para1593 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.30.weight
        , %para1594 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.12.conv2.convs.31.weight
        , %para1595 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.0.weight
        , %para1596 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.1.weight
        , %para1597 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.2.weight
        , %para1598 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.3.weight
        , %para1599 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.4.weight
        , %para1600 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.5.weight
        , %para1601 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.6.weight
        , %para1602 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.7.weight
        , %para1603 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.8.weight
        , %para1604 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.9.weight
        , %para1605 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.10.weight
        , %para1606 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.11.weight
        , %para1607 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.12.weight
        , %para1608 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.13.weight
        , %para1609 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.14.weight
        , %para1610 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.15.weight
        , %para1611 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.16.weight
        , %para1612 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.17.weight
        , %para1613 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.18.weight
        , %para1614 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.19.weight
        , %para1615 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.20.weight
        , %para1616 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.21.weight
        , %para1617 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.22.weight
        , %para1618 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.23.weight
        , %para1619 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.24.weight
        , %para1620 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.25.weight
        , %para1621 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.26.weight
        , %para1622 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.27.weight
        , %para1623 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.28.weight
        , %para1624 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.29.weight
        , %para1625 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.30.weight
        , %para1626 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.13.conv2.convs.31.weight
        , %para1627 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.0.weight
        , %para1628 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.1.weight
        , %para1629 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.2.weight
        , %para1630 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.3.weight
        , %para1631 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.4.weight
        , %para1632 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.5.weight
        , %para1633 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.6.weight
        , %para1634 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.7.weight
        , %para1635 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.8.weight
        , %para1636 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.9.weight
        , %para1637 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.10.weight
        , %para1638 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.11.weight
        , %para1639 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.12.weight
        , %para1640 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.13.weight
        , %para1641 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.14.weight
        , %para1642 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.15.weight
        , %para1643 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.16.weight
        , %para1644 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.17.weight
        , %para1645 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.18.weight
        , %para1646 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.19.weight
        , %para1647 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.20.weight
        , %para1648 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.21.weight
        , %para1649 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.22.weight
        , %para1650 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.23.weight
        , %para1651 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.24.weight
        , %para1652 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.25.weight
        , %para1653 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.26.weight
        , %para1654 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.27.weight
        , %para1655 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.28.weight
        , %para1656 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.29.weight
        , %para1657 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.30.weight
        , %para1658 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.14.conv2.convs.31.weight
        , %para1659 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.0.weight
        , %para1660 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.1.weight
        , %para1661 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.2.weight
        , %para1662 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.3.weight
        , %para1663 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.4.weight
        , %para1664 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.5.weight
        , %para1665 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.6.weight
        , %para1666 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.7.weight
        , %para1667 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.8.weight
        , %para1668 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.9.weight
        , %para1669 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.10.weight
        , %para1670 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.11.weight
        , %para1671 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.12.weight
        , %para1672 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.13.weight
        , %para1673 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.14.weight
        , %para1674 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.15.weight
        , %para1675 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.16.weight
        , %para1676 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.17.weight
        , %para1677 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.18.weight
        , %para1678 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.19.weight
        , %para1679 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.20.weight
        , %para1680 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.21.weight
        , %para1681 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.22.weight
        , %para1682 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.23.weight
        , %para1683 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.24.weight
        , %para1684 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.25.weight
        , %para1685 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.26.weight
        , %para1686 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.27.weight
        , %para1687 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.28.weight
        , %para1688 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.29.weight
        , %para1689 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.30.weight
        , %para1690 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.15.conv2.convs.31.weight
        , %para1691 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.0.weight
        , %para1692 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.1.weight
        , %para1693 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.2.weight
        , %para1694 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.3.weight
        , %para1695 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.4.weight
        , %para1696 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.5.weight
        , %para1697 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.6.weight
        , %para1698 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.7.weight
        , %para1699 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.8.weight
        , %para1700 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.9.weight
        , %para1701 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.10.weight
        , %para1702 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.11.weight
        , %para1703 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.12.weight
        , %para1704 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.13.weight
        , %para1705 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.14.weight
        , %para1706 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.15.weight
        , %para1707 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.16.weight
        , %para1708 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.17.weight
        , %para1709 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.18.weight
        , %para1710 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.19.weight
        , %para1711 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.20.weight
        , %para1712 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.21.weight
        , %para1713 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.22.weight
        , %para1714 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.23.weight
        , %para1715 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.24.weight
        , %para1716 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.25.weight
        , %para1717 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.26.weight
        , %para1718 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.27.weight
        , %para1719 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.28.weight
        , %para1720 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.29.weight
        , %para1721 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.30.weight
        , %para1722 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.16.conv2.convs.31.weight
        , %para1723 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.0.weight
        , %para1724 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.1.weight
        , %para1725 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.2.weight
        , %para1726 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.3.weight
        , %para1727 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.4.weight
        , %para1728 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.5.weight
        , %para1729 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.6.weight
        , %para1730 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.7.weight
        , %para1731 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.8.weight
        , %para1732 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.9.weight
        , %para1733 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.10.weight
        , %para1734 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.11.weight
        , %para1735 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.12.weight
        , %para1736 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.13.weight
        , %para1737 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.14.weight
        , %para1738 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.15.weight
        , %para1739 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.16.weight
        , %para1740 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.17.weight
        , %para1741 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.18.weight
        , %para1742 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.19.weight
        , %para1743 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.20.weight
        , %para1744 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.21.weight
        , %para1745 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.22.weight
        , %para1746 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.23.weight
        , %para1747 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.24.weight
        , %para1748 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.25.weight
        , %para1749 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.26.weight
        , %para1750 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.27.weight
        , %para1751 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.28.weight
        , %para1752 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.29.weight
        , %para1753 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.30.weight
        , %para1754 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.17.conv2.convs.31.weight
        , %para1755 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.0.weight
        , %para1756 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.1.weight
        , %para1757 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.2.weight
        , %para1758 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.3.weight
        , %para1759 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.4.weight
        , %para1760 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.5.weight
        , %para1761 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.6.weight
        , %para1762 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.7.weight
        , %para1763 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.8.weight
        , %para1764 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.9.weight
        , %para1765 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.10.weight
        , %para1766 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.11.weight
        , %para1767 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.12.weight
        , %para1768 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.13.weight
        , %para1769 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.14.weight
        , %para1770 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.15.weight
        , %para1771 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.16.weight
        , %para1772 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.17.weight
        , %para1773 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.18.weight
        , %para1774 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.19.weight
        , %para1775 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.20.weight
        , %para1776 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.21.weight
        , %para1777 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.22.weight
        , %para1778 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.23.weight
        , %para1779 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.24.weight
        , %para1780 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.25.weight
        , %para1781 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.26.weight
        , %para1782 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.27.weight
        , %para1783 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.28.weight
        , %para1784 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.29.weight
        , %para1785 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.30.weight
        , %para1786 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.18.conv2.convs.31.weight
        , %para1787 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.0.weight
        , %para1788 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.1.weight
        , %para1789 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.2.weight
        , %para1790 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.3.weight
        , %para1791 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.4.weight
        , %para1792 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.5.weight
        , %para1793 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.6.weight
        , %para1794 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.7.weight
        , %para1795 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.8.weight
        , %para1796 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.9.weight
        , %para1797 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.10.weight
        , %para1798 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.11.weight
        , %para1799 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.12.weight
        , %para1800 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.13.weight
        , %para1801 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.14.weight
        , %para1802 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.15.weight
        , %para1803 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.16.weight
        , %para1804 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.17.weight
        , %para1805 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.18.weight
        , %para1806 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.19.weight
        , %para1807 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.20.weight
        , %para1808 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.21.weight
        , %para1809 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.22.weight
        , %para1810 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.23.weight
        , %para1811 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.24.weight
        , %para1812 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.25.weight
        , %para1813 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.26.weight
        , %para1814 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.27.weight
        , %para1815 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.28.weight
        , %para1816 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.29.weight
        , %para1817 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.30.weight
        , %para1818 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.19.conv2.convs.31.weight
        , %para1819 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.0.weight
        , %para1820 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.1.weight
        , %para1821 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.2.weight
        , %para1822 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.3.weight
        , %para1823 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.4.weight
        , %para1824 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.5.weight
        , %para1825 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.6.weight
        , %para1826 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.7.weight
        , %para1827 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.8.weight
        , %para1828 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.9.weight
        , %para1829 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.10.weight
        , %para1830 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.11.weight
        , %para1831 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.12.weight
        , %para1832 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.13.weight
        , %para1833 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.14.weight
        , %para1834 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.15.weight
        , %para1835 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.16.weight
        , %para1836 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.17.weight
        , %para1837 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.18.weight
        , %para1838 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.19.weight
        , %para1839 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.20.weight
        , %para1840 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.21.weight
        , %para1841 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.22.weight
        , %para1842 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.23.weight
        , %para1843 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.24.weight
        , %para1844 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.25.weight
        , %para1845 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.26.weight
        , %para1846 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.27.weight
        , %para1847 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.28.weight
        , %para1848 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.29.weight
        , %para1849 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.30.weight
        , %para1850 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.20.conv2.convs.31.weight
        , %para1851 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.0.weight
        , %para1852 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.1.weight
        , %para1853 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.2.weight
        , %para1854 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.3.weight
        , %para1855 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.4.weight
        , %para1856 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.5.weight
        , %para1857 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.6.weight
        , %para1858 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.7.weight
        , %para1859 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.8.weight
        , %para1860 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.9.weight
        , %para1861 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.10.weight
        , %para1862 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.11.weight
        , %para1863 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.12.weight
        , %para1864 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.13.weight
        , %para1865 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.14.weight
        , %para1866 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.15.weight
        , %para1867 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.16.weight
        , %para1868 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.17.weight
        , %para1869 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.18.weight
        , %para1870 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.19.weight
        , %para1871 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.20.weight
        , %para1872 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.21.weight
        , %para1873 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.22.weight
        , %para1874 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.23.weight
        , %para1875 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.24.weight
        , %para1876 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.25.weight
        , %para1877 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.26.weight
        , %para1878 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.27.weight
        , %para1879 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.28.weight
        , %para1880 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.29.weight
        , %para1881 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.30.weight
        , %para1882 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.21.conv2.convs.31.weight
        , %para1883 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.0.weight
        , %para1884 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.1.weight
        , %para1885 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.2.weight
        , %para1886 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.3.weight
        , %para1887 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.4.weight
        , %para1888 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.5.weight
        , %para1889 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.6.weight
        , %para1890 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.7.weight
        , %para1891 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.8.weight
        , %para1892 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.9.weight
        , %para1893 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.10.weight
        , %para1894 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.11.weight
        , %para1895 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.12.weight
        , %para1896 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.13.weight
        , %para1897 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.14.weight
        , %para1898 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.15.weight
        , %para1899 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.16.weight
        , %para1900 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.17.weight
        , %para1901 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.18.weight
        , %para1902 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.19.weight
        , %para1903 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.20.weight
        , %para1904 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.21.weight
        , %para1905 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.22.weight
        , %para1906 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.23.weight
        , %para1907 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.24.weight
        , %para1908 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.25.weight
        , %para1909 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.26.weight
        , %para1910 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.27.weight
        , %para1911 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.28.weight
        , %para1912 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.29.weight
        , %para1913 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.30.weight
        , %para1914 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.rgb.layer3.22.conv2.convs.31.weight
        , %para1915 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.0.weight
        , %para1916 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.1.weight
        , %para1917 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.2.weight
        , %para1918 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.3.weight
        , %para1919 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.4.weight
        , %para1920 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.5.weight
        , %para1921 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.6.weight
        , %para1922 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.7.weight
        , %para1923 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.8.weight
        , %para1924 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.9.weight
        , %para1925 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.10.weight
        , %para1926 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.11.weight
        , %para1927 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.12.weight
        , %para1928 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.13.weight
        , %para1929 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.14.weight
        , %para1930 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.15.weight
        , %para1931 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.16.weight
        , %para1932 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.17.weight
        , %para1933 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.18.weight
        , %para1934 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.19.weight
        , %para1935 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.20.weight
        , %para1936 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.21.weight
        , %para1937 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.22.weight
        , %para1938 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.23.weight
        , %para1939 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.24.weight
        , %para1940 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.25.weight
        , %para1941 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.26.weight
        , %para1942 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.27.weight
        , %para1943 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.28.weight
        , %para1944 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.29.weight
        , %para1945 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.30.weight
        , %para1946 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.0.conv2.convs.31.weight
        , %para1947 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.0.weight
        , %para1948 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.1.weight
        , %para1949 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.2.weight
        , %para1950 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.3.weight
        , %para1951 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.4.weight
        , %para1952 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.5.weight
        , %para1953 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.6.weight
        , %para1954 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.7.weight
        , %para1955 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.8.weight
        , %para1956 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.9.weight
        , %para1957 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.10.weight
        , %para1958 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.11.weight
        , %para1959 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.12.weight
        , %para1960 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.13.weight
        , %para1961 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.14.weight
        , %para1962 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.15.weight
        , %para1963 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.16.weight
        , %para1964 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.17.weight
        , %para1965 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.18.weight
        , %para1966 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.19.weight
        , %para1967 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.20.weight
        , %para1968 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.21.weight
        , %para1969 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.22.weight
        , %para1970 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.23.weight
        , %para1971 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.24.weight
        , %para1972 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.25.weight
        , %para1973 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.26.weight
        , %para1974 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.27.weight
        , %para1975 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.28.weight
        , %para1976 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.29.weight
        , %para1977 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.30.weight
        , %para1978 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.1.conv2.convs.31.weight
        , %para1979 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.0.weight
        , %para1980 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.1.weight
        , %para1981 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.2.weight
        , %para1982 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.3.weight
        , %para1983 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.4.weight
        , %para1984 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.5.weight
        , %para1985 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.6.weight
        , %para1986 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.7.weight
        , %para1987 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.8.weight
        , %para1988 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.9.weight
        , %para1989 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.10.weight
        , %para1990 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.11.weight
        , %para1991 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.12.weight
        , %para1992 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.13.weight
        , %para1993 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.14.weight
        , %para1994 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.15.weight
        , %para1995 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.16.weight
        , %para1996 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.17.weight
        , %para1997 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.18.weight
        , %para1998 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.19.weight
        , %para1999 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.20.weight
        , %para2000 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.21.weight
        , %para2001 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.22.weight
        , %para2002 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.23.weight
        , %para2003 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.24.weight
        , %para2004 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.25.weight
        , %para2005 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.26.weight
        , %para2006 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.27.weight
        , %para2007 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.28.weight
        , %para2008 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.29.weight
        , %para2009 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.30.weight
        , %para2010 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.2.conv2.convs.31.weight
        , %para2011 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.0.weight
        , %para2012 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.1.weight
        , %para2013 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.2.weight
        , %para2014 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.3.weight
        , %para2015 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.4.weight
        , %para2016 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.5.weight
        , %para2017 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.6.weight
        , %para2018 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.7.weight
        , %para2019 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.8.weight
        , %para2020 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.9.weight
        , %para2021 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.10.weight
        , %para2022 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.11.weight
        , %para2023 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.12.weight
        , %para2024 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.13.weight
        , %para2025 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.14.weight
        , %para2026 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.15.weight
        , %para2027 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.16.weight
        , %para2028 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.17.weight
        , %para2029 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.18.weight
        , %para2030 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.19.weight
        , %para2031 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.20.weight
        , %para2032 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.21.weight
        , %para2033 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.22.weight
        , %para2034 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.23.weight
        , %para2035 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.24.weight
        , %para2036 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.25.weight
        , %para2037 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.26.weight
        , %para2038 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.27.weight
        , %para2039 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.28.weight
        , %para2040 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.29.weight
        , %para2041 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.30.weight
        , %para2042 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.3.conv2.convs.31.weight
        , %para2043 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.0.weight
        , %para2044 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.1.weight
        , %para2045 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.2.weight
        , %para2046 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.3.weight
        , %para2047 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.4.weight
        , %para2048 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.5.weight
        , %para2049 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.6.weight
        , %para2050 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.7.weight
        , %para2051 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.8.weight
        , %para2052 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.9.weight
        , %para2053 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.10.weight
        , %para2054 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.11.weight
        , %para2055 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.12.weight
        , %para2056 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.13.weight
        , %para2057 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.14.weight
        , %para2058 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.15.weight
        , %para2059 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.16.weight
        , %para2060 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.17.weight
        , %para2061 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.18.weight
        , %para2062 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.19.weight
        , %para2063 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.20.weight
        , %para2064 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.21.weight
        , %para2065 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.22.weight
        , %para2066 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.23.weight
        , %para2067 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.24.weight
        , %para2068 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.25.weight
        , %para2069 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.26.weight
        , %para2070 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.27.weight
        , %para2071 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.28.weight
        , %para2072 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.29.weight
        , %para2073 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.30.weight
        , %para2074 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.4.conv2.convs.31.weight
        , %para2075 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.0.weight
        , %para2076 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.1.weight
        , %para2077 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.2.weight
        , %para2078 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.3.weight
        , %para2079 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.4.weight
        , %para2080 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.5.weight
        , %para2081 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.6.weight
        , %para2082 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.7.weight
        , %para2083 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.8.weight
        , %para2084 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.9.weight
        , %para2085 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.10.weight
        , %para2086 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.11.weight
        , %para2087 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.12.weight
        , %para2088 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.13.weight
        , %para2089 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.14.weight
        , %para2090 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.15.weight
        , %para2091 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.16.weight
        , %para2092 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.17.weight
        , %para2093 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.18.weight
        , %para2094 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.19.weight
        , %para2095 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.20.weight
        , %para2096 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.21.weight
        , %para2097 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.22.weight
        , %para2098 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.23.weight
        , %para2099 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.24.weight
        , %para2100 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.25.weight
        , %para2101 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.26.weight
        , %para2102 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.27.weight
        , %para2103 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.28.weight
        , %para2104 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.29.weight
        , %para2105 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.30.weight
        , %para2106 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.5.conv2.convs.31.weight
        , %para2107 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.0.weight
        , %para2108 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.1.weight
        , %para2109 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.2.weight
        , %para2110 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.3.weight
        , %para2111 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.4.weight
        , %para2112 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.5.weight
        , %para2113 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.6.weight
        , %para2114 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.7.weight
        , %para2115 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.8.weight
        , %para2116 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.9.weight
        , %para2117 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.10.weight
        , %para2118 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.11.weight
        , %para2119 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.12.weight
        , %para2120 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.13.weight
        , %para2121 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.14.weight
        , %para2122 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.15.weight
        , %para2123 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.16.weight
        , %para2124 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.17.weight
        , %para2125 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.18.weight
        , %para2126 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.19.weight
        , %para2127 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.20.weight
        , %para2128 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.21.weight
        , %para2129 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.22.weight
        , %para2130 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.23.weight
        , %para2131 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.24.weight
        , %para2132 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.25.weight
        , %para2133 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.26.weight
        , %para2134 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.27.weight
        , %para2135 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.28.weight
        , %para2136 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.29.weight
        , %para2137 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.30.weight
        , %para2138 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.6.conv2.convs.31.weight
        , %para2139 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.0.weight
        , %para2140 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.1.weight
        , %para2141 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.2.weight
        , %para2142 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.3.weight
        , %para2143 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.4.weight
        , %para2144 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.5.weight
        , %para2145 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.6.weight
        , %para2146 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.7.weight
        , %para2147 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.8.weight
        , %para2148 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.9.weight
        , %para2149 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.10.weight
        , %para2150 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.11.weight
        , %para2151 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.12.weight
        , %para2152 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.13.weight
        , %para2153 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.14.weight
        , %para2154 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.15.weight
        , %para2155 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.16.weight
        , %para2156 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.17.weight
        , %para2157 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.18.weight
        , %para2158 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.19.weight
        , %para2159 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.20.weight
        , %para2160 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.21.weight
        , %para2161 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.22.weight
        , %para2162 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.23.weight
        , %para2163 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.24.weight
        , %para2164 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.25.weight
        , %para2165 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.26.weight
        , %para2166 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.27.weight
        , %para2167 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.28.weight
        , %para2168 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.29.weight
        , %para2169 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.30.weight
        , %para2170 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.7.conv2.convs.31.weight
        , %para2171 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.0.weight
        , %para2172 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.1.weight
        , %para2173 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.2.weight
        , %para2174 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.3.weight
        , %para2175 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.4.weight
        , %para2176 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.5.weight
        , %para2177 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.6.weight
        , %para2178 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.7.weight
        , %para2179 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.8.weight
        , %para2180 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.9.weight
        , %para2181 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.10.weight
        , %para2182 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.11.weight
        , %para2183 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.12.weight
        , %para2184 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.13.weight
        , %para2185 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.14.weight
        , %para2186 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.15.weight
        , %para2187 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.16.weight
        , %para2188 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.17.weight
        , %para2189 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.18.weight
        , %para2190 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.19.weight
        , %para2191 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.20.weight
        , %para2192 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.21.weight
        , %para2193 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.22.weight
        , %para2194 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.23.weight
        , %para2195 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.24.weight
        , %para2196 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.25.weight
        , %para2197 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.26.weight
        , %para2198 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.27.weight
        , %para2199 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.28.weight
        , %para2200 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.29.weight
        , %para2201 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.30.weight
        , %para2202 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.8.conv2.convs.31.weight
        , %para2203 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.0.weight
        , %para2204 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.1.weight
        , %para2205 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.2.weight
        , %para2206 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.3.weight
        , %para2207 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.4.weight
        , %para2208 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.5.weight
        , %para2209 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.6.weight
        , %para2210 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.7.weight
        , %para2211 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.8.weight
        , %para2212 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.9.weight
        , %para2213 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.10.weight
        , %para2214 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.11.weight
        , %para2215 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.12.weight
        , %para2216 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.13.weight
        , %para2217 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.14.weight
        , %para2218 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.15.weight
        , %para2219 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.16.weight
        , %para2220 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.17.weight
        , %para2221 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.18.weight
        , %para2222 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.19.weight
        , %para2223 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.20.weight
        , %para2224 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.21.weight
        , %para2225 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.22.weight
        , %para2226 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.23.weight
        , %para2227 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.24.weight
        , %para2228 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.25.weight
        , %para2229 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.26.weight
        , %para2230 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.27.weight
        , %para2231 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.28.weight
        , %para2232 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.29.weight
        , %para2233 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.30.weight
        , %para2234 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.9.conv2.convs.31.weight
        , %para2235 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.0.weight
        , %para2236 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.1.weight
        , %para2237 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.2.weight
        , %para2238 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.3.weight
        , %para2239 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.4.weight
        , %para2240 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.5.weight
        , %para2241 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.6.weight
        , %para2242 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.7.weight
        , %para2243 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.8.weight
        , %para2244 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.9.weight
        , %para2245 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.10.weight
        , %para2246 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.11.weight
        , %para2247 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.12.weight
        , %para2248 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.13.weight
        , %para2249 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.14.weight
        , %para2250 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.15.weight
        , %para2251 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.16.weight
        , %para2252 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.17.weight
        , %para2253 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.18.weight
        , %para2254 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.19.weight
        , %para2255 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.20.weight
        , %para2256 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.21.weight
        , %para2257 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.22.weight
        , %para2258 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.23.weight
        , %para2259 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.24.weight
        , %para2260 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.25.weight
        , %para2261 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.26.weight
        , %para2262 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.27.weight
        , %para2263 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.28.weight
        , %para2264 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.29.weight
        , %para2265 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.30.weight
        , %para2266 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.10.conv2.convs.31.weight
        , %para2267 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.0.weight
        , %para2268 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.1.weight
        , %para2269 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.2.weight
        , %para2270 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.3.weight
        , %para2271 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.4.weight
        , %para2272 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.5.weight
        , %para2273 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.6.weight
        , %para2274 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.7.weight
        , %para2275 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.8.weight
        , %para2276 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.9.weight
        , %para2277 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.10.weight
        , %para2278 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.11.weight
        , %para2279 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.12.weight
        , %para2280 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.13.weight
        , %para2281 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.14.weight
        , %para2282 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.15.weight
        , %para2283 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.16.weight
        , %para2284 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.17.weight
        , %para2285 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.18.weight
        , %para2286 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.19.weight
        , %para2287 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.20.weight
        , %para2288 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.21.weight
        , %para2289 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.22.weight
        , %para2290 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.23.weight
        , %para2291 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.24.weight
        , %para2292 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.25.weight
        , %para2293 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.26.weight
        , %para2294 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.27.weight
        , %para2295 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.28.weight
        , %para2296 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.29.weight
        , %para2297 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.30.weight
        , %para2298 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.11.conv2.convs.31.weight
        , %para2299 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.0.weight
        , %para2300 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.1.weight
        , %para2301 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.2.weight
        , %para2302 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.3.weight
        , %para2303 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.4.weight
        , %para2304 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.5.weight
        , %para2305 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.6.weight
        , %para2306 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.7.weight
        , %para2307 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.8.weight
        , %para2308 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.9.weight
        , %para2309 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.10.weight
        , %para2310 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.11.weight
        , %para2311 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.12.weight
        , %para2312 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.13.weight
        , %para2313 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.14.weight
        , %para2314 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.15.weight
        , %para2315 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.16.weight
        , %para2316 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.17.weight
        , %para2317 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.18.weight
        , %para2318 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.19.weight
        , %para2319 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.20.weight
        , %para2320 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.21.weight
        , %para2321 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.22.weight
        , %para2322 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.23.weight
        , %para2323 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.24.weight
        , %para2324 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.25.weight
        , %para2325 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.26.weight
        , %para2326 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.27.weight
        , %para2327 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.28.weight
        , %para2328 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.29.weight
        , %para2329 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.30.weight
        , %para2330 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.12.conv2.convs.31.weight
        , %para2331 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.0.weight
        , %para2332 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.1.weight
        , %para2333 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.2.weight
        , %para2334 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.3.weight
        , %para2335 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.4.weight
        , %para2336 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.5.weight
        , %para2337 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.6.weight
        , %para2338 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.7.weight
        , %para2339 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.8.weight
        , %para2340 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.9.weight
        , %para2341 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.10.weight
        , %para2342 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.11.weight
        , %para2343 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.12.weight
        , %para2344 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.13.weight
        , %para2345 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.14.weight
        , %para2346 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.15.weight
        , %para2347 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.16.weight
        , %para2348 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.17.weight
        , %para2349 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.18.weight
        , %para2350 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.19.weight
        , %para2351 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.20.weight
        , %para2352 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.21.weight
        , %para2353 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.22.weight
        , %para2354 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.23.weight
        , %para2355 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.24.weight
        , %para2356 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.25.weight
        , %para2357 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.26.weight
        , %para2358 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.27.weight
        , %para2359 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.28.weight
        , %para2360 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.29.weight
        , %para2361 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.30.weight
        , %para2362 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.13.conv2.convs.31.weight
        , %para2363 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.0.weight
        , %para2364 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.1.weight
        , %para2365 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.2.weight
        , %para2366 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.3.weight
        , %para2367 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.4.weight
        , %para2368 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.5.weight
        , %para2369 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.6.weight
        , %para2370 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.7.weight
        , %para2371 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.8.weight
        , %para2372 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.9.weight
        , %para2373 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.10.weight
        , %para2374 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.11.weight
        , %para2375 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.12.weight
        , %para2376 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.13.weight
        , %para2377 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.14.weight
        , %para2378 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.15.weight
        , %para2379 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.16.weight
        , %para2380 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.17.weight
        , %para2381 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.18.weight
        , %para2382 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.19.weight
        , %para2383 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.20.weight
        , %para2384 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.21.weight
        , %para2385 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.22.weight
        , %para2386 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.23.weight
        , %para2387 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.24.weight
        , %para2388 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.25.weight
        , %para2389 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.26.weight
        , %para2390 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.27.weight
        , %para2391 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.28.weight
        , %para2392 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.29.weight
        , %para2393 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.30.weight
        , %para2394 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.14.conv2.convs.31.weight
        , %para2395 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.0.weight
        , %para2396 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.1.weight
        , %para2397 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.2.weight
        , %para2398 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.3.weight
        , %para2399 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.4.weight
        , %para2400 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.5.weight
        , %para2401 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.6.weight
        , %para2402 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.7.weight
        , %para2403 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.8.weight
        , %para2404 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.9.weight
        , %para2405 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.10.weight
        , %para2406 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.11.weight
        , %para2407 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.12.weight
        , %para2408 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.13.weight
        , %para2409 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.14.weight
        , %para2410 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.15.weight
        , %para2411 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.16.weight
        , %para2412 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.17.weight
        , %para2413 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.18.weight
        , %para2414 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.19.weight
        , %para2415 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.20.weight
        , %para2416 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.21.weight
        , %para2417 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.22.weight
        , %para2418 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.23.weight
        , %para2419 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.24.weight
        , %para2420 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.25.weight
        , %para2421 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.26.weight
        , %para2422 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.27.weight
        , %para2423 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.28.weight
        , %para2424 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.29.weight
        , %para2425 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.30.weight
        , %para2426 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.15.conv2.convs.31.weight
        , %para2427 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.0.weight
        , %para2428 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.1.weight
        , %para2429 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.2.weight
        , %para2430 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.3.weight
        , %para2431 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.4.weight
        , %para2432 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.5.weight
        , %para2433 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.6.weight
        , %para2434 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.7.weight
        , %para2435 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.8.weight
        , %para2436 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.9.weight
        , %para2437 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.10.weight
        , %para2438 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.11.weight
        , %para2439 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.12.weight
        , %para2440 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.13.weight
        , %para2441 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.14.weight
        , %para2442 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.15.weight
        , %para2443 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.16.weight
        , %para2444 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.17.weight
        , %para2445 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.18.weight
        , %para2446 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.19.weight
        , %para2447 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.20.weight
        , %para2448 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.21.weight
        , %para2449 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.22.weight
        , %para2450 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.23.weight
        , %para2451 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.24.weight
        , %para2452 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.25.weight
        , %para2453 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.26.weight
        , %para2454 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.27.weight
        , %para2455 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.28.weight
        , %para2456 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.29.weight
        , %para2457 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.30.weight
        , %para2458 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.16.conv2.convs.31.weight
        , %para2459 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.0.weight
        , %para2460 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.1.weight
        , %para2461 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.2.weight
        , %para2462 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.3.weight
        , %para2463 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.4.weight
        , %para2464 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.5.weight
        , %para2465 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.6.weight
        , %para2466 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.7.weight
        , %para2467 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.8.weight
        , %para2468 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.9.weight
        , %para2469 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.10.weight
        , %para2470 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.11.weight
        , %para2471 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.12.weight
        , %para2472 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.13.weight
        , %para2473 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.14.weight
        , %para2474 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.15.weight
        , %para2475 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.16.weight
        , %para2476 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.17.weight
        , %para2477 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.18.weight
        , %para2478 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.19.weight
        , %para2479 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.20.weight
        , %para2480 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.21.weight
        , %para2481 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.22.weight
        , %para2482 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.23.weight
        , %para2483 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.24.weight
        , %para2484 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.25.weight
        , %para2485 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.26.weight
        , %para2486 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.27.weight
        , %para2487 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.28.weight
        , %para2488 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.29.weight
        , %para2489 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.30.weight
        , %para2490 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.17.conv2.convs.31.weight
        , %para2491 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.0.weight
        , %para2492 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.1.weight
        , %para2493 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.2.weight
        , %para2494 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.3.weight
        , %para2495 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.4.weight
        , %para2496 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.5.weight
        , %para2497 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.6.weight
        , %para2498 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.7.weight
        , %para2499 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.8.weight
        , %para2500 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.9.weight
        , %para2501 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.10.weight
        , %para2502 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.11.weight
        , %para2503 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.12.weight
        , %para2504 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.13.weight
        , %para2505 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.14.weight
        , %para2506 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.15.weight
        , %para2507 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.16.weight
        , %para2508 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.17.weight
        , %para2509 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.18.weight
        , %para2510 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.19.weight
        , %para2511 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.20.weight
        , %para2512 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.21.weight
        , %para2513 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.22.weight
        , %para2514 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.23.weight
        , %para2515 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.24.weight
        , %para2516 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.25.weight
        , %para2517 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.26.weight
        , %para2518 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.27.weight
        , %para2519 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.28.weight
        , %para2520 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.29.weight
        , %para2521 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.30.weight
        , %para2522 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.18.conv2.convs.31.weight
        , %para2523 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.0.weight
        , %para2524 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.1.weight
        , %para2525 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.2.weight
        , %para2526 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.3.weight
        , %para2527 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.4.weight
        , %para2528 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.5.weight
        , %para2529 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.6.weight
        , %para2530 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.7.weight
        , %para2531 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.8.weight
        , %para2532 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.9.weight
        , %para2533 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.10.weight
        , %para2534 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.11.weight
        , %para2535 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.12.weight
        , %para2536 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.13.weight
        , %para2537 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.14.weight
        , %para2538 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.15.weight
        , %para2539 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.16.weight
        , %para2540 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.17.weight
        , %para2541 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.18.weight
        , %para2542 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.19.weight
        , %para2543 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.20.weight
        , %para2544 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.21.weight
        , %para2545 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.22.weight
        , %para2546 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.23.weight
        , %para2547 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.24.weight
        , %para2548 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.25.weight
        , %para2549 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.26.weight
        , %para2550 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.27.weight
        , %para2551 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.28.weight
        , %para2552 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.29.weight
        , %para2553 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.30.weight
        , %para2554 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.19.conv2.convs.31.weight
        , %para2555 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.0.weight
        , %para2556 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.1.weight
        , %para2557 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.2.weight
        , %para2558 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.3.weight
        , %para2559 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.4.weight
        , %para2560 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.5.weight
        , %para2561 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.6.weight
        , %para2562 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.7.weight
        , %para2563 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.8.weight
        , %para2564 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.9.weight
        , %para2565 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.10.weight
        , %para2566 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.11.weight
        , %para2567 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.12.weight
        , %para2568 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.13.weight
        , %para2569 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.14.weight
        , %para2570 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.15.weight
        , %para2571 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.16.weight
        , %para2572 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.17.weight
        , %para2573 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.18.weight
        , %para2574 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.19.weight
        , %para2575 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.20.weight
        , %para2576 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.21.weight
        , %para2577 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.22.weight
        , %para2578 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.23.weight
        , %para2579 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.24.weight
        , %para2580 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.25.weight
        , %para2581 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.26.weight
        , %para2582 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.27.weight
        , %para2583 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.28.weight
        , %para2584 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.29.weight
        , %para2585 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.30.weight
        , %para2586 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.20.conv2.convs.31.weight
        , %para2587 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.0.weight
        , %para2588 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.1.weight
        , %para2589 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.2.weight
        , %para2590 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.3.weight
        , %para2591 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.4.weight
        , %para2592 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.5.weight
        , %para2593 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.6.weight
        , %para2594 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.7.weight
        , %para2595 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.8.weight
        , %para2596 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.9.weight
        , %para2597 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.10.weight
        , %para2598 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.11.weight
        , %para2599 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.12.weight
        , %para2600 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.13.weight
        , %para2601 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.14.weight
        , %para2602 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.15.weight
        , %para2603 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.16.weight
        , %para2604 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.17.weight
        , %para2605 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.18.weight
        , %para2606 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.19.weight
        , %para2607 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.20.weight
        , %para2608 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.21.weight
        , %para2609 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.22.weight
        , %para2610 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.23.weight
        , %para2611 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.24.weight
        , %para2612 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.25.weight
        , %para2613 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.26.weight
        , %para2614 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.27.weight
        , %para2615 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.28.weight
        , %para2616 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.29.weight
        , %para2617 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.30.weight
        , %para2618 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.21.conv2.convs.31.weight
        , %para2619 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.0.weight
        , %para2620 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.1.weight
        , %para2621 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.2.weight
        , %para2622 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.3.weight
        , %para2623 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.4.weight
        , %para2624 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.5.weight
        , %para2625 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.6.weight
        , %para2626 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.7.weight
        , %para2627 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.8.weight
        , %para2628 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.9.weight
        , %para2629 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.10.weight
        , %para2630 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.11.weight
        , %para2631 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.12.weight
        , %para2632 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.13.weight
        , %para2633 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.14.weight
        , %para2634 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.15.weight
        , %para2635 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.16.weight
        , %para2636 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.17.weight
        , %para2637 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.18.weight
        , %para2638 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.19.weight
        , %para2639 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.20.weight
        , %para2640 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.21.weight
        , %para2641 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.22.weight
        , %para2642 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.23.weight
        , %para2643 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.24.weight
        , %para2644 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.25.weight
        , %para2645 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.26.weight
        , %para2646 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.27.weight
        , %para2647 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.28.weight
        , %para2648 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.29.weight
        , %para2649 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.30.weight
        , %para2650 : Ref[Tensor(F32)][16, 16, 3, 3, 3]    # network.depth.layer3.22.conv2.convs.31.weight
        , %para2651 : Ref[Tensor(F32)][128]    # network.rgb.layer1.0.bn1.bn2d.gamma
        , %para2652 : Ref[Tensor(F32)][128]    # network.rgb.layer1.0.bn1.bn2d.beta
        , %para2653 : Ref[Tensor(F32)][128]    # network.rgb.layer1.0.bn1.bn2d.moving_mean
        , %para2654 : Ref[Tensor(F32)][128]    # network.rgb.layer1.0.bn1.bn2d.moving_variance
        , %para2655 : Ref[Tensor(F32)][128]    # network.rgb.layer1.1.bn1.bn2d.gamma
        , %para2656 : Ref[Tensor(F32)][128]    # network.rgb.layer1.1.bn1.bn2d.beta
        , %para2657 : Ref[Tensor(F32)][128]    # network.rgb.layer1.1.bn1.bn2d.moving_mean
        , %para2658 : Ref[Tensor(F32)][128]    # network.rgb.layer1.1.bn1.bn2d.moving_variance
        , %para2659 : Ref[Tensor(F32)][128]    # network.rgb.layer1.2.bn1.bn2d.gamma
        , %para2660 : Ref[Tensor(F32)][128]    # network.rgb.layer1.2.bn1.bn2d.beta
        , %para2661 : Ref[Tensor(F32)][128]    # network.rgb.layer1.2.bn1.bn2d.moving_mean
        , %para2662 : Ref[Tensor(F32)][128]    # network.rgb.layer1.2.bn1.bn2d.moving_variance
        , %para2663 : Ref[Tensor(F32)][128]    # network.depth.layer1.0.bn1.bn2d.gamma
        , %para2664 : Ref[Tensor(F32)][128]    # network.depth.layer1.0.bn1.bn2d.beta
        , %para2665 : Ref[Tensor(F32)][128]    # network.depth.layer1.0.bn1.bn2d.moving_mean
        , %para2666 : Ref[Tensor(F32)][128]    # network.depth.layer1.0.bn1.bn2d.moving_variance
        , %para2667 : Ref[Tensor(F32)][128]    # network.depth.layer1.1.bn1.bn2d.gamma
        , %para2668 : Ref[Tensor(F32)][128]    # network.depth.layer1.1.bn1.bn2d.beta
        , %para2669 : Ref[Tensor(F32)][128]    # network.depth.layer1.1.bn1.bn2d.moving_mean
        , %para2670 : Ref[Tensor(F32)][128]    # network.depth.layer1.1.bn1.bn2d.moving_variance
        , %para2671 : Ref[Tensor(F32)][128]    # network.depth.layer1.2.bn1.bn2d.gamma
        , %para2672 : Ref[Tensor(F32)][128]    # network.depth.layer1.2.bn1.bn2d.beta
        , %para2673 : Ref[Tensor(F32)][128]    # network.depth.layer1.2.bn1.bn2d.moving_mean
        , %para2674 : Ref[Tensor(F32)][128]    # network.depth.layer1.2.bn1.bn2d.moving_variance
        , %para2675 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.0.weight
        , %para2676 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.1.weight
        , %para2677 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.2.weight
        , %para2678 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.3.weight
        , %para2679 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.4.weight
        , %para2680 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.5.weight
        , %para2681 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.6.weight
        , %para2682 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.7.weight
        , %para2683 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.8.weight
        , %para2684 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.9.weight
        , %para2685 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.10.weight
        , %para2686 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.11.weight
        , %para2687 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.12.weight
        , %para2688 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.13.weight
        , %para2689 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.14.weight
        , %para2690 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.15.weight
        , %para2691 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.16.weight
        , %para2692 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.17.weight
        , %para2693 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.18.weight
        , %para2694 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.19.weight
        , %para2695 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.20.weight
        , %para2696 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.21.weight
        , %para2697 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.22.weight
        , %para2698 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.23.weight
        , %para2699 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.24.weight
        , %para2700 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.25.weight
        , %para2701 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.26.weight
        , %para2702 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.27.weight
        , %para2703 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.28.weight
        , %para2704 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.29.weight
        , %para2705 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.30.weight
        , %para2706 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.0.conv2.convs.31.weight
        , %para2707 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.0.weight
        , %para2708 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.1.weight
        , %para2709 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.2.weight
        , %para2710 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.3.weight
        , %para2711 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.4.weight
        , %para2712 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.5.weight
        , %para2713 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.6.weight
        , %para2714 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.7.weight
        , %para2715 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.8.weight
        , %para2716 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.9.weight
        , %para2717 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.10.weight
        , %para2718 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.11.weight
        , %para2719 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.12.weight
        , %para2720 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.13.weight
        , %para2721 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.14.weight
        , %para2722 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.15.weight
        , %para2723 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.16.weight
        , %para2724 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.17.weight
        , %para2725 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.18.weight
        , %para2726 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.19.weight
        , %para2727 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.20.weight
        , %para2728 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.21.weight
        , %para2729 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.22.weight
        , %para2730 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.23.weight
        , %para2731 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.24.weight
        , %para2732 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.25.weight
        , %para2733 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.26.weight
        , %para2734 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.27.weight
        , %para2735 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.28.weight
        , %para2736 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.29.weight
        , %para2737 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.30.weight
        , %para2738 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.1.conv2.convs.31.weight
        , %para2739 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.0.weight
        , %para2740 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.1.weight
        , %para2741 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.2.weight
        , %para2742 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.3.weight
        , %para2743 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.4.weight
        , %para2744 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.5.weight
        , %para2745 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.6.weight
        , %para2746 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.7.weight
        , %para2747 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.8.weight
        , %para2748 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.9.weight
        , %para2749 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.10.weight
        , %para2750 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.11.weight
        , %para2751 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.12.weight
        , %para2752 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.13.weight
        , %para2753 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.14.weight
        , %para2754 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.15.weight
        , %para2755 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.16.weight
        , %para2756 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.17.weight
        , %para2757 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.18.weight
        , %para2758 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.19.weight
        , %para2759 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.20.weight
        , %para2760 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.21.weight
        , %para2761 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.22.weight
        , %para2762 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.23.weight
        , %para2763 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.24.weight
        , %para2764 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.25.weight
        , %para2765 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.26.weight
        , %para2766 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.27.weight
        , %para2767 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.28.weight
        , %para2768 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.29.weight
        , %para2769 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.30.weight
        , %para2770 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.2.conv2.convs.31.weight
        , %para2771 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.0.weight
        , %para2772 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.1.weight
        , %para2773 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.2.weight
        , %para2774 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.3.weight
        , %para2775 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.4.weight
        , %para2776 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.5.weight
        , %para2777 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.6.weight
        , %para2778 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.7.weight
        , %para2779 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.8.weight
        , %para2780 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.9.weight
        , %para2781 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.10.weight
        , %para2782 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.11.weight
        , %para2783 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.12.weight
        , %para2784 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.13.weight
        , %para2785 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.14.weight
        , %para2786 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.15.weight
        , %para2787 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.16.weight
        , %para2788 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.17.weight
        , %para2789 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.18.weight
        , %para2790 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.19.weight
        , %para2791 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.20.weight
        , %para2792 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.21.weight
        , %para2793 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.22.weight
        , %para2794 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.23.weight
        , %para2795 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.24.weight
        , %para2796 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.25.weight
        , %para2797 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.26.weight
        , %para2798 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.27.weight
        , %para2799 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.28.weight
        , %para2800 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.29.weight
        , %para2801 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.30.weight
        , %para2802 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.rgb.layer2.3.conv2.convs.31.weight
        , %para2803 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.0.weight
        , %para2804 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.1.weight
        , %para2805 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.2.weight
        , %para2806 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.3.weight
        , %para2807 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.4.weight
        , %para2808 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.5.weight
        , %para2809 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.6.weight
        , %para2810 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.7.weight
        , %para2811 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.8.weight
        , %para2812 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.9.weight
        , %para2813 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.10.weight
        , %para2814 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.11.weight
        , %para2815 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.12.weight
        , %para2816 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.13.weight
        , %para2817 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.14.weight
        , %para2818 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.15.weight
        , %para2819 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.16.weight
        , %para2820 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.17.weight
        , %para2821 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.18.weight
        , %para2822 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.19.weight
        , %para2823 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.20.weight
        , %para2824 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.21.weight
        , %para2825 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.22.weight
        , %para2826 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.23.weight
        , %para2827 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.24.weight
        , %para2828 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.25.weight
        , %para2829 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.26.weight
        , %para2830 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.27.weight
        , %para2831 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.28.weight
        , %para2832 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.29.weight
        , %para2833 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.30.weight
        , %para2834 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.0.conv2.convs.31.weight
        , %para2835 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.0.weight
        , %para2836 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.1.weight
        , %para2837 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.2.weight
        , %para2838 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.3.weight
        , %para2839 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.4.weight
        , %para2840 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.5.weight
        , %para2841 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.6.weight
        , %para2842 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.7.weight
        , %para2843 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.8.weight
        , %para2844 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.9.weight
        , %para2845 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.10.weight
        , %para2846 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.11.weight
        , %para2847 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.12.weight
        , %para2848 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.13.weight
        , %para2849 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.14.weight
        , %para2850 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.15.weight
        , %para2851 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.16.weight
        , %para2852 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.17.weight
        , %para2853 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.18.weight
        , %para2854 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.19.weight
        , %para2855 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.20.weight
        , %para2856 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.21.weight
        , %para2857 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.22.weight
        , %para2858 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.23.weight
        , %para2859 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.24.weight
        , %para2860 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.25.weight
        , %para2861 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.26.weight
        , %para2862 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.27.weight
        , %para2863 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.28.weight
        , %para2864 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.29.weight
        , %para2865 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.30.weight
        , %para2866 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.1.conv2.convs.31.weight
        , %para2867 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.0.weight
        , %para2868 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.1.weight
        , %para2869 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.2.weight
        , %para2870 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.3.weight
        , %para2871 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.4.weight
        , %para2872 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.5.weight
        , %para2873 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.6.weight
        , %para2874 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.7.weight
        , %para2875 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.8.weight
        , %para2876 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.9.weight
        , %para2877 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.10.weight
        , %para2878 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.11.weight
        , %para2879 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.12.weight
        , %para2880 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.13.weight
        , %para2881 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.14.weight
        , %para2882 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.15.weight
        , %para2883 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.16.weight
        , %para2884 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.17.weight
        , %para2885 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.18.weight
        , %para2886 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.19.weight
        , %para2887 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.20.weight
        , %para2888 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.21.weight
        , %para2889 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.22.weight
        , %para2890 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.23.weight
        , %para2891 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.24.weight
        , %para2892 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.25.weight
        , %para2893 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.26.weight
        , %para2894 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.27.weight
        , %para2895 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.28.weight
        , %para2896 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.29.weight
        , %para2897 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.30.weight
        , %para2898 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.2.conv2.convs.31.weight
        , %para2899 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.0.weight
        , %para2900 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.1.weight
        , %para2901 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.2.weight
        , %para2902 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.3.weight
        , %para2903 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.4.weight
        , %para2904 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.5.weight
        , %para2905 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.6.weight
        , %para2906 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.7.weight
        , %para2907 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.8.weight
        , %para2908 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.9.weight
        , %para2909 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.10.weight
        , %para2910 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.11.weight
        , %para2911 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.12.weight
        , %para2912 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.13.weight
        , %para2913 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.14.weight
        , %para2914 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.15.weight
        , %para2915 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.16.weight
        , %para2916 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.17.weight
        , %para2917 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.18.weight
        , %para2918 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.19.weight
        , %para2919 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.20.weight
        , %para2920 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.21.weight
        , %para2921 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.22.weight
        , %para2922 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.23.weight
        , %para2923 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.24.weight
        , %para2924 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.25.weight
        , %para2925 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.26.weight
        , %para2926 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.27.weight
        , %para2927 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.28.weight
        , %para2928 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.29.weight
        , %para2929 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.30.weight
        , %para2930 : Ref[Tensor(F32)][8, 8, 3, 3, 3]    # network.depth.layer2.3.conv2.convs.31.weight
        , %para2931 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.0.weight
        , %para2932 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.1.weight
        , %para2933 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.2.weight
        , %para2934 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.3.weight
        , %para2935 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.4.weight
        , %para2936 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.5.weight
        , %para2937 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.6.weight
        , %para2938 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.7.weight
        , %para2939 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.8.weight
        , %para2940 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.9.weight
        , %para2941 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.10.weight
        , %para2942 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.11.weight
        , %para2943 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.12.weight
        , %para2944 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.13.weight
        , %para2945 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.14.weight
        , %para2946 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.15.weight
        , %para2947 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.16.weight
        , %para2948 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.17.weight
        , %para2949 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.18.weight
        , %para2950 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.19.weight
        , %para2951 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.20.weight
        , %para2952 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.21.weight
        , %para2953 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.22.weight
        , %para2954 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.23.weight
        , %para2955 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.24.weight
        , %para2956 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.25.weight
        , %para2957 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.26.weight
        , %para2958 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.27.weight
        , %para2959 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.28.weight
        , %para2960 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.29.weight
        , %para2961 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.30.weight
        , %para2962 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.0.conv2.convs.31.weight
        , %para2963 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.0.weight
        , %para2964 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.1.weight
        , %para2965 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.2.weight
        , %para2966 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.3.weight
        , %para2967 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.4.weight
        , %para2968 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.5.weight
        , %para2969 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.6.weight
        , %para2970 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.7.weight
        , %para2971 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.8.weight
        , %para2972 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.9.weight
        , %para2973 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.10.weight
        , %para2974 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.11.weight
        , %para2975 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.12.weight
        , %para2976 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.13.weight
        , %para2977 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.14.weight
        , %para2978 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.15.weight
        , %para2979 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.16.weight
        , %para2980 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.17.weight
        , %para2981 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.18.weight
        , %para2982 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.19.weight
        , %para2983 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.20.weight
        , %para2984 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.21.weight
        , %para2985 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.22.weight
        , %para2986 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.23.weight
        , %para2987 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.24.weight
        , %para2988 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.25.weight
        , %para2989 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.26.weight
        , %para2990 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.27.weight
        , %para2991 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.28.weight
        , %para2992 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.29.weight
        , %para2993 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.30.weight
        , %para2994 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.1.conv2.convs.31.weight
        , %para2995 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.0.weight
        , %para2996 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.1.weight
        , %para2997 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.2.weight
        , %para2998 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.3.weight
        , %para2999 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.4.weight
        , %para3000 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.5.weight
        , %para3001 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.6.weight
        , %para3002 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.7.weight
        , %para3003 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.8.weight
        , %para3004 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.9.weight
        , %para3005 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.10.weight
        , %para3006 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.11.weight
        , %para3007 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.12.weight
        , %para3008 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.13.weight
        , %para3009 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.14.weight
        , %para3010 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.15.weight
        , %para3011 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.16.weight
        , %para3012 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.17.weight
        , %para3013 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.18.weight
        , %para3014 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.19.weight
        , %para3015 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.20.weight
        , %para3016 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.21.weight
        , %para3017 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.22.weight
        , %para3018 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.23.weight
        , %para3019 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.24.weight
        , %para3020 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.25.weight
        , %para3021 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.26.weight
        , %para3022 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.27.weight
        , %para3023 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.28.weight
        , %para3024 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.29.weight
        , %para3025 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.30.weight
        , %para3026 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.rgb.layer1.2.conv2.convs.31.weight
        , %para3027 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.0.weight
        , %para3028 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.1.weight
        , %para3029 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.2.weight
        , %para3030 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.3.weight
        , %para3031 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.4.weight
        , %para3032 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.5.weight
        , %para3033 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.6.weight
        , %para3034 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.7.weight
        , %para3035 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.8.weight
        , %para3036 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.9.weight
        , %para3037 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.10.weight
        , %para3038 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.11.weight
        , %para3039 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.12.weight
        , %para3040 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.13.weight
        , %para3041 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.14.weight
        , %para3042 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.15.weight
        , %para3043 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.16.weight
        , %para3044 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.17.weight
        , %para3045 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.18.weight
        , %para3046 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.19.weight
        , %para3047 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.20.weight
        , %para3048 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.21.weight
        , %para3049 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.22.weight
        , %para3050 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.23.weight
        , %para3051 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.24.weight
        , %para3052 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.25.weight
        , %para3053 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.26.weight
        , %para3054 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.27.weight
        , %para3055 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.28.weight
        , %para3056 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.29.weight
        , %para3057 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.30.weight
        , %para3058 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.0.conv2.convs.31.weight
        , %para3059 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.0.weight
        , %para3060 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.1.weight
        , %para3061 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.2.weight
        , %para3062 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.3.weight
        , %para3063 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.4.weight
        , %para3064 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.5.weight
        , %para3065 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.6.weight
        , %para3066 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.7.weight
        , %para3067 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.8.weight
        , %para3068 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.9.weight
        , %para3069 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.10.weight
        , %para3070 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.11.weight
        , %para3071 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.12.weight
        , %para3072 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.13.weight
        , %para3073 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.14.weight
        , %para3074 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.15.weight
        , %para3075 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.16.weight
        , %para3076 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.17.weight
        , %para3077 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.18.weight
        , %para3078 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.19.weight
        , %para3079 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.20.weight
        , %para3080 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.21.weight
        , %para3081 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.22.weight
        , %para3082 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.23.weight
        , %para3083 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.24.weight
        , %para3084 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.25.weight
        , %para3085 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.26.weight
        , %para3086 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.27.weight
        , %para3087 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.28.weight
        , %para3088 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.29.weight
        , %para3089 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.30.weight
        , %para3090 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.1.conv2.convs.31.weight
        , %para3091 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.0.weight
        , %para3092 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.1.weight
        , %para3093 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.2.weight
        , %para3094 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.3.weight
        , %para3095 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.4.weight
        , %para3096 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.5.weight
        , %para3097 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.6.weight
        , %para3098 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.7.weight
        , %para3099 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.8.weight
        , %para3100 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.9.weight
        , %para3101 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.10.weight
        , %para3102 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.11.weight
        , %para3103 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.12.weight
        , %para3104 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.13.weight
        , %para3105 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.14.weight
        , %para3106 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.15.weight
        , %para3107 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.16.weight
        , %para3108 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.17.weight
        , %para3109 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.18.weight
        , %para3110 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.19.weight
        , %para3111 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.20.weight
        , %para3112 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.21.weight
        , %para3113 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.22.weight
        , %para3114 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.23.weight
        , %para3115 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.24.weight
        , %para3116 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.25.weight
        , %para3117 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.26.weight
        , %para3118 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.27.weight
        , %para3119 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.28.weight
        , %para3120 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.29.weight
        , %para3121 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.30.weight
        , %para3122 : Ref[Tensor(F32)][4, 4, 3, 3, 3]    # network.depth.layer1.2.conv2.convs.31.weight
    ) {
    %1 : Tuple[Tensor(F32),Tensor(I64)] = Primitive::MakeTuple{prim_type=1}(%para1, %para2)    #(Tensor(F32)[8, 4, 32, 112, 112], Tensor(I64)[8]) #scope: Default
#[CNode]53

#------------------------> 0
    %2 = UnpackCall::unpack_call(FuncGraph::fg_54, %1)    #(Func, Tuple[Tensor(F32),Tensor(I64)])    # fg_54=construct.54 #scope: Default
#[CNode]55
    Primitive::Return{prim_type=1}(%2)    #(Undefined) #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(305)/        if self.reducer_flag:/#[CNode]56
}
# order:
#   1: construct_wrapper.35:[CNode]55{[0]: ValueNode<UnpackCall> unpack_call.57, [1]: ValueNode<FuncGraph> construct.54, [2]: [CNode]53}
#   2: construct_wrapper.35:[CNode]56{[0]: ValueNode<Primitive> Return, [1]: [CNode]55}


# [No.2] UnpackCall.36

funcgraph fg_36(
        %para3123 : Func    # 37
        , %para3124 : Tuple[Tensor(F32),Tensor(I64)]    # 38
    ) {
    %1 : Tensor(F32)[8, 4, 32, 112, 112] = Primitive::TupleGetItem{prim_type=1}(%para3124, I64(0))    #(Tuple[Tensor(F32),Tensor(I64)], I64) #scope: Default
#58
    %2 : Tensor(I64)[8] = Primitive::TupleGetItem{prim_type=1}(%para3124, I64(1))    #(Tuple[Tensor(F32),Tensor(I64)], I64) #scope: Default
#59

#------------------------> 1
    %3 = %para3123(%1, %2)    #(Tensor(F32)[8, 4, 32, 112, 112], Tensor(I64)[8]) #scope: Default
#60
    Primitive::Return{prim_type=1}(%3)    #(Undefined) #scope: Default
#61
}
# order:
#   1: UnpackCall.36:60{[0]: 37, [1]: 58, [2]: 59}
#   2: UnpackCall.36:61{[0]: ValueNode<Primitive> Return, [1]: 60}


# [No.3] construct.39
# In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(295)/    def construct(self, *inputs):/
funcgraph fg_39[fg_35](
        %para3125 : Tensor(F32)[8, 4, 32, 112, 112]    # inputs0
        , %para3126 : Tensor(I64)[8]    # inputs1
    ) {
    %1 : Bool = FuncGraph::fg_62(Bool(0))    #(Bool)    # fg_62=bool_.62 #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(305)/        if self.reducer_flag:/#[CNode]63
    %2 : Func = Primitive::Switch{prim_type=1}(%1, FuncGraph::fg_64, FuncGraph::fg_40)    #(Bool, Func, Func)    # fg_64=✓construct.64, fg_40=✗construct.40 #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(305)/        if self.reducer_flag:/#[CNode]65

#------------------------> 2
    %3 = %2() #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(305)/        if self.reducer_flag:/#[CNode]66
    Primitive::Return{prim_type=1}(%3)    #(Undefined) #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(305)/        if self.reducer_flag:/#[CNode]67
}
# order:
#   1: construct.39:[CNode]68{[0]: ValueNode<UnpackCall> unpack_call.69, [1]: ValueNode<FuncGraph> construct.44, [2]: [CNode]70}
#   2: construct.39:Φloss_rgb{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]68, [2]: ValueNode<Int64Imm> 0}
#   3: construct.39:Φloss_depth{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]68, [2]: ValueNode<Int64Imm> 1}
#   4: construct.39:[CNode]71{[0]: ValueNode<ClassType> class 'mindspore.ops.operations.array_ops.Fill'}
#   5: construct.39:[CNode]72{[0]: ValueNode<Primitive> getattr, [1]: Φloss_rgb, [2]: ValueNode<StringImm> dtype}
#   6: construct.39:[CNode]73{[0]: ValueNode<Primitive> getattr, [1]: Φloss_rgb, [2]: ValueNode<StringImm> shape}
#   7: construct.39:sens_rgb{[0]: [CNode]71, [1]: [CNode]72, [2]: [CNode]73, [3]: ValueNode<FP32Imm> 1.000000}
#   8: construct.39:[CNode]74{[0]: ValueNode<ClassType> class 'mindspore.ops.operations.array_ops.Fill'}
#   9: construct.39:[CNode]75{[0]: ValueNode<Primitive> getattr, [1]: Φloss_depth, [2]: ValueNode<StringImm> dtype}
#  10: construct.39:[CNode]76{[0]: ValueNode<Primitive> getattr, [1]: Φloss_depth, [2]: ValueNode<StringImm> shape}
#  11: construct.39:sens_depth{[0]: [CNode]74, [1]: [CNode]75, [2]: [CNode]76, [3]: ValueNode<FP32Imm> 1.000000}
#  12: construct.39:[CNode]77{[0]: ValueNode<DoSignaturePrimitive> S-Prim-MakeTuple, [1]: sens_rgb}
#  13: construct.39:grad_rgb{[0]: ValueNode<UnpackGraphPrimitive> UnpackGraph, [1]: ValueNode<FuncGraph> construct.78, [2]: [CNode]70, [3]: [CNode]77}
#  14: construct.39:grad_rgb{[0]: ValueNode<DoSignaturePrimitive> S-Prim-grad, [1]: grad_rgb, [2]: [CNode]79}
#  15: construct.39:grad_rgb{[0]: ValueNode<UnpackCall> unpack_call.80, [1]: grad_rgb, [2]: [CNode]70, [3]: [CNode]77}
#  16: construct.39:[CNode]81{[0]: ValueNode<DoSignaturePrimitive> S-Prim-MakeTuple, [1]: sens_depth}
#  17: construct.39:grad_depth{[0]: ValueNode<UnpackGraphPrimitive> UnpackGraph, [1]: ValueNode<FuncGraph> construct.82, [2]: [CNode]70, [3]: [CNode]81}
#  18: construct.39:grad_depth{[0]: ValueNode<DoSignaturePrimitive> S-Prim-grad, [1]: grad_depth, [2]: [CNode]83}
#  19: construct.39:grad_depth{[0]: ValueNode<UnpackCall> unpack_call.84, [1]: grad_depth, [2]: [CNode]70, [3]: [CNode]81}
#  20: construct.39:[CNode]63{[0]: ValueNode<FuncGraph> bool_.62, [1]: ValueNode<BoolImm> false}
#  21: construct.39:[CNode]65{[0]: ValueNode<Primitive> Switch, [1]: [CNode]63, [2]: ValueNode<FuncGraph> ✓construct.64, [3]: ValueNode<FuncGraph> ✗construct.40}
#  22: construct.39:[CNode]66{[0]: [CNode]65}
#  23: construct.39:[CNode]67{[0]: ValueNode<Primitive> Return, [1]: [CNode]66}


# [No.4] ✗construct.40
# In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(305)/        if self.reducer_flag:/
funcgraph fg_40[fg_39](
) {
    %1 : $(construct.39):Tuple[Tensor(F32),Tensor(I64)] = Primitive::MakeTuple{prim_type=1}(%para3125, %para3126)    #(Tensor(F32)[8, 4, 32, 112, 112], Tensor(I64)[8]) #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(295)/    def construct(self, *inputs):/#[CNode]70
    %2 : $(construct.39):Func = ClassType() #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(301)/        sens_rgb = ops.Fill()(loss_rgb.dtype, loss_rgb.shape, self.sens)/#[CNode]71

#------------------------> 3
    %3 = $(construct.39):UnpackCall::unpack_call(FuncGraph::fg_44, %1)    #(Func, Tuple[Tensor(F32),Tensor(I64)])    # fg_44=construct.44 #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(300)/        loss_rgb, loss_depth = self.network(*inputs)/#[CNode]68
    %4 = $(construct.39):DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%3, I64(0))    #(Undefined, Undefined) #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(309)/        return ops.depend(loss_rgb, self.optimizer_rgb(grad_rgb)), ops.depend(loss_depth, self.optimizer_depth(grad_depth))/#Φloss_rgb
    %5 = $(construct.39):Primitive::getattr{prim_type=1}(%4, "dtype")    #(Undefined, Undefined) #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(301)/        sens_rgb = ops.Fill()(loss_rgb.dtype, loss_rgb.shape, self.sens)/#[CNode]72
    %6 = $(construct.39):Primitive::getattr{prim_type=1}(%4, "shape")    #(Undefined, Undefined) #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(301)/        sens_rgb = ops.Fill()(loss_rgb.dtype, loss_rgb.shape, self.sens)/#[CNode]73
    %7 = $(construct.39):%2(%5, %6, F32(1))    #(Undefined, Undefined, Undefined) #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(301)/        sens_rgb = ops.Fill()(loss_rgb.dtype, loss_rgb.shape, self.sens)/#sens_rgb
    %8 = $(construct.39):DoSignaturePrimitive::S-Prim-MakeTuple{prim_type=1}(%7)    #(Undefined) #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(303)/        grad_rgb = self.grad_rgb(self.loss_net_rgb, self.weights_rgb)(*inputs, sens_rgb)/#[CNode]77
    %9 = $(construct.39):UnpackGraphPrimitive::UnpackGraph{prim_type=1}(FuncGraph::fg_78, %1, %8)    #(Undefined, Tuple[Tensor(F32),Tensor(I64)], Undefined)    # fg_78=construct.78 #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(303)/        grad_rgb = self.grad_rgb(self.loss_net_rgb, self.weights_rgb)(*inputs, sens_rgb)/#grad_rgb
    %10 = $(construct.39):Primitive::MakeTuple{prim_type=1}() #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(303)/        grad_rgb = self.grad_rgb(self.loss_net_rgb, self.weights_rgb)(*inputs, sens_rgb)/#[CNode]79
    %11 = $(construct.39):DoSignaturePrimitive::S-Prim-grad{prim_type=1}(%9, %10)    #(Undefined, Undefined) #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(303)/        grad_rgb = self.grad_rgb(self.loss_net_rgb, self.weights_rgb)(*inputs, sens_rgb)/#grad_rgb
    %12 = $(construct.39):UnpackCall::unpack_call(%11, %1, %8)    #(Undefined, Tuple[Tensor(F32),Tensor(I64)], Undefined) #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(303)/        grad_rgb = self.grad_rgb(self.loss_net_rgb, self.weights_rgb)(*inputs, sens_rgb)/#grad_rgb
    %13 = $(construct.39):ClassType() #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(302)/        sens_depth = ops.Fill()(loss_depth.dtype, loss_depth.shape, self.sens)/#[CNode]74
    %14 = $(construct.39):DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%3, I64(1))    #(Undefined, Undefined) #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(309)/        return ops.depend(loss_rgb, self.optimizer_rgb(grad_rgb)), ops.depend(loss_depth, self.optimizer_depth(grad_depth))/#Φloss_depth
    %15 = $(construct.39):Primitive::getattr{prim_type=1}(%14, "dtype")    #(Undefined, Undefined) #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(302)/        sens_depth = ops.Fill()(loss_depth.dtype, loss_depth.shape, self.sens)/#[CNode]75
    %16 = $(construct.39):Primitive::getattr{prim_type=1}(%14, "shape")    #(Undefined, Undefined) #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(302)/        sens_depth = ops.Fill()(loss_depth.dtype, loss_depth.shape, self.sens)/#[CNode]76
    %17 = $(construct.39):%13(%15, %16, F32(1))    #(Undefined, Undefined, Undefined) #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(302)/        sens_depth = ops.Fill()(loss_depth.dtype, loss_depth.shape, self.sens)/#sens_depth
    %18 = $(construct.39):DoSignaturePrimitive::S-Prim-MakeTuple{prim_type=1}(%17)    #(Undefined) #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(304)/        grad_depth = self.grad_depth(self.loss_net_depth, self.weights_depth)(*inputs, sens_depth)/#[CNode]81
    %19 = $(construct.39):UnpackGraphPrimitive::UnpackGraph{prim_type=1}(FuncGraph::fg_82, %1, %18)    #(Undefined, Tuple[Tensor(F32),Tensor(I64)], Undefined)    # fg_82=construct.82 #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(304)/        grad_depth = self.grad_depth(self.loss_net_depth, self.weights_depth)(*inputs, sens_depth)/#grad_depth
    %20 = $(construct.39):Primitive::MakeTuple{prim_type=1}() #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(304)/        grad_depth = self.grad_depth(self.loss_net_depth, self.weights_depth)(*inputs, sens_depth)/#[CNode]83
    %21 = $(construct.39):DoSignaturePrimitive::S-Prim-grad{prim_type=1}(%19, %20)    #(Undefined, Undefined) #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(304)/        grad_depth = self.grad_depth(self.loss_net_depth, self.weights_depth)(*inputs, sens_depth)/#grad_depth
    %22 = $(construct.39):UnpackCall::unpack_call(%21, %1, %18)    #(Undefined, Tuple[Tensor(F32),Tensor(I64)], Undefined) #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(304)/        grad_depth = self.grad_depth(self.loss_net_depth, self.weights_depth)(*inputs, sens_depth)/#grad_depth
    %23 = FuncGraph::fg_85(%12, %22)    #(Undefined, Undefined)    # fg_85=↓construct.85 #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(305)/        if self.reducer_flag:/#[CNode]86
    Primitive::Return{prim_type=1}(%23)    #(Undefined) #scope: Default
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(305)/        if self.reducer_flag:/#[CNode]87
}
# order:
#   1: ✗construct.40:[CNode]86{[0]: ValueNode<FuncGraph> ↓construct.85, [1]: grad_rgb, [2]: grad_depth}
#   2: ✗construct.40:[CNode]87{[0]: ValueNode<Primitive> Return, [1]: [CNode]86}


# [No.5] UnpackCall.41

funcgraph fg_41(
        %para3127 : Func    # 42
        , %para3128 : Tuple[Tensor(F32),Tensor(I64)]    # 43
    ) {
    %1 : Tensor(F32)[8, 4, 32, 112, 112] = Primitive::TupleGetItem{prim_type=1}(%para3128, I64(0))    #(Tuple[Tensor(F32),Tensor(I64)], I64) #scope: Default
#88
    %2 : Tensor(I64)[8] = Primitive::TupleGetItem{prim_type=1}(%para3128, I64(1))    #(Tuple[Tensor(F32),Tensor(I64)], I64) #scope: Default
#89

#------------------------> 4
    %3 = %para3127(%1, %2)    #(Tensor(F32)[8, 4, 32, 112, 112], Tensor(I64)[8]) #scope: Default
#90
    Primitive::Return{prim_type=1}(%3)    #(Undefined) #scope: Default
#91
}
# order:
#   1: UnpackCall.41:90{[0]: 42, [1]: 88, [2]: 89}
#   2: UnpackCall.41:91{[0]: ValueNode<Primitive> Return, [1]: 90}


# [No.6] construct.44
# In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(199)/    def construct(self, inputs, label):/
funcgraph fg_44[fg_35](
        %para3129 : Tensor(F32)[8, 4, 32, 112, 112]    # inputs
        , %para3130 : Tensor(I64)[8]    # label
    ) {

#------------------------> 5
    %1 = FuncGraph::fg_45(%para3129)    #(Tensor(F32)[8, 4, 32, 112, 112])    # fg_45=construct.45 #scope: Default/network-NetWithLoss
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(203)/        rgb_out, depth_out = self.network(inputs)/#[CNode]92
    %2 = DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%1, I64(0))    #(Undefined, Undefined) #scope: Default/network-NetWithLoss
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(203)/        rgb_out, depth_out = self.network(inputs)/#rgb_out
    %3 = FuncGraph::fg_93(%2, %para3130)    #(Undefined, Tensor(I64)[8])    # fg_93=construct.93 #scope: Default/network-NetWithLoss
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(204)/        rgb_loss = self.loss(rgb_out, label)/#rgb_loss
    %4 = DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%1, I64(1))    #(Undefined, Undefined) #scope: Default/network-NetWithLoss
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(203)/        rgb_out, depth_out = self.network(inputs)/#depth_out
    %5 = FuncGraph::fg_93(%4, %para3130)    #(Undefined, Tensor(I64)[8])    # fg_93=construct.93 #scope: Default/network-NetWithLoss
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(205)/        depth_loss = self.loss(depth_out, label)/#depth_loss
    %6 = DoSignaturePrimitive::S-Prim-MakeTuple{prim_type=1}(%3, %5)    #(Undefined, Undefined) #scope: Default/network-NetWithLoss
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(207)/        return rgb_loss, depth_loss/#[CNode]94
    Primitive::Return{prim_type=1}(%6)    #(Undefined) #scope: Default/network-NetWithLoss
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(207)/        return rgb_loss, depth_loss/#[CNode]95
}
# order:
#   1: construct.44:[CNode]92{[0]: ValueNode<FuncGraph> construct.45, [1]: inputs}
#   2: construct.44:rgb_out{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]92, [2]: ValueNode<Int64Imm> 0}
#   3: construct.44:depth_out{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]92, [2]: ValueNode<Int64Imm> 1}
#   4: construct.44:rgb_loss{[0]: ValueNode<FuncGraph> construct.93, [1]: rgb_out, [2]: label}
#   5: construct.44:depth_loss{[0]: ValueNode<FuncGraph> construct.93, [1]: depth_out, [2]: label}
#   6: construct.44:[CNode]94{[0]: ValueNode<DoSignaturePrimitive> S-Prim-MakeTuple, [1]: rgb_loss, [2]: depth_loss}
#   7: construct.44:[CNode]95{[0]: ValueNode<Primitive> Return, [1]: [CNode]94}


# [No.7] construct.45
# In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(94)/  def construct(self, x):/
funcgraph fg_45[fg_35](
        %para3131 : Tensor(F32)[8, 4, 32, 112, 112]    # x
    ) {
    %1 : Bool = FuncGraph::fg_62(Bool(0))    #(Bool)    # fg_62=bool_.62 #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(146)/    if self.return_interm_feas:/#[CNode]96
    %2 : Func = Primitive::Switch{prim_type=1}(%1, FuncGraph::fg_97, FuncGraph::fg_46)    #(Bool, Func, Func)    # fg_97=✓construct.97, fg_46=✗construct.46 #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(146)/    if self.return_interm_feas:/#[CNode]98

#------------------------> 6
    %3 = %2() #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(146)/    if self.return_interm_feas:/#[CNode]99
    Primitive::Return{prim_type=1}(%3)    #(Undefined) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(146)/    if self.return_interm_feas:/#[CNode]100
}
# order:
#   1: construct.45:[CNode]101{[0]: ValueNode<DoSignaturePrimitive> S-Prim-make_slice, [1]: ValueNode<None> None, [2]: ValueNode<None> None, [3]: ValueNode<None> None}
#   2: construct.45:[CNode]102{[0]: ValueNode<DoSignaturePrimitive> S-Prim-negative, [1]: ValueNode<Int64Imm> 1}
#   3: construct.45:[CNode]103{[0]: ValueNode<DoSignaturePrimitive> S-Prim-make_slice, [1]: ValueNode<None> None, [2]: [CNode]102, [3]: ValueNode<None> None}
#   4: construct.45:[CNode]104{[0]: ValueNode<DoSignaturePrimitive> S-Prim-make_slice, [1]: ValueNode<None> None, [2]: ValueNode<None> None, [3]: ValueNode<None> None}
#   5: construct.45:[CNode]105{[0]: ValueNode<DoSignaturePrimitive> S-Prim-make_slice, [1]: ValueNode<None> None, [2]: ValueNode<None> None, [3]: ValueNode<None> None}
#   6: construct.45:[CNode]106{[0]: ValueNode<DoSignaturePrimitive> S-Prim-make_slice, [1]: ValueNode<None> None, [2]: ValueNode<None> None, [3]: ValueNode<None> None}
#   7: construct.45:[CNode]107{[0]: ValueNode<DoSignaturePrimitive> S-Prim-MakeTuple, [1]: [CNode]101, [2]: [CNode]103, [3]: [CNode]104, [4]: [CNode]105, [5]: [CNode]106}
#   8: construct.45:rgb_x{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: x, [2]: [CNode]107}
#   9: construct.45:[CNode]108{[0]: ValueNode<ClassType> class 'mindspore.ops.operations.array_ops.ExpandDims'}
#  10: construct.45:[CNode]109{[0]: ValueNode<DoSignaturePrimitive> S-Prim-make_slice, [1]: ValueNode<None> None, [2]: ValueNode<None> None, [3]: ValueNode<None> None}
#  11: construct.45:[CNode]110{[0]: ValueNode<DoSignaturePrimitive> S-Prim-negative, [1]: ValueNode<Int64Imm> 1}
#  12: construct.45:[CNode]111{[0]: ValueNode<DoSignaturePrimitive> S-Prim-make_slice, [1]: ValueNode<None> None, [2]: ValueNode<None> None, [3]: ValueNode<None> None}
#  13: construct.45:[CNode]112{[0]: ValueNode<DoSignaturePrimitive> S-Prim-make_slice, [1]: ValueNode<None> None, [2]: ValueNode<None> None, [3]: ValueNode<None> None}
#  14: construct.45:[CNode]113{[0]: ValueNode<DoSignaturePrimitive> S-Prim-make_slice, [1]: ValueNode<None> None, [2]: ValueNode<None> None, [3]: ValueNode<None> None}
#  15: construct.45:[CNode]114{[0]: ValueNode<DoSignaturePrimitive> S-Prim-MakeTuple, [1]: [CNode]109, [2]: [CNode]110, [3]: [CNode]111, [4]: [CNode]112, [5]: [CNode]113}
#  16: construct.45:[CNode]115{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: x, [2]: [CNode]114}
#  17: construct.45:depth_x{[0]: [CNode]108, [1]: [CNode]115, [2]: ValueNode<Int64Imm> 1}
#  18: construct.45:rgb_x{[0]: ValueNode<FuncGraph> construct.116, [1]: rgb_x}
#  19: construct.45:rgb_x{[0]: ValueNode<FuncGraph> construct.117, [1]: rgb_x}
#  20: construct.45:rgb_x{[0]: ValueNode<FuncGraph> construct.118, [1]: rgb_x}
#  21: construct.45:rgb_x{[0]: ValueNode<DoSignaturePrimitive> S-Prim-MaxPool3D, [1]: rgb_x}
#  22: construct.45:depth_x{[0]: ValueNode<FuncGraph> construct.119, [1]: depth_x}
#  23: construct.45:depth_x{[0]: ValueNode<FuncGraph> construct.120, [1]: depth_x}
#  24: construct.45:depth_x{[0]: ValueNode<FuncGraph> construct.121, [1]: depth_x}
#  25: construct.45:depth_x{[0]: ValueNode<DoSignaturePrimitive> S-Prim-MaxPool3D, [1]: depth_x}
#  26: construct.45:[CNode]122{[0]: ValueNode<DoSignaturePrimitive> S-Prim-MakeTuple, [1]: ValueNode<ValueList> [], [2]: ValueNode<ValueList> []}
#  27: construct.45:rgb_features{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]122, [2]: ValueNode<Int64Imm> 0}
#  28: construct.45:depth_features{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]122, [2]: ValueNode<Int64Imm> 1}
#  29: construct.45:rgb_x{[0]: ValueNode<FuncGraph> construct.123, [1]: rgb_x}
#  30: construct.45:depth_x{[0]: ValueNode<FuncGraph> construct.124, [1]: depth_x}
#  31: construct.45:[CNode]125{[0]: ValueNode<FuncGraph> construct.49, [1]: rgb_x, [2]: depth_x}
#  32: construct.45:rgb_x{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]125, [2]: ValueNode<Int64Imm> 0}
#  33: construct.45:depth_x{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]125, [2]: ValueNode<Int64Imm> 1}
#  34: construct.45:[CNode]126{[0]: ValueNode<Primitive> getattr, [1]: rgb_features, [2]: ValueNode<StringImm> append}
#  35: construct.45:rgb_features{[0]: [CNode]126, [1]: rgb_x}
#  36: construct.45:[CNode]127{[0]: ValueNode<Primitive> getattr, [1]: depth_features, [2]: ValueNode<StringImm> append}
#  37: construct.45:depth_features{[0]: [CNode]127, [1]: depth_x}
#  38: construct.45:rgb_x{[0]: ValueNode<FuncGraph> construct.128, [1]: rgb_x}
#  39: construct.45:depth_x{[0]: ValueNode<FuncGraph> construct.129, [1]: depth_x}
#  40: construct.45:[CNode]130{[0]: ValueNode<FuncGraph> construct.131, [1]: rgb_x, [2]: depth_x}
#  41: construct.45:rgb_x{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]130, [2]: ValueNode<Int64Imm> 0}
#  42: construct.45:depth_x{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]130, [2]: ValueNode<Int64Imm> 1}
#  43: construct.45:[CNode]132{[0]: ValueNode<Primitive> getattr, [1]: rgb_features, [2]: ValueNode<StringImm> append}
#  44: construct.45:rgb_features{[0]: [CNode]132, [1]: rgb_x}
#  45: construct.45:[CNode]133{[0]: ValueNode<Primitive> getattr, [1]: depth_features, [2]: ValueNode<StringImm> append}
#  46: construct.45:depth_features{[0]: [CNode]133, [1]: depth_x}
#  47: construct.45:rgb_x{[0]: ValueNode<FuncGraph> construct.134, [1]: rgb_x}
#  48: construct.45:depth_x{[0]: ValueNode<FuncGraph> construct.135, [1]: depth_x}
#  49: construct.45:[CNode]136{[0]: ValueNode<FuncGraph> construct.137, [1]: rgb_x, [2]: depth_x}
#  50: construct.45:rgb_x{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]136, [2]: ValueNode<Int64Imm> 0}
#  51: construct.45:depth_x{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]136, [2]: ValueNode<Int64Imm> 1}
#  52: construct.45:[CNode]138{[0]: ValueNode<Primitive> getattr, [1]: rgb_features, [2]: ValueNode<StringImm> append}
#  53: construct.45:rgb_features{[0]: [CNode]138, [1]: rgb_x}
#  54: construct.45:[CNode]139{[0]: ValueNode<Primitive> getattr, [1]: depth_features, [2]: ValueNode<StringImm> append}
#  55: construct.45:depth_features{[0]: [CNode]139, [1]: depth_x}
#  56: construct.45:rgb_x{[0]: ValueNode<FuncGraph> construct.140, [1]: rgb_x}
#  57: construct.45:depth_x{[0]: ValueNode<FuncGraph> construct.141, [1]: depth_x}
#  58: construct.45:[CNode]142{[0]: ValueNode<FuncGraph> construct.143, [1]: rgb_x, [2]: depth_x}
#  59: construct.45:rgb_x{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]142, [2]: ValueNode<Int64Imm> 0}
#  60: construct.45:depth_x{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]142, [2]: ValueNode<Int64Imm> 1}
#  61: construct.45:[CNode]144{[0]: ValueNode<Primitive> getattr, [1]: rgb_features, [2]: ValueNode<StringImm> append}
#  62: construct.45:rgb_features{[0]: [CNode]144, [1]: rgb_x}
#  63: construct.45:[CNode]145{[0]: ValueNode<Primitive> getattr, [1]: depth_features, [2]: ValueNode<StringImm> append}
#  64: construct.45:depth_features{[0]: [CNode]145, [1]: depth_x}
#  65: construct.45:rgb_x{[0]: ValueNode<DoSignaturePrimitive> S-Prim-AvgPool3D, [1]: rgb_x}
#  66: construct.45:[CNode]146{[0]: ValueNode<ClassType> class 'mindspore.ops.operations.array_ops.Reshape'}
#  67: construct.45:[CNode]147{[0]: ValueNode<ClassType> class 'mindspore.ops.operations.array_ops.Shape'}
#  68: construct.45:[CNode]148{[0]: [CNode]147, [1]: rgb_x}
#  69: construct.45:[CNode]149{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]148, [2]: ValueNode<Int64Imm> 0}
#  70: construct.45:[CNode]150{[0]: ValueNode<DoSignaturePrimitive> S-Prim-negative, [1]: ValueNode<Int64Imm> 1}
#  71: construct.45:[CNode]151{[0]: ValueNode<DoSignaturePrimitive> S-Prim-MakeTuple, [1]: [CNode]149, [2]: [CNode]150}
#  72: construct.45:rgb_x{[0]: [CNode]146, [1]: rgb_x, [2]: [CNode]151}
#  73: construct.45:Φrgb_x{[0]: ValueNode<FuncGraph> construct.152, [1]: rgb_x}
#  74: construct.45:depth_x{[0]: ValueNode<DoSignaturePrimitive> S-Prim-AvgPool3D, [1]: depth_x}
#  75: construct.45:[CNode]153{[0]: ValueNode<ClassType> class 'mindspore.ops.operations.array_ops.Reshape'}
#  76: construct.45:[CNode]154{[0]: ValueNode<ClassType> class 'mindspore.ops.operations.array_ops.Shape'}
#  77: construct.45:[CNode]155{[0]: [CNode]154, [1]: depth_x}
#  78: construct.45:[CNode]156{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]155, [2]: ValueNode<Int64Imm> 0}
#  79: construct.45:[CNode]157{[0]: ValueNode<DoSignaturePrimitive> S-Prim-negative, [1]: ValueNode<Int64Imm> 1}
#  80: construct.45:[CNode]158{[0]: ValueNode<DoSignaturePrimitive> S-Prim-MakeTuple, [1]: [CNode]156, [2]: [CNode]157}
#  81: construct.45:depth_x{[0]: [CNode]153, [1]: depth_x, [2]: [CNode]158}
#  82: construct.45:Φdepth_x{[0]: ValueNode<FuncGraph> construct.159, [1]: depth_x}
#  83: construct.45:[CNode]160{[0]: ValueNode<Primitive> getattr, [1]: rgb_features, [2]: ValueNode<StringImm> append}
#  84: construct.45:rgb_features{[0]: [CNode]160, [1]: Φrgb_x}
#  85: construct.45:[CNode]161{[0]: ValueNode<Primitive> getattr, [1]: depth_features, [2]: ValueNode<StringImm> append}
#  86: construct.45:depth_features{[0]: [CNode]161, [1]: Φdepth_x}
#  87: construct.45:[CNode]96{[0]: ValueNode<FuncGraph> bool_.62, [1]: ValueNode<BoolImm> false}
#  88: construct.45:[CNode]98{[0]: ValueNode<Primitive> Switch, [1]: [CNode]96, [2]: ValueNode<FuncGraph> ✓construct.97, [3]: ValueNode<FuncGraph> ✗construct.46}
#  89: construct.45:[CNode]99{[0]: [CNode]98}
#  90: construct.45:[CNode]100{[0]: ValueNode<Primitive> Return, [1]: [CNode]99}


# [No.8] ✗construct.46
# In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(146)/    if self.return_interm_feas:/
funcgraph fg_46[fg_45](
) {

#------------------------> 7
    %1 = FuncGraph::fg_47()    # fg_47=↓construct.47 #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(146)/    if self.return_interm_feas:/#[CNode]162
    Primitive::Return{prim_type=1}(%1)    #(Undefined) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(146)/    if self.return_interm_feas:/#[CNode]163
}
# order:
#   1: ✗construct.46:[CNode]162{[0]: ValueNode<FuncGraph> ↓construct.47}
#   2: ✗construct.46:[CNode]163{[0]: ValueNode<Primitive> Return, [1]: [CNode]162}


# [No.9] ↓construct.47
# In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(146)/    if self.return_interm_feas:/
funcgraph fg_47[fg_45](
) {
    %1 : Bool = DoSignaturePrimitive::S-Prim-is_{prim_type=1}(None, None)    #(NoneType, NoneType) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(150)/    if self.final_pred is None:/#[CNode]164
    %2 : Bool = FuncGraph::fg_62(%1)    #(Bool)    # fg_62=bool_.62 #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(150)/    if self.final_pred is None:/#[CNode]165
    %3 : Func = Primitive::Switch{prim_type=1}(%2, FuncGraph::fg_48, FuncGraph::fg_166)    #(Bool, Func, Func)    # fg_48=✓↓construct.48, fg_166=✗↓construct.166 #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(150)/    if self.final_pred is None:/#[CNode]167

#------------------------> 8
    %4 = %3() #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(150)/    if self.final_pred is None:/#[CNode]168
    Primitive::Return{prim_type=1}(%4)    #(Undefined) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(150)/    if self.final_pred is None:/#[CNode]169
}
# order:
#   1: ↓construct.47:[CNode]164{[0]: ValueNode<DoSignaturePrimitive> S-Prim-is_, [1]: ValueNode<None> None, [2]: ValueNode<None> None}
#   2: ↓construct.47:[CNode]165{[0]: ValueNode<FuncGraph> bool_.62, [1]: [CNode]164}
#   3: ↓construct.47:[CNode]167{[0]: ValueNode<Primitive> Switch, [1]: [CNode]165, [2]: ValueNode<FuncGraph> ✓↓construct.48, [3]: ValueNode<FuncGraph> ✗↓construct.166}
#   4: ↓construct.47:[CNode]168{[0]: [CNode]167}
#   5: ↓construct.47:[CNode]169{[0]: ValueNode<Primitive> Return, [1]: [CNode]168}


# [No.10] ✓↓construct.48
# In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(150)/    if self.final_pred is None:/
funcgraph fg_48[fg_45](
) {
    %1 : $(construct.45):Func = ClassType() #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(138)/    rgb_x = P.Reshape()(rgb_x, (P.Shape()(rgb_x)[0], -1,))/#[CNode]146
    %2 : $(construct.45):Slice[kMetaTypeNone : kMetaTypeNone : kMetaTypeNone] = DoSignaturePrimitive::S-Prim-make_slice{prim_type=1}(None, None, None)    #(NoneType, NoneType, NoneType) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(95)/    rgb_x = x[:, :-1, :, :, :]/#[CNode]101
    %3 : $(construct.45):I64 = DoSignaturePrimitive::S-Prim-negative{prim_type=1}(I64(1))    #(I64) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(95)/    rgb_x = x[:, :-1, :, :, :]/#[CNode]102
    %4 : $(construct.45):Slice[kMetaTypeNone : Int64 : kMetaTypeNone] = DoSignaturePrimitive::S-Prim-make_slice{prim_type=1}(None, %3, None)    #(NoneType, I64, NoneType) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(95)/    rgb_x = x[:, :-1, :, :, :]/#[CNode]103
    %5 : $(construct.45):Slice[kMetaTypeNone : kMetaTypeNone : kMetaTypeNone] = DoSignaturePrimitive::S-Prim-make_slice{prim_type=1}(None, None, None)    #(NoneType, NoneType, NoneType) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(95)/    rgb_x = x[:, :-1, :, :, :]/#[CNode]104
    %6 : $(construct.45):Slice[kMetaTypeNone : kMetaTypeNone : kMetaTypeNone] = DoSignaturePrimitive::S-Prim-make_slice{prim_type=1}(None, None, None)    #(NoneType, NoneType, NoneType) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(95)/    rgb_x = x[:, :-1, :, :, :]/#[CNode]105
    %7 : $(construct.45):Slice[kMetaTypeNone : kMetaTypeNone : kMetaTypeNone] = DoSignaturePrimitive::S-Prim-make_slice{prim_type=1}(None, None, None)    #(NoneType, NoneType, NoneType) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(95)/    rgb_x = x[:, :-1, :, :, :]/#[CNode]106
    %8 : $(construct.45):Tuple[Slice[kMetaTypeNone : kMetaTypeNone : kMetaTypeNone],Slice[kMetaTypeNone : Int64 : kMetaTypeNone],Slice[kMetaTypeNone : kMetaTypeNone : kMetaTypeNone]*3] = DoSignaturePrimitive::S-Prim-MakeTuple{prim_type=1}(%2, %4, %5, %6, %7)    #(Slice[kMetaTypeNone : kMetaTypeNone : kMetaTypeNone], Slice[kMetaTypeNone : Int64 : kMetaTypeNone], Slice[kMetaTypeNone : kMetaTypeNone : kMetaTypeNone], Slice[kMetaTypeNone : kMetaTypeNone : kMetaTypeNone], Slice[kMetaTypeNone : kMetaTypeNone : kMetaTypeNone]) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(95)/    rgb_x = x[:, :-1, :, :, :]/#[CNode]107
    %9 : $(construct.45):Tensor(F32)[8, 3, 32, 112, 112] = DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%para3131, %8)    #(Tensor(F32)[8, 4, 32, 112, 112], Tuple[Slice[kMetaTypeNone : kMetaTypeNone : kMetaTypeNone],Slice[kMetaTypeNone : Int64 : kMetaTypeNone],Slice[kMetaTypeNone : kMetaTypeNone : kMetaTypeNone]*3]) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(95)/    rgb_x = x[:, :-1, :, :, :]/#rgb_x
    %10 : $(construct.45):Tensor(F32)[8, 64, 32, 56, 56] = FuncGraph::fg_116(%9)    #(Tensor(F32)[8, 3, 32, 112, 112])    # fg_116=construct.116 #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(99)/    rgb_x = self.rgb.conv1(rgb_x)/#rgb_x
    %11 : $(construct.45):Tensor(F32)[8, 64, 32, 56, 56] = FuncGraph::fg_117(%10)    #(Tensor(F32)[8, 64, 32, 56, 56])    # fg_117=construct.117 #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(100)/    rgb_x = self.rgb.bn1(rgb_x)/#rgb_x
    %12 : $(construct.45):Tensor(F32)[8, 64, 32, 56, 56] = FuncGraph::fg_118(%11)    #(Tensor(F32)[8, 64, 32, 56, 56])    # fg_118=construct.118 #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(101)/    rgb_x = self.rgb.relu(rgb_x)/#rgb_x
    %13 : $(construct.45):Tensor(F32)[8, 64, 16, 28, 28] = DoSignaturePrimitive::S-Prim-MaxPool3D{prim_type=1}[kernel_size=(I64(1), I64(1), I64(3), I64(3), I64(3)), strides=(I64(1), I64(1), I64(2), I64(2), I64(2)), x_shape=[I64(8), I64(64), I64(32), I64(56), I64(56)], input_names=["x"], ceil_mode=I64(0), pad_mode="CALCULATED", output_names=["output"], format="NCDHW", pad_list=(I64(1), I64(1), I64(1), I64(1), I64(1), I64(1))](%12)    #(Tensor(F32)[8, 64, 32, 56, 56]) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(102)/    rgb_x = self.rgb.maxpool(rgb_x)/#rgb_x
    %14 : $(construct.45):Tensor(F32)[8, 256, 16, 28, 28] = FuncGraph::fg_123(%13)    #(Tensor(F32)[8, 64, 16, 28, 28])    # fg_123=construct.123 #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(113)/    rgb_x = self.rgb.layer1(rgb_x)/#rgb_x
    %15 : $(construct.45):Func = ClassType() #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(96)/    depth_x = ops.ExpandDims()(x[:, -1, :, :, :], 1)/#[CNode]108
    %16 : $(construct.45):Slice[kMetaTypeNone : kMetaTypeNone : kMetaTypeNone] = DoSignaturePrimitive::S-Prim-make_slice{prim_type=1}(None, None, None)    #(NoneType, NoneType, NoneType) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(96)/    depth_x = ops.ExpandDims()(x[:, -1, :, :, :], 1)/#[CNode]109
    %17 : $(construct.45):I64 = DoSignaturePrimitive::S-Prim-negative{prim_type=1}(I64(1))    #(I64) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(96)/    depth_x = ops.ExpandDims()(x[:, -1, :, :, :], 1)/#[CNode]110
    %18 : $(construct.45):Slice[kMetaTypeNone : kMetaTypeNone : kMetaTypeNone] = DoSignaturePrimitive::S-Prim-make_slice{prim_type=1}(None, None, None)    #(NoneType, NoneType, NoneType) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(96)/    depth_x = ops.ExpandDims()(x[:, -1, :, :, :], 1)/#[CNode]111
    %19 : $(construct.45):Slice[kMetaTypeNone : kMetaTypeNone : kMetaTypeNone] = DoSignaturePrimitive::S-Prim-make_slice{prim_type=1}(None, None, None)    #(NoneType, NoneType, NoneType) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(96)/    depth_x = ops.ExpandDims()(x[:, -1, :, :, :], 1)/#[CNode]112
    %20 : $(construct.45):Slice[kMetaTypeNone : kMetaTypeNone : kMetaTypeNone] = DoSignaturePrimitive::S-Prim-make_slice{prim_type=1}(None, None, None)    #(NoneType, NoneType, NoneType) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(96)/    depth_x = ops.ExpandDims()(x[:, -1, :, :, :], 1)/#[CNode]113
    %21 : $(construct.45):Tuple[Slice[kMetaTypeNone : kMetaTypeNone : kMetaTypeNone],I64,Slice[kMetaTypeNone : kMetaTypeNone : kMetaTypeNone]*3] = DoSignaturePrimitive::S-Prim-MakeTuple{prim_type=1}(%16, %17, %18, %19, %20)    #(Slice[kMetaTypeNone : kMetaTypeNone : kMetaTypeNone], I64, Slice[kMetaTypeNone : kMetaTypeNone : kMetaTypeNone], Slice[kMetaTypeNone : kMetaTypeNone : kMetaTypeNone], Slice[kMetaTypeNone : kMetaTypeNone : kMetaTypeNone]) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(96)/    depth_x = ops.ExpandDims()(x[:, -1, :, :, :], 1)/#[CNode]114
    %22 : $(construct.45):Tensor(F32)[8, 32, 112, 112] = DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%para3131, %21)    #(Tensor(F32)[8, 4, 32, 112, 112], Tuple[Slice[kMetaTypeNone : kMetaTypeNone : kMetaTypeNone],I64,Slice[kMetaTypeNone : kMetaTypeNone : kMetaTypeNone]*3]) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(96)/    depth_x = ops.ExpandDims()(x[:, -1, :, :, :], 1)/#[CNode]115
    %23 : $(construct.45):Tensor(F32)[8, 1, 32, 112, 112] = %15(%22, I64(1))    #(Tensor(F32)[8, 32, 112, 112], I64) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(96)/    depth_x = ops.ExpandDims()(x[:, -1, :, :, :], 1)/#depth_x
    %24 : $(construct.45):Tensor(F32)[8, 64, 32, 56, 56] = FuncGraph::fg_119(%23)    #(Tensor(F32)[8, 1, 32, 112, 112])    # fg_119=construct.119 #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(105)/    depth_x = self.depth.conv1(depth_x)/#depth_x
    %25 : $(construct.45):Tensor(F32)[8, 64, 32, 56, 56] = FuncGraph::fg_120(%24)    #(Tensor(F32)[8, 64, 32, 56, 56])    # fg_120=construct.120 #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(106)/    depth_x = self.depth.bn1(depth_x)/#depth_x
    %26 : $(construct.45):Tensor(F32)[8, 64, 32, 56, 56] = FuncGraph::fg_121(%25)    #(Tensor(F32)[8, 64, 32, 56, 56])    # fg_121=construct.121 #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(107)/    depth_x = self.depth.relu(depth_x)/#depth_x
    %27 : $(construct.45):Tensor(F32)[8, 64, 16, 28, 28] = DoSignaturePrimitive::S-Prim-MaxPool3D{prim_type=1}[kernel_size=(I64(1), I64(1), I64(3), I64(3), I64(3)), strides=(I64(1), I64(1), I64(2), I64(2), I64(2)), x_shape=[I64(8), I64(64), I64(32), I64(56), I64(56)], input_names=["x"], ceil_mode=I64(0), pad_mode="CALCULATED", output_names=["output"], format="NCDHW", pad_list=(I64(1), I64(1), I64(1), I64(1), I64(1), I64(1))](%26)    #(Tensor(F32)[8, 64, 32, 56, 56]) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(108)/    depth_x = self.depth.maxpool(depth_x)/#depth_x
    %28 : $(construct.45):Tensor(F32)[8, 256, 16, 28, 28] = FuncGraph::fg_124(%27)    #(Tensor(F32)[8, 64, 16, 28, 28])    # fg_124=construct.124 #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(114)/    depth_x = self.depth.layer1(depth_x)/#depth_x

#------------------------> 9
    %29 = $(construct.45):FuncGraph::fg_49(%14, %28)    #(Tensor(F32)[8, 256, 16, 28, 28], Tensor(F32)[8, 256, 16, 28, 28])    # fg_49=construct.49 #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(115)/    rgb_x, depth_x = self.mmtm1(rgb_x, depth_x)/#[CNode]125
    %30 = $(construct.45):DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%29, I64(0))    #(Undefined, Undefined) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(115)/    rgb_x, depth_x = self.mmtm1(rgb_x, depth_x)/#rgb_x
    %31 = $(construct.45):FuncGraph::fg_128(%30)    #(Undefined)    # fg_128=construct.128 #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(119)/    rgb_x = self.rgb.layer2(rgb_x)/#rgb_x
    %32 = $(construct.45):DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%29, I64(1))    #(Undefined, Undefined) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(115)/    rgb_x, depth_x = self.mmtm1(rgb_x, depth_x)/#depth_x
    %33 = $(construct.45):FuncGraph::fg_129(%32)    #(Undefined)    # fg_129=construct.129 #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(120)/    depth_x = self.depth.layer2(depth_x)/#depth_x
    %34 = $(construct.45):FuncGraph::fg_131(%31, %33)    #(Undefined, Undefined)    # fg_131=construct.131 #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(121)/    rgb_x, depth_x = self.mmtm2(rgb_x, depth_x)/#[CNode]130
    %35 = $(construct.45):DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%34, I64(0))    #(Undefined, Undefined) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(121)/    rgb_x, depth_x = self.mmtm2(rgb_x, depth_x)/#rgb_x
    %36 = $(construct.45):FuncGraph::fg_134(%35)    #(Undefined)    # fg_134=construct.134 #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(125)/    rgb_x = self.rgb.layer3(rgb_x)/#rgb_x
    %37 = $(construct.45):DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%34, I64(1))    #(Undefined, Undefined) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(121)/    rgb_x, depth_x = self.mmtm2(rgb_x, depth_x)/#depth_x
    %38 = $(construct.45):FuncGraph::fg_135(%37)    #(Undefined)    # fg_135=construct.135 #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(126)/    depth_x = self.depth.layer3(depth_x)/#depth_x
    %39 = $(construct.45):FuncGraph::fg_137(%36, %38)    #(Undefined, Undefined)    # fg_137=construct.137 #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(127)/    rgb_x, depth_x = self.mmtm3(rgb_x, depth_x)/#[CNode]136
    %40 = $(construct.45):DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%39, I64(0))    #(Undefined, Undefined) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(127)/    rgb_x, depth_x = self.mmtm3(rgb_x, depth_x)/#rgb_x
    %41 = $(construct.45):FuncGraph::fg_140(%40)    #(Undefined)    # fg_140=construct.140 #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(131)/    rgb_x = self.rgb.layer4(rgb_x)/#rgb_x
    %42 = $(construct.45):DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%39, I64(1))    #(Undefined, Undefined) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(127)/    rgb_x, depth_x = self.mmtm3(rgb_x, depth_x)/#depth_x
    %43 = $(construct.45):FuncGraph::fg_141(%42)    #(Undefined)    # fg_141=construct.141 #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(132)/    depth_x = self.depth.layer4(depth_x)/#depth_x
    %44 = $(construct.45):FuncGraph::fg_143(%41, %43)    #(Undefined, Undefined)    # fg_143=construct.143 #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(133)/    rgb_x, depth_x = self.mmtm4(rgb_x, depth_x)/#[CNode]142
    %45 = $(construct.45):DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%44, I64(0))    #(Undefined, Undefined) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(133)/    rgb_x, depth_x = self.mmtm4(rgb_x, depth_x)/#rgb_x
    %46 = $(construct.45):DoSignaturePrimitive::S-Prim-AvgPool3D{prim_type=1}[kernel_size=(I64(1), I64(1), I64(2), I64(4), I64(4)), strides=(I64(1), I64(1), I64(1), I64(1), I64(1)), input_names=["input"], pad=I64(0), ceil_mode=Bool(0), divisor_override=I64(0), pad_mode="VALID", output_names=["output"], format="NCDHW", pad_list=(I64(0), I64(0), I64(0), I64(0), I64(0), I64(0)), count_include_pad=Bool(1)](%45)    #(Undefined) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(137)/    rgb_x = self.rgb.avgpool(rgb_x)/#rgb_x
    %47 = $(construct.45):ClassType() #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(138)/    rgb_x = P.Reshape()(rgb_x, (P.Shape()(rgb_x)[0], -1,))/#[CNode]147
    %48 = $(construct.45):%47(%46)    #(Undefined) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(138)/    rgb_x = P.Reshape()(rgb_x, (P.Shape()(rgb_x)[0], -1,))/#[CNode]148
    %49 = $(construct.45):DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%48, I64(0))    #(Undefined, Undefined) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(138)/    rgb_x = P.Reshape()(rgb_x, (P.Shape()(rgb_x)[0], -1,))/#[CNode]149
    %50 = $(construct.45):DoSignaturePrimitive::S-Prim-negative{prim_type=1}(I64(1))    #(Undefined) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(138)/    rgb_x = P.Reshape()(rgb_x, (P.Shape()(rgb_x)[0], -1,))/#[CNode]150
    %51 = $(construct.45):DoSignaturePrimitive::S-Prim-MakeTuple{prim_type=1}(%49, %50)    #(Undefined, Undefined) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(138)/    rgb_x = P.Reshape()(rgb_x, (P.Shape()(rgb_x)[0], -1,))/#[CNode]151
    %52 = $(construct.45):%1(%46, %51)    #(Undefined, Undefined) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(138)/    rgb_x = P.Reshape()(rgb_x, (P.Shape()(rgb_x)[0], -1,))/#rgb_x
    %53 = $(construct.45):FuncGraph::fg_152(%52)    #(Undefined)    # fg_152=construct.152 #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(156)/      return rgb_x, depth_x/#Φrgb_x
    %54 = $(construct.45):ClassType() #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(141)/    depth_x = P.Reshape()(depth_x, (P.Shape()(depth_x)[0], -1,))/#[CNode]153
    %55 = $(construct.45):DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%44, I64(1))    #(Undefined, Undefined) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(133)/    rgb_x, depth_x = self.mmtm4(rgb_x, depth_x)/#depth_x
    %56 = $(construct.45):DoSignaturePrimitive::S-Prim-AvgPool3D{prim_type=1}[kernel_size=(I64(1), I64(1), I64(2), I64(4), I64(4)), strides=(I64(1), I64(1), I64(1), I64(1), I64(1)), input_names=["input"], pad=I64(0), ceil_mode=Bool(0), divisor_override=I64(0), pad_mode="VALID", output_names=["output"], format="NCDHW", pad_list=(I64(0), I64(0), I64(0), I64(0), I64(0), I64(0)), count_include_pad=Bool(1)](%55)    #(Undefined) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(140)/    depth_x = self.depth.avgpool(depth_x)/#depth_x
    %57 = $(construct.45):ClassType() #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(141)/    depth_x = P.Reshape()(depth_x, (P.Shape()(depth_x)[0], -1,))/#[CNode]154
    %58 = $(construct.45):%57(%56)    #(Undefined) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(141)/    depth_x = P.Reshape()(depth_x, (P.Shape()(depth_x)[0], -1,))/#[CNode]155
    %59 = $(construct.45):DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%58, I64(0))    #(Undefined, Undefined) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(141)/    depth_x = P.Reshape()(depth_x, (P.Shape()(depth_x)[0], -1,))/#[CNode]156
    %60 = $(construct.45):DoSignaturePrimitive::S-Prim-negative{prim_type=1}(I64(1))    #(Undefined) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(141)/    depth_x = P.Reshape()(depth_x, (P.Shape()(depth_x)[0], -1,))/#[CNode]157
    %61 = $(construct.45):DoSignaturePrimitive::S-Prim-MakeTuple{prim_type=1}(%59, %60)    #(Undefined, Undefined) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(141)/    depth_x = P.Reshape()(depth_x, (P.Shape()(depth_x)[0], -1,))/#[CNode]158
    %62 = $(construct.45):%54(%56, %61)    #(Undefined, Undefined) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(141)/    depth_x = P.Reshape()(depth_x, (P.Shape()(depth_x)[0], -1,))/#depth_x
    %63 = $(construct.45):FuncGraph::fg_159(%62)    #(Undefined)    # fg_159=construct.159 #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(156)/      return rgb_x, depth_x/#Φdepth_x
    %64 = DoSignaturePrimitive::S-Prim-add{prim_type=1}(%53, %63)    #(Undefined, Undefined) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(151)/      pred = (rgb_x + depth_x)/2/#[CNode]170
    %65 = DoSignaturePrimitive::S-Prim-div{prim_type=1}(%64, I64(2))    #(Undefined, Undefined) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(151)/      pred = (rgb_x + depth_x)/2/#pred
    %66 = FuncGraph::fg_171(%65)    #(Undefined)    # fg_171=↓↓construct.171 #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(150)/    if self.final_pred is None:/#[CNode]172
    Primitive::Return{prim_type=1}(%66)    #(Undefined) #scope: Default/network-NetWithLoss/network-MMTNet
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(150)/    if self.final_pred is None:/#[CNode]173
}
# order:
#   1: ✓↓construct.48:[CNode]170{[0]: ValueNode<DoSignaturePrimitive> S-Prim-add, [1]: Φrgb_x, [2]: Φdepth_x}
#   2: ✓↓construct.48:pred{[0]: ValueNode<DoSignaturePrimitive> S-Prim-div, [1]: [CNode]170, [2]: ValueNode<Int64Imm> 2}
#   3: ✓↓construct.48:[CNode]172{[0]: ValueNode<FuncGraph> ↓↓construct.171, [1]: pred}
#   4: ✓↓construct.48:[CNode]173{[0]: ValueNode<Primitive> Return, [1]: [CNode]172}


# [No.11] construct.49
# In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(27)/  def construct(self, rgb, depth):/
funcgraph fg_49[fg_35](
        %para3132 : Tensor(F32)[8, 256, 16, 28, 28]    # Φrgb
        , %para3133 : Tensor(F32)[8, 256, 16, 28, 28]    # Φdepth
    ) {

#------------------------> 10
    %1 = FuncGraph::fg_50(I64(0), [])    #(I64, List[])    # fg_50=⤾construct.50 #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(29)/    for tensor in [rgb, depth]:/#[CNode]174
    Primitive::Return{prim_type=1}(%1)    #(Undefined) #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(29)/    for tensor in [rgb, depth]:/#[CNode]175
}
# order:
#   1: construct.49:[CNode]176{[0]: ValueNode<DoSignaturePrimitive> S-Prim-make_list, [1]: Φrgb, [2]: Φdepth}
#   2: construct.49:[CNode]177{[0]: ValueNode<FuncGraph> ms_len.178, [1]: [CNode]176}
#   3: construct.49:[CNode]174{[0]: ValueNode<FuncGraph> ⤾construct.50, [1]: ValueNode<Int64Imm> 0, [2]: ValueNode<ValueList> []}
#   4: construct.49:[CNode]175{[0]: ValueNode<Primitive> Return, [1]: [CNode]174}


# [No.12] ⤾construct.50
# In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(29)/    for tensor in [rgb, depth]:/
funcgraph fg_50[fg_49](
        %para3134 : I64    # @[CNode]51
        , %para3135 : List[]    # Φsqueeze_array
    ) {
    %1 : $(construct.49):List[Tensor(F32)*2] = DoSignaturePrimitive::S-Prim-make_list{prim_type=1}(%para3132, %para3133)    #(Tensor(F32)[8, 256, 16, 28, 28], Tensor(F32)[8, 256, 16, 28, 28]) #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(29)/    for tensor in [rgb, depth]:/#[CNode]176
    %2 : $(construct.49):I64 = FuncGraph::fg_178(%1)    #(List[Tensor(F32)*2])    # fg_178=ms_len.178 #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(29)/    for tensor in [rgb, depth]:/#[CNode]177
    %3 : Bool = MultitypeFuncGraph::less{(Tensor, Number), (Number, Tensor), (Number, Number), (Tensor, Tensor)}(%para3134, %2)    #(I64, I64) #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(29)/    for tensor in [rgb, depth]:/#[CNode]179
    %4 : Func = Primitive::Switch{prim_type=1}(%3, FuncGraph::fg_52, FuncGraph::fg_180)    #(Bool, Func, Func)    # fg_52=⥁construct.52, fg_180=↓construct.180 #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(29)/    for tensor in [rgb, depth]:/#[CNode]181

#------------------------> 11
    %5 = %4() #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(29)/    for tensor in [rgb, depth]:/#[CNode]182
    Primitive::Return{prim_type=1}(%5)    #(Undefined) #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(29)/    for tensor in [rgb, depth]:/#[CNode]183
}
# order:
#   1: ⤾construct.50:[CNode]179{[0]: ValueNode<MultitypeFuncGraph> less.12, [1]: @[CNode]51, [2]: [CNode]177}
#   2: ⤾construct.50:[CNode]181{[0]: ValueNode<Primitive> Switch, [1]: [CNode]179, [2]: ValueNode<FuncGraph> ⥁construct.52, [3]: ValueNode<FuncGraph> ↓construct.180}
#   3: ⤾construct.50:[CNode]182{[0]: [CNode]181}
#   4: ⤾construct.50:[CNode]183{[0]: ValueNode<Primitive> Return, [1]: [CNode]182}


# [No.13] ⥁construct.52
# In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(29)/    for tensor in [rgb, depth]:/
funcgraph fg_52[fg_50](
) {
    %1 : I64 = MultitypeFuncGraph::add{(Tuple, Tuple), (NoneType, NoneType), (Tuple, Tensor), (Number, Tensor), (Tensor, List), (Number, Number), (Tensor, Tuple), (List, List), (List, Tensor), (Tensor, Tensor), (Tensor, Number), (String, String), (RowTensor, Tensor)}(%para3134, I64(1))    #(I64, I64) #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(29)/    for tensor in [rgb, depth]:/#[CNode]51
    %2 : Func = Primitive::getattr{prim_type=1}(%para3135, "append")    #(List[], String) #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(31)/      squeeze_array.append(P.ReduceMean()(tview, -1)) #dim=/#[CNode]184
    %3 : Func = ClassType() #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(31)/      squeeze_array.append(P.ReduceMean()(tview, -1)) #dim=/#[CNode]185
    %4 : Func = ClassType() #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(30)/      tview = P.Reshape()(tensor, (tensor.shape[:2] + (-1,),))/#[CNode]186
    %5 : $(construct.49):List[Tensor(F32)*2] = DoSignaturePrimitive::S-Prim-make_list{prim_type=1}(%para3132, %para3133)    #(Tensor(F32)[8, 256, 16, 28, 28], Tensor(F32)[8, 256, 16, 28, 28]) #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(29)/    for tensor in [rgb, depth]:/#[CNode]176
    %6 : Tensor(F32)[8, 256, 16, 28, 28] = DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%5, %para3134)    #(List[Tensor(F32)*2], I64) #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(29)/    for tensor in [rgb, depth]:/#tensor
    %7 : Tuple[I64*5] = Primitive::getattr{prim_type=1}(%6, "shape")    #(Tensor(F32)[8, 256, 16, 28, 28], String) #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(30)/      tview = P.Reshape()(tensor, (tensor.shape[:2] + (-1,),))/#[CNode]187
    %8 : Slice[kMetaTypeNone : Int64 : kMetaTypeNone] = DoSignaturePrimitive::S-Prim-make_slice{prim_type=1}(None, I64(2), None)    #(NoneType, I64, NoneType) #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(30)/      tview = P.Reshape()(tensor, (tensor.shape[:2] + (-1,),))/#[CNode]188
    %9 : Tuple[I64*2] = DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%7, %8)    #(Tuple[I64*5], Slice[kMetaTypeNone : Int64 : kMetaTypeNone]) #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(30)/      tview = P.Reshape()(tensor, (tensor.shape[:2] + (-1,),))/#[CNode]189
    %10 : I64 = DoSignaturePrimitive::S-Prim-negative{prim_type=1}(I64(1))    #(I64) #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(30)/      tview = P.Reshape()(tensor, (tensor.shape[:2] + (-1,),))/#[CNode]190
    %11 : Tuple[I64] = DoSignaturePrimitive::S-Prim-MakeTuple{prim_type=1}(%10)    #(I64) #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(30)/      tview = P.Reshape()(tensor, (tensor.shape[:2] + (-1,),))/#[CNode]191
    %12 : Tuple[I64*3] = DoSignaturePrimitive::S-Prim-add{prim_type=1}(%9, %11)    #(Tuple[I64*2], Tuple[I64]) #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(30)/      tview = P.Reshape()(tensor, (tensor.shape[:2] + (-1,),))/#[CNode]192
    %13 : Tuple[Tuple[I64*3]] = DoSignaturePrimitive::S-Prim-MakeTuple{prim_type=1}(%12)    #(Tuple[I64*3]) #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(30)/      tview = P.Reshape()(tensor, (tensor.shape[:2] + (-1,),))/#[CNode]193

#------------------------> 12
    %14 = %4(%6, %13)    #(Tensor(F32)[8, 256, 16, 28, 28], Tuple[Tuple[I64*3]]) #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(30)/      tview = P.Reshape()(tensor, (tensor.shape[:2] + (-1,),))/#tview
    %15 = DoSignaturePrimitive::S-Prim-negative{prim_type=1}(I64(1))    #(Undefined) #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(31)/      squeeze_array.append(P.ReduceMean()(tview, -1)) #dim=/#[CNode]194
    %16 = %3(%14, %15)    #(Undefined, Undefined) #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(31)/      squeeze_array.append(P.ReduceMean()(tview, -1)) #dim=/#[CNode]195
    %17 = %2(%16)    #(Undefined) #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(31)/      squeeze_array.append(P.ReduceMean()(tview, -1)) #dim=/#squeeze_array
    %18 = FuncGraph::fg_50(%1, %17)    #(I64, Undefined)    # fg_50=⤾construct.50 #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(29)/    for tensor in [rgb, depth]:/#[CNode]196
    Primitive::Return{prim_type=1}(%18)    #(Undefined) #scope: Default/network-NetWithLoss/network-MMTNet/mmtm1-MMTM
      # In file /data2/project/gesture/GesRec-mindspore/models/mmtnet.py(29)/    for tensor in [rgb, depth]:/#[CNode]197
}
# order:
#   1: ⥁construct.52:tensor{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]176, [2]: @[CNode]51}
#   2: ⥁construct.52:[CNode]51{[0]: ValueNode<MultitypeFuncGraph> add.9, [1]: @[CNode]51, [2]: ValueNode<Int64Imm> 1}
#   3: ⥁construct.52:[CNode]186{[0]: ValueNode<ClassType> class 'mindspore.ops.operations.array_ops.Reshape'}
#   4: ⥁construct.52:[CNode]187{[0]: ValueNode<Primitive> getattr, [1]: tensor, [2]: ValueNode<StringImm> shape}
#   5: ⥁construct.52:[CNode]188{[0]: ValueNode<DoSignaturePrimitive> S-Prim-make_slice, [1]: ValueNode<None> None, [2]: ValueNode<Int64Imm> 2, [3]: ValueNode<None> None}
#   6: ⥁construct.52:[CNode]189{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]187, [2]: [CNode]188}
#   7: ⥁construct.52:[CNode]190{[0]: ValueNode<DoSignaturePrimitive> S-Prim-negative, [1]: ValueNode<Int64Imm> 1}
#   8: ⥁construct.52:[CNode]191{[0]: ValueNode<DoSignaturePrimitive> S-Prim-MakeTuple, [1]: [CNode]190}
#   9: ⥁construct.52:[CNode]192{[0]: ValueNode<DoSignaturePrimitive> S-Prim-add, [1]: [CNode]189, [2]: [CNode]191}
#  10: ⥁construct.52:[CNode]193{[0]: ValueNode<DoSignaturePrimitive> S-Prim-MakeTuple, [1]: [CNode]192}
#  11: ⥁construct.52:tview{[0]: [CNode]186, [1]: tensor, [2]: [CNode]193}
#  12: ⥁construct.52:[CNode]184{[0]: ValueNode<Primitive> getattr, [1]: Φsqueeze_array, [2]: ValueNode<StringImm> append}
#  13: ⥁construct.52:[CNode]185{[0]: ValueNode<ClassType> class 'mindspore.ops.operations.math_ops.ReduceMean'}
#  14: ⥁construct.52:[CNode]194{[0]: ValueNode<DoSignaturePrimitive> S-Prim-negative, [1]: ValueNode<Int64Imm> 1}
#  15: ⥁construct.52:[CNode]195{[0]: [CNode]185, [1]: tview, [2]: [CNode]194}
#  16: ⥁construct.52:squeeze_array{[0]: [CNode]184, [1]: [CNode]195}
#  17: ⥁construct.52:[CNode]196{[0]: ValueNode<FuncGraph> ⤾construct.50, [1]: [CNode]51, [2]: squeeze_array}
#  18: ⥁construct.52:[CNode]197{[0]: ValueNode<Primitive> Return, [1]: [CNode]196}


#===============================================================================
# num of function graphs in stack: 13/14 (Ignored 1 internal frames).
